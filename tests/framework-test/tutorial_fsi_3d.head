//
-----------------------------------------------------DISCRETISATION
//
// Number of meshes in fluid field
NUMFLUIDDIS                     1
//
// Number of meshes in structural field
NUMSTRUCDIS                     1
//
// Number of meshes in ale field
NUMALEDIS                       1
//
// Number of meshes in arterial network field
NUMARTNETDIS                    1
//
// Number of meshes in thermal field
NUMTHERMDIS                     1
//
// Number of meshes in reduced dimensional airways network field
NUMAIRWAYSDIS                   1
//
--------------------------------------------------------PROBLEM TYP
//     AeroCode_Thermo_Fluid_Structure_Interaction
//     Ale
//     ArterialNetwork
//     Atherosclerosis_Fluid_Structure_Interaction
//     Biofilm_Fluid_Structure_Interaction
//     Cardiac_Monodomain
//     Combustion
//     Crack
//     Electrochemistry
//     Fluid
//     Fluid_Ale
//     Fluid_Freesurface
//     Fluid_Poro_Structure_Interaction_XFEM
//     Fluid_Porous_Structure_Interaction
//     Fluid_Porous_Structure_Scalar_Scalar_Interaction
//     Fluid_RedModels
//     Fluid_Structure_Crack_Interaction
//     Fluid_Structure_Interaction
//     Fluid_Structure_Interaction_Lung
//     Fluid_Structure_Interaction_RedModels
//     Fluid_Structure_Interaction_XFEM
//     Fluid_XFEM
//     Fluid_XFEM_LevelSet
//     Immersed_FSI
//     Inverse_Analysis
//     Level_Set
//     Low_Mach_Number_Flow
//     NP_Supporting_Procs
//     Particle
//     Poroelastic_scalar_transport
//     Poroelasticity
//     RedAirways_Tissue
//     ReducedDimensionalAirWays
//     Scalar_Thermo_Interaction
//     Scalar_Transport
//     StatMech
//     Structure
//     Structure_Ale
//     Structure_Scalar_Interaction
//     Thermo
//     Thermo_Fluid_Structure_Interaction
//     Thermo_Structure_Interaction
//     Two_Phase_Flow
//     UQ
PROBLEMTYP                      Fluid_Structure_Interaction
//
RESTART                         0
//
// Used defined restart time
RESTARTTIME                     -1
//
// Defines the function spaces for the spatial approximation
//     Polynomial,Nurbs,HDG
SHAPEFCT                        Polynomial
//
// Set the random seed. If < 0 use current time.
RANDSEED                        -1
//

-----------------------------------------------------------------IO
//
//     Yes,No,yes,no,YES,NO
OUTPUT_GMSH                     No
//
// Do you want to have binary output?
//     Yes,No,yes,no,YES,NO
OUTPUT_BIN                      yes
//
// Do you desire structural displ. output every Newton iteration
//     Yes,No,yes,no,YES,NO
OUTPUT_EVERY_ITER               no
//
// Add an output name affix by introducing a additional number
OEI_FILE_COUNTER                0
//
// Output of displacements
//     Yes,No,yes,no,YES,NO
STRUCT_DISP                     Yes
//
// Output of velocity and acceleration
//     Yes,No,yes,no,YES,NO
STRUCT_VEL_ACC                  No
//
// Output of strain energy
//     Yes,No,yes,no,YES,NO
STRUCT_SE                       No
//
// Output of stress
//     No,no,NO,Yes,yes,YES,Cauchy,cauchy,2PK,2pk
STRUCT_STRESS                   No
//
//     No,no,NO,Yes,yes,YES,Cauchy,cauchy,2PK,2pk
STRUCT_COUPLING_STRESS          No
//
// Output of strains
//     No,no,NO,Yes,yes,YES,EA,ea,GL,gl,LOG,log
STRUCT_STRAIN                   No
//
//     No,no,NO,Yes,yes,YES,EA,ea,GL,gl
STRUCT_PLASTIC_STRAIN           No
//
//     Yes,No,yes,no,YES,NO
STRUCT_SURFACTANT               No
//
//     Yes,No,yes,no,YES,NO
FLUID_SOL                       Yes
//
//     Yes,No,yes,no,YES,NO
FLUID_STRESS                    No
//
//     Yes,No,yes,no,YES,NO
FLUID_WALL_SHEAR_STRESS         No
//
//     Yes,No,yes,no,YES,NO
FLUID_ELEDATA_EVRY_STEP         No
//
//     Yes,No,yes,no,YES,NO
FLUID_VIS                       No
//
//     Yes,No,yes,no,YES,NO
THERM_TEMPERATURE               No
//
//     None,No,NO,no,Current,Initial
THERM_HEATFLUX                  None
//
//     None,No,NO,no,Current,Initial
THERM_TEMPGRAD                  None
//
// Amount of timesteps written to a single result file
FILESTEPS                       1000
//
// Print to screen every n step
STDOUTEVRY                      1
//
// Write screen output
//     Yes,No,yes,no,YES,NO
WRITE_TO_SCREEN                 Yes
//
// Write the output into a file
//     Yes,No,yes,no,YES,NO
WRITE_TO_FILE                   No
//
// Put a <GroupID>: in front of every line
//     Yes,No,yes,no,YES,NO
PREFIX_GROUP_ID                 No
//
// Only the specified procs will write output
LIMIT_OUTP_TO_PROC              -1
//
// number of nodal clouds
-------------------------------------------------DESIGN DESCRIPTION
//
// number of points
NDPOINT                         0
//
// number of line clouds
NDLINE                          0
//
// number of surface clouds
NDSURF                          0
//
// number of volume clouds
NDVOL                           0
//
-------------------------------------------------STRUCTURAL DYNAMIC
//
INT_STRATEGY                   Standard
// type of time integration control
//     Statics
//     GenAlpha
//     OneStepTheta
//     GEMM
//     ExplicitEuler
//     CentrDiff
//     AdamsBashforth2
//     EulerMaruyama
//     EulerImpStoch
//     StatMech
DYNAMICTYP                      GenAlpha
//
// prestressing takes values none mulf id
//     none,None,NONE,mulf,Mulf,MULF,id,Id,ID
PRESTRESS                       none
//
// time to switch from pre to post stressing
PRESTRESSTIME                   0
//
// save displacements and contact forces every RESULTSEVRY steps
RESULTSEVRY                     1
//
// write system energies every requested step
RESEVRYERGY                     0
//
// write restart possibility every RESTARTEVRY steps
RESTARTEVRY                     1
//
// time step size
TIMESTEP                        0.05
//
// maximum number of steps
NUMSTEP                         200
//
// maximum time
MAXTIME                         5
//
// type of damping: (1) Rayleigh damping matrix and use it from M_DAMP x M + K_DAMP x K, (2) Material based and calculated in elements
//     no,No,NO,yes,Yes,YES,Rayleigh,Material,BrownianMotion
DAMPING                         No
//
M_DAMP                          -1
//
K_DAMP                          -1
//
// Scaled director conditioning for thin shell structures
//     no,No,NO,Symmetric,Right
STC_SCALING                     no
//
// number of STC layers for multilayer case
STC_LAYER                       1
//
// pseudo time step for pseudo transient continuation (PTC) stabilized Newton procedure
PTCDT                           0.1
//
// What to do with time integration when Newton-Raphson iteration failed
//     stop
//     continue
//     repeat_step
//     halve_step
//     adapt_step
//     rand_adapt_step
//     rand_adapt_step_ele_err
//     repeat_simulation
//
// maximum number of line search steps
LSMAXITER                       30
//
MATERIALTANGENT                 analytical
//
// Application of nonlinear inertia terms
//     No,no,Standard,standard,Rotations,rotations
MASSLIN                         No
//
// Type of predictor
//     Vague
//     ConstDis
//     ConstVel
//     ConstAcc
//     ConstDisVelAcc
//     TangDis
//     ConstDisPres
//     ConstDisVelAccPres
PREDICT                         ConstDis
//
// Lump the mass matrix for explicit time integration
//     Yes,No,yes,no,YES,NO
LUMPMASS                        No
//
// Use the modified explicit Euler time integration scheme
//     Yes,No,yes,no,YES,NO
MODIFIEDEXPLEULER               Yes
//
// number of linear solver used for structural problems
LINEAR_SOLVER                   3
//
// How the geometry is specified
//     full,box,file
GEOMETRY                        full
//
----------------------------------------STRUCTURAL DYNAMIC/GENALPHA
//
// mid-average type of internal forces
//     Vague,ImrLike,TrLike
GENAVG                          TrLike
//RHO must be set to -1 to activate the four parameters
RHO_INF                         -1.0
// Generalised-alpha factor in (0,1/2]
BETA                            0.25
//
// Generalised-alpha factor in (0,1]
GAMMA                           0.5
//
// Generalised-alpha factor in [0,1)
ALPHA_M                         0.5
//
// Generalised-alpha factor in [0,1)
ALPHA_F                         0.5
//
--------------------------------------------STRUCT NOX/Status Test
// The XML file contains all nonlinear solver related information
XML File                       =  fsi_part_struct_solver.xml
----------------------------------------------------MORTAR COUPLING
//
// Type of employed set of shape functions
//     Dual,dual,Standard,standard,std,PetrovGalerkin,petrovgalerkin,pg
LM_SHAPEFCN                     Dual
//
// Type of contact search
//     BruteForce
//     bruteforce
//     BruteForceEleBased
//     bruteforceelebased
//     BinaryTree
//     Binarytree
//     binarytree
SEARCH_ALGORITHM                Binarytree
//
// Radius / Bounding volume inflation for contact search
SEARCH_PARAM                    0.3
//
// If chosen auxiliary position is used for computing dops
//     Yes,No,yes,no,YES,NO
SEARCH_USE_AUX_POS              Yes
//
// Type of LM interpolation for quadratic FE
//     undefined,quad,quadratic,pwlin,piecewiselinear,lin,linear
LM_QUAD                         undefined
//
// If chosen, multipliers are removed from crosspoints / edge nodes
//     Yes,No,yes,no,YES,NO
CROSSPOINTS                     No
//
// If chosen consistent dual shape functions are calculated
//     none,boundary,all
LM_DUAL_CONSISTENT              boundary
//
// Type of mesh relocation
//     Initial,initial,Every_Timestep,every_timestep,No,no
MESH_RELOCATION                 Initial
//
// Type of meshtying/contact algorithm
//     mortar,Mortar,nts,NTS
ALGORITHM                       Mortar
//
// Type of numerical integration scheme
//     Segments,segments,Elements,elements,Elements_BS,elements_BS
INTTYPE                         Segments
//
// Number of employed integration points per dimension
NUMGP_PER_DIM                   0
//
// Type of triangulation for segment-based integration
//     Delaunay,delaunay,Center,center
TRIANGULATION                   Delaunay
//
-------------------------------------MORTAR COUPLING/PARALLEL REDISTRIBUTION
//
// Maximum value of load balance measure before parallel redistribution
MAX_BALANCE_EVAL_TIME           2
//
// Minimum no. of elements per processor for parallel redistribution
MIN_ELEPROC                     0
//
// Type of interface ghosting and ghosting extension algorithm
//                              redundant_all, redundant_master, round_robin, bining
GHOSTING_STRATEGY               redundant_master
//
// Type of redistribution algorithm
//     None,none,No,no,Static,static,Dynamic,dynamic
PARALLEL_REDIST                 Static
//
------------------------------------------------------FLUID DYNAMIC
//
// Physical Type
//     Incompressible
//     Artificial_compressibility
//     Varying_density
//     Loma
//     Boussinesq
//     Stokes
//     Oseen
PHYSICAL_TYPE                   Incompressible
//
// number of linear solver used for fluid dynamics
LINEAR_SOLVER                   2
//
// number of linear solver used for fluid dynamics (ONLY NECESSARY FOR BlockGaussSeidel solver block within fluid mehstying case any more!!!!)
SIMPLER_SOLVER                  -1
//
// which type of stresses and wss
//     Standard,Aggregation,Mean
WSS_TYPE                        Standard
//
// Set ML-solver number for smoothing of residual-based calculated wallshearstress via plain aggregation.
WSS_ML_AGR_SOLVER               -1
//
// Time Integration Scheme
//     Stationary,Np_Gen_Alpha,Af_Gen_Alpha,One_Step_Theta,BDF2
TIMEINTEGR                      One_Step_Theta
//
// One step theta option for time discretization of continuity eq. and pressure
//     Cont_normal_Press_normal,Cont_impl_Press_normal,Cont_impl_Press_impl
OST_CONT_PRESS                  Cont_normal_Press_normal
//
// How the geometry is specified
//     full,box,file
GEOMETRY                        full
//
// Nonlinear iteration scheme
//     fixed_point_like,Newton
NONLINITER                      fixed_point_like
//
// Predictor for first guess in nonlinear iteration
//     steady_state
//     zero_acceleration
//     constant_acceleration
//     constant_increment
//     explicit_second_order_midpoint
//     TangVel
PREDICTOR                       steady_state
//
// norm for convergence check
//     L_2_norm
CONVCHECK                       L_2_norm
//
// do not evaluate residual after solution has converged (->faster)
//     Yes,No,yes,no,YES,NO
INCONSISTENT_RESIDUAL           No
//
// Initial field for fluid problem
//     zero_field
//     field_by_function
//     disturbed_field_from_function
//     FLAME_VORTEX_INTERACTION
//     BELTRAMI-FLOW
//     KIM-MOIN-FLOW
//     hit_comte_bellot_corrsin_initial_field
//     forced_hit_simple_algebraic_spectrum
//     forced_hit_numeric_spectrum
//     forced_hit_passive
INITIALFIELD                    zero_field
//
// function number of Oseen advective field
OSEENFIELDFUNCNO                -1
//
// Calculate lift and drag forces along specified boundary
//     Yes,No,yes,no,YES,NO
LIFTDRAG                        No
//
// form of convective term
//     convective,conservative
CONVFORM                        convective
//
// Flag to activate check for potential nonlinear boundary conditions
//     no,yes
NONLINEARBC                     no
//
// Flag to (de)activate mesh tying algorithm
//     no,Condensed_Smat,Condensed_Bmat,Condensed_Bmat_merged
MESHTYING                       no
//
// scheme for determination of gridvelocity from displacements
//     BE,BDF2,OST
GRIDVEL                         BE
//
// all dof (incl. pressure) are coupled
//     Yes,No,yes,no,YES,NO
ALLDOFCOUPLED                   Yes
//
// Flag to (de)activate error calculations
//     no
//     beltrami_flow
//     channel2D
//     gravitation
//     shear_flow
//     byfunct
//     beltrami_stat_stokes
//     beltrami_stat_navier_stokes
//     beltrami_instat_stokes
//     beltrami_instat_navier_stokes
//     kimmoin_stat_stokes
//     kimmoin_stat_navier_stokes
//     kimmoin_instat_stokes
//     kimmoin_instat_navier_stokes
//     fsi_fluid_pusher
CALCERROR                       no
//
// Function for Error Calculation
CALCERRORFUNCNO                 -1
//
// Switch on SIMPLE family of solvers, only works with block preconditioners like CheapSIMPLE!
//     Yes,No,yes,no,YES,NO
SIMPLER                         no
//
// Switch on adaptive control of linear solver tolerance for nonlinear solution
//     Yes,No,yes,no,YES,NO
ADAPTCONV                       yes
//
// The linear solver shall be this much better than the current nonlinear residual in the nonlinear convergence limit
ADAPTCONV_BETTER                0.1
//
// Scale blocks of matrix with row infnorm?
//     Yes,No,yes,no,YES,NO
INFNORMSCALING                  no
//
// write output to gmsh files
//     Yes,No,yes,no,YES,NO
GMSH_OUTPUT                     No
//
// Compute divergence of velocity field at the element center
//     Yes,No,yes,no,YES,NO
COMPUTE_DIVU                    No
//
// Compute kinetic energy at the end of each time step and write it to file.
//     Yes,No,yes,no,YES,NO
COMPUTE_EKIN                    No
//
// Solve the Navier-Stokes equation with the new One Step Theta algorithm
//     Yes,No,yes,no,YES,NO
NEW_OST                         No
//
// Increment for writing solution
RESULTSEVRY                      1
//
// Increment for writing restart
RESTARTEVRY                     20
//
// Total number of Timesteps
NUMSTEP                         1
//
// steady state check every step
STEADYSTEP                      -1
//
// Number of Steps for Starting Scheme
NUMSTASTEPS                     0
//
// Function for Initial Starting Field
STARTFUNCNO                     -1
//
// max. number of nonlin. iterations
ITEMAX                          10
//
// max number of nonlinear iterations for initial stationary solution
INITSTATITEMAX                  5
//
// Time increment dt
TIMESTEP                        0.01
//
// Total simulation time
MAXTIME                         1000
//
// Time integration factor
ALPHA_M                         1
//
// Time integration factor
ALPHA_F                         1
//
// Time integration factor
GAMMA                           1
//
// Time integration factor
THETA                           0.66
//
// Time integration factor for starting scheme
START_THETA                     1
//
// Flag to (de)activate potential Strong 3D redD coupling
//     no,yes
STRONG_REDD_3D_COUPLING_TYPE    no
//
// Number of linear solver used for L2 projection
VELGRAD_PROJ_SOLVER             -1
//
// Flag to (de)activate gradient reconstruction.
//     none,superconvergent_patch_recovery,L2_projection
VELGRAD_PROJ_METHOD             none
//
--------------------------------------FLUID DYNAMIC/NONLINEAR SOLVER TOLERANCES
TOL_VEL_RES                           1.e-06
TOL_VEL_INC                           1.e-06
TOL_PRES_RES                          1.e-06
TOL_PRES_INC                          1.e-06
-------------------------FLUID DYNAMIC/RESIDUAL-BASED STABILIZATION
//
// Apply (un)stabilized fluid formulation
//     no_stabilization,residual_based,edge_based,pressure_projection
STABTYPE                        residual_based
//
// residual based without second derivatives (i.e. only consistent for tau->0, but faster)
//     Yes,No,yes,no,YES,NO
INCONSISTENT                    No
//
// residual computed with a reconstruction of the second derivatives via projection or superconvergent patch recovery
//     Yes,No,yes,no,YES,NO
Reconstruct_Sec_Der             No
//
// Flag to allow time dependency of subscales for residual-based stabilization.
//     quasistatic,time_dependent
TDS                             quasistatic
//
// Specify how to treat the transient term.
//     no_transient,yes_transient,transient_complete
TRANSIENT                       no_transient
//
// Flag to (de)activate PSPG stabilization.
//     Yes,No,yes,no,YES,NO
PSPG                            Yes
//
// Flag to (de)activate SUPG stabilization.
//     Yes,No,yes,no,YES,NO
SUPG                            Yes
//
// Flag to (de)activate grad-div term.
//     Yes,No,yes,no,YES,NO
GRAD_DIV                        Yes
//
// Flag to (de)activate viscous term in residual-based stabilization.
//     no_vstab,vstab_gls,vstab_gls_rhs,vstab_usfem,vstab_usfem_rhs
VSTAB                           no_vstab
//
// Flag to (de)activate reactive term in residual-based stabilization.
//     no_rstab,rstab_gls,rstab_usfem
RSTAB                           no_rstab
//
// Flag to (de)activate cross-stress term -> residual-based VMM.
//     no_cross,yes_cross,cross_rhs
CROSS-STRESS                    no_cross
//
// Flag to (de)activate Reynolds-stress term -> residual-based VMM.
//     no_reynolds,yes_reynolds,reynolds_rhs
REYNOLDS-STRESS                 no_reynolds
//
// Definition of tau_M and Tau_C
//     Taylor_Hughes_Zarins
//     Taylor_Hughes_Zarins_wo_dt
//     Taylor_Hughes_Zarins_Whiting_Jansen
//     Taylor_Hughes_Zarins_Whiting_Jansen_wo_dt
//     Taylor_Hughes_Zarins_scaled
//     Taylor_Hughes_Zarins_scaled_wo_dt
//     Franca_Barrenechea_Valentin_Frey_Wall
//     Franca_Barrenechea_Valentin_Frey_Wall_wo_dt
//     Shakib_Hughes_Codina
//     Shakib_Hughes_Codina_wo_dt
//     Codina
//     Codina_wo_dt
//     Codina_convscaled
//     Franca_Madureira_Valentin_Badia_Codina
//     Franca_Madureira_Valentin_Badia_Codina_wo_dt
//     Hughes_Franca_Balestra_wo_dt
DEFINITION_TAU                  Franca_Barrenechea_Valentin_Frey_Wall
//
// Characteristic element length for tau_Mu
//     streamlength,volume_equivalent_diameter,root_of_volume
CHARELELENGTH_U                 streamlength
//
// Characteristic element length for tau_Mp/tau_C
//     streamlength,volume_equivalent_diameter,root_of_volume
CHARELELENGTH_PC                volume_equivalent_diameter
//
// Location where tau is evaluated
//     element_center,integration_point
EVALUATION_TAU                  element_center
//
// Location where material law is evaluated
//     element_center,integration_point
EVALUATION_MAT                  element_center
//
// Flag to (de)activate SUPG stabilization in loma continuity equation.
//     Yes,No,yes,no,YES,NO
LOMA_CONTI_SUPG                 No
//
// Flag to (de)activate cross-stress term loma continuity equation-> residual-based VMM.
//     no_cross,yes_cross,cross_rhs
LOMA_CONTI_CROSS_STRESS         no_cross
//
// Flag to (de)activate Reynolds-stress term loma continuity equation-> residual-based VMM.
//     no_reynolds,yes_reynolds,reynolds_rhs
LOMA_CONTI_REYNOLDS_STRESS      no_reynolds
//
--------------------------------------------------------ALE DYNAMIC
//
TIMESTEP                        0.1
//
NUMSTEP                         41
//
MAXTIME                         4
//
// ale mesh movement algorithm
//     solid,laplace,springs
ALE_TYPE                        solid
//
// Maximum number of newton iterations.
MAXITER                         1
//
// Absolute tolerance for length scaled L2 residual norm
TOLRES                          1e-06
//
// Absolute tolerance for length scaled L2 increment norm
TOLDISP                         1e-06
//
NUM_INITSTEP                    0
//
// write restart data every RESTARTEVRY steps
RESTARTEVRY                     1
//
// write results every RESULTSTEVRY steps
RESULTSEVRY                     0
//
// What to do if nonlinear solver does not converge?
//     stop,continue
DIVERCONT                       continue
//
// number of linear solver used for ale problems...
LINEAR_SOLVER                   1
//
// control parameters for scalar transport problems
--------------------------------------------------------FSI DYNAMIC
//
// Iteration Scheme over the fields
//     basic_sequ_stagg
//     iter_stagg_fixed_rel_param
//     iter_stagg_AITKEN_rel_param
//     iter_stagg_steep_desc
//     iter_stagg_NLCG
//     iter_stagg_MFNK_FD
//     iter_stagg_MFNK_FSI
//     iter_stagg_MPE
//     iter_stagg_RRE
//     iter_monolithicfluidsplit
//     iter_monolithicstructuresplit
//     iter_lung_monolithicstructuresplit
//     iter_lung_monolithicfluidsplit
//     iter_xfem_monolithic
//     pseudo_structure
//     iter_constr_monolithicfluidsplit
//     iter_constr_monolithicstructuresplit
//     iter_mortar_monolithicstructuresplit
//     iter_mortar_monolithicfluidsplit
//     iter_fluidfluid_monolithicstructuresplit
//     iter_fluidfluid_monolithicfluidsplit
//     iter_fluidfluid_monolithicstructuresplit_nonox
//     iter_fluidfluid_monolithicfluidsplit_nonox
COUPALGO                        iter_stagg_AITKEN_rel_param
//
// Output of unconverged interface values during FSI iteration.
// There will be a new control file for each time step.
// This might be helpful to understand the coupling iteration.
//     No,Yes,no,yes,NO,YES,Interface,Preconditioner,All
DEBUGOUTPUT                     No
//
// Second order displacement-velocity conversion at the interface.
//     Yes,No,yes,no,YES,NO
SECONDORDER                     No
//
// Total number of Timesteps
NUMSTEP                         3
//
// Increment for writing solution
RESULTSEVRY                     1
//
// Increment for writing restart
RESTARTEVRY                     1
//
// Time increment dt
TIMESTEP                        0.1
//
// Total simulation time
MAXTIME                         1000
//
// Projection method to use for sliding FSI.
//     None,Curr,Ref,RotZ,RotZSphere
SLIDEALEPROJ                    None
//
--------------------------------------FSI DYNAMIC/MONOLITHIC SOLVER
//
// Include linearization with respect to mesh movement in Navier Stokes equation.
//     Yes,No,yes,no,YES,NO
SHAPEDERIVATIVES                No
//
// Write artificial interface energie due to temporal discretization to file
//     Yes,No,yes,no,YES,NO
ENERGYFILE                      No
//
// Maximum allowed number of nonlinear iterations
ITEMAX                          100
//
// Scale Blocks with row infnorm?
//     Yes,No,yes,no,YES,NO
INFNORMSCALING                  Yes
//
// Symmetric block GS preconditioner or ordinary GS
//     Yes,No,yes,no,YES,NO
SYMMETRICPRECOND                No
//
// Number of iterations in one time step reusing the preconditioner before rebuilding it
PRECONDREUSE                    0
//
// Enforce rebuilding the preconditioner at the beginning of every time step
//     Yes,No,yes,no,YES,NO
REBUILDPRECEVERYSTEP            Yes
//
// Linear solver algorithm for monolithic block system in monolithic FSI.
// Most of the time preconditioned Krylov is the right thing to choose. But there are
// block Gauss-Seidel methods as well.
//     PreconditionedKrylov,FSIAMG,AMGnxn
LINEARBLOCKSOLVER               PreconditionedKrylov
//
// run analysis on fsiamg multigrid scheme
//     Yes,No,yes,no,YES,NO
FSIAMGANALYZE                   No
//
// Relaxation factor for Richardson iteration on structural block in MFSI block preconditioner
// FSIAMG: each number belongs to a level
// PreconditiondKrylov: only first number is used for finest level
STRUCTPCOMEGA                   1.0 1.0 1.0 1.0
//
// Number of Richardson iterations on structural block in MFSI block preconditioner
// FSIAMG: each number belongs to a level
// PreconditiondKrylov: only first number is used for finest level
STRUCTPCITER                    1 1 1 1
//
// Relaxation factor for Richardson iteration on fluid block in MFSI block preconditioner
// FSIAMG: each number belongs to a level
// PreconditiondKrylov: only first number is used for finest level
FLUIDPCOMEGA                    1.0 1.0 1.0 1.0
//
// Number of Richardson iterations on fluid block in MFSI block preconditioner
// FSIAMG: each number belongs to a level
// PreconditiondKrylov: only first number is used for finest level
FLUIDPCITER                     1 1 1 1
//
// Relaxation factor for Richardson iteration on ale block in MFSI block preconditioner
// FSIAMG: each number belongs to a level
// PreconditiondKrylov: only first number is used for finest level
ALEPCOMEGA                      1.0 1.0 1.0 1.0
//
// Number of Richardson iterations on ale block in MFSI block preconditioner
// FSIAMG: each number belongs to a level
// PreconditiondKrylov: only first number is used for finest level
ALEPCITER                       1 1 1 1
//
// Relaxation factor for Richardson iteration on whole MFSI block preconditioner
// FSIAMG: each number belongs to a level
// PreconditiondKrylov: only first number is used for finest level
PCOMEGA                         1.0 1.0 1.0
//
// Number of Richardson iterations on whole MFSI block preconditioner
// FSIAMG: each number belongs to a level
// PreconditiondKrylov: only first number is used for finest level
PCITER                          1 1 1
//
// Type of block smoother, can be BGS or Schur
BLOCKSMOOTHER                   BGS BGS BGS
//
// Damping factor for Schur complement construction
SCHUROMEGA                      0.001 0.01 0.1
//
// Required distance for adaptive convergence check in Newton-type FSI.
// This is the improvement we want to achieve in the linear extrapolation of the
// adaptive convergence check. Set to zero to avoid the adaptive check altogether.
ADAPTIVEDIST                    0
//
// Basic tolerance for adaptive convergence check in monolithic FSI.
// This tolerance will be used for the linear solve of the FSI block system.
// The linear convergence test will always use the relative residual norm (AZ_r0).
// Not to be confused with the Newton tolerance (CONVTOL) that applies
// to the nonlinear convergence test using a absolute residual norm.
BASETOL                         0.001
//
// Nonlinear tolerance for lung/constraint/fluid-fluid FSI
CONVTOL                         1e-06
//
// type of norm for primary variables convergence check
//     Abs,Rel,Mix
NORM_INC                        Rel
//
// type of norm for residual convergence check
//     Abs,Rel,Mix
NORM_RESF                       Rel
//
// binary operator to combine primary variables and residual force values
//     And
NORMCOMBI_RESFINC               And
//
// Absolute tolerance for structure displacement residual in L2-norm
TOL_DIS_RES_L2                  1e-06
//
// Absolute tolerance for structure displacement residual in Inf-norm
TOL_DIS_RES_INF                 1e-06
//
// Absolute tolerance for structure displacement increment in L2-norm
TOL_DIS_INC_L2                  1e-06
//
// Absolute tolerance for structure displacement increment in Inf-norm
TOL_DIS_INC_INF                 1e-06
//
// Absolute tolerance for interface residual in L2-norm
TOL_FSI_RES_L2                  1e-06
//
// Absolute tolerance for interface residual in Inf-norm
TOL_FSI_RES_INF                 1e-06
//
// Absolute tolerance for interface increment in L2-norm
TOL_FSI_INC_L2                  1e-06
//
// Absolute tolerance for interface increment in Inf-norm
TOL_FSI_INC_INF                 1e-06
//
// Absolute tolerance for fluid pressure residual in L2-norm
TOL_PRE_RES_L2                  1e-06
//
// Absolute tolerance for fluid pressure residual in Inf-norm
TOL_PRE_RES_INF                 1e-06
//
// Absolute tolerance for fluid pressure increment in L2-norm
TOL_PRE_INC_L2                  1e-06
//
// Absolute tolerance for fluid pressure increment in Inf-norm
TOL_PRE_INC_INF                 1e-06
//
// Absolute tolerance for fluid velocity residual in L2-norm
TOL_VEL_RES_L2                  1e-06
//
// Absolute tolerance for fluid velocity residual in Inf-norm
TOL_VEL_RES_INF                 1e-06
//
// Absolute tolerance for fluid velocity increment in L2-norm
TOL_VEL_INC_L2                  1e-06
//
// Absolute tolerance for fluid velocity increment in Inf-norm
TOL_VEL_INC_INF                 1e-06
//
-------------------------------------FSI DYNAMIC/PARTITIONED SOLVER
//
// Coupling strategies for partitioned FSI solvers.
//     DirichletNeumann,DirichletNeumannSlideALE
PARTITIONED                     DirichletNeumann
//
// Predictor for interface displacements
//     d(n)
//     d(n)+dt*(1.5*v(n)-0.5*v(n-1))
//     d(n)+dt*v(n)
//     d(n)+dt*v(n)+0.5*dt^2*a(n)
PREDICTOR                       d(n)
//
// Coupling variable at the interface
//     Displacement,Force
COUPVARIABLE                    Displacement
//
// Coupling Method Mortar (mtr) or conforming nodes at interface
//     MTR,Mtr,mtr,conforming,immersed
COUPMETHOD                      conforming
//
// Basic tolerance for adaptive convergence check in monolithic FSI.
// This tolerance will be used for the linear solve of the FSI block system.
// The linear convergence test will always use the relative residual norm (AZ_r0).
// Not to be confused with the Newton tolerance (CONVTOL) that applies
// to the nonlinear convergence test using a absolute residual norm.
BASETOL                         0.001
//
// Tolerance for iteration over fields in case of partitioned scheme
CONVTOL                         1e-06
//
// fixed relaxation parameter for partitioned FSI solvers
RELAX                           1
//
// largest omega allowed for Aitken relaxation (0.0 means no constraint)
MAXOMEGA                        0
//
// Maximum number of iterations over fields
ITEMAX                          100
//
// Project velocity into divergence-free subspace for partitioned fsi
//     Yes,No,yes,no,YES,NO
DIVPROJECTION                   no
//
-----------------------------------------------------------SOLVER 1
//
// The solver to attack the system of linear equations arising of FE approach with.
//     Amesos_KLU_sym
//     Amesos_KLU_nonsym
//     Superlu
//     Aztec_MSR
//     LAPACK_sym
//     LAPACK_nonsym
//     UMFPACK
//     Belos
//     Stratimikos_Amesos
//     Stratimikos_Aztec
//     Stratimikos_Belos
//     undefined
SOLVER                          UMFPACK
//
-----------------------------------------------------------SOLVER 2
//
// The solver to attack the system of linear equations arising of FE approach with.
//     Amesos_KLU_sym
//     Amesos_KLU_nonsym
//     Superlu
//     Aztec_MSR
//     LAPACK_sym
//     LAPACK_nonsym
//     UMFPACK
//     Belos
//     Stratimikos_Amesos
//     Stratimikos_Aztec
//     Stratimikos_Belos
//     undefined
SOLVER                          Belos
//
// Type of linear solver algorithm to use.
//     CG,GMRES,GMRESR,CGS,TFQMR,BiCGSTAB,LU,FGMRES
AZSOLVE                         GMRES
//
// Type of internal preconditioner to use.
// Note! this preconditioner will only be used if the input operator
// supports the Epetra_RowMatrix interface and the client does not pass
// in an external preconditioner!
//     none
//     ILU
//     ILUT
//     Jacobi
//     SymmGaussSeidel
//     Least_Squares
//     Neumann
//     ICC
//     LU
//     RILU
//     ML
//     MLFLUID
//     MLFLUID2
//     MLAPI
//     GaussSeidel
//     DownwindGaussSeidel
//     BGS2x2
//     BGSnxn
//     TekoSIMPLE
//     CheapSIMPLE
//     MueLu_sym
//     MueLu_nonsym
//     MueLu_contact
//     MueLu_contact2
//     MueLu_contactSP
//     MueLu_contactPenalty
//     AMGnxn
//     Chebyshev
AZPREC                          ILU
//
// The amount of overlap used for the ifpack "ilu" and "ilut" preconditioners.
IFPACKOVERLAP                   0
//
// The amount of fill allowed for the internal "ilu" preconditioner.
IFPACKGFILL                     0
//
// Combine mode for Ifpack Additive Schwarz
//     Add,Insert,Zero
IFPACKCOMBINE                   Add
//
// The maximum size of the Krylov subspace used with "GMRES" before
// a restart is performed.
AZSUB                           50
//
// The convergence test to use for terminating the iterative solver.
//     AZ_r0
//     AZ_rhs
//     AZ_Anorm
//     AZ_noscaled
//     AZ_sol
//     AZ_weighted
//     AZ_expected_values
//     AZTECOO_conv_test
//     AZ_inf_noscaled
AZCONV                          AZ_r0
//
// The number of iterations between each output of the solver's progress.
AZOUTPUT                        0
//
// how often to recompute some preconditioners
AZREUSE                         0
//
// max iterations
AZITER                          1000
//
// unused
AZGRAPH                         0
//
AZBDIAG                         0
//
// tolerance in (un)scaled residual
AZTOL                           1e-08
//
// damping for GaussSeidel and jacobi type methods
AZOMEGA                         0
//
// scaling of the system
//     none,sym,infnorm
AZSCAL                          none
//
// ML print-out level (0-10)
ML_PRINT                        0
//
// ML stop coarsening when coarse ndof smaller then this
ML_MAXCOARSESIZE                5000
//
// ML max number of levels
ML_MAXLEVEL                     5
//
// objective size of an aggregate with METIS/VBMETIS, 2D: 9, 3D: 27
ML_AGG_SIZE                     27
//
// damping fine grid
ML_DAMPFINE                     1
//
// damping med grids
ML_DAMPMED                      1
//
// damping coarse grid
ML_DAMPCOARSE                   1
//
// damping factor for prolongator smoother (usually 1.33 or 0.0)
ML_PROLONG_SMO                  0
//
// threshold for prolongator smoother/aggregation
ML_PROLONG_THRES                0
//
// no. smoothing steps or polynomial order on each level (at least ML_MAXLEVEL numbers)
ML_SMOTIMES                     1 1 1 1 1
//
//     UC,METIS,VBMETIS,MIS
ML_COARSEN                      UC
//
//     SGS
//     Jacobi
//     Chebychev
//     MLS
//     ILU
//     KLU
//     Superlu
//     GS
//     DGS
//     Umfpack
//     BS
//     SIMPLE
//     SIMPLEC
//     IBD
//     Uzawa
ML_SMOOTHERFINE                 ILU
//
//     SGS
//     Jacobi
//     Chebychev
//     MLS
//     ILU
//     KLU
//     Superlu
//     GS
//     DGS
//     Umfpack
//     BS
//     SIMPLE
//     SIMPLEC
//     IBD
//     Uzawa
ML_SMOOTHERMED                  ILU
//
//     SGS
//     Jacobi
//     Chebychev
//     MLS
//     ILU
//     KLU
//     Superlu
//     GS
//     DGS
//     Umfpack
//     BS
//     SIMPLE
//     SIMPLEC
//     IBD
//     Uzawa
ML_SMOOTHERCOARSE               Umfpack
//
// sub solver/smoother block number (SIMPLE/C: used for prediction of primary variable on all levels, BS: used for fine and intermedium BraessSarazin (BS) level smoother)
SUB_SOLVER1                     -1
//
// sub solver/smoother block number (SIMPLE/C: used for SchurComplement eq. on all levels, BS: used for coarse BraessSarazin (BS) level smoother)
SUB_SOLVER2                     -1
//
// BGS2x2 flip order parameter
//     block0_block1_order,block1_block0_order
BGS2X2_FLIPORDER                block0_block1_order
//
// damping parameter for BGS2X2 preconditioner
BGS2X2_GLOBAL_DAMPING           1
//
// damping parameter for BGS2X2 preconditioner block1
BGS2X2_BLOCK1_DAMPING           1
//
// damping parameter for BGS2X2 preconditioner block2
BGS2X2_BLOCK2_DAMPING           1
//
// allow linear solver to permute linear system to improve properties of linear system for iterative methods.
//     none,Algebraic,algebraic,Local,local
PERMUTE_SYSTEM                  none
//
// matrix rows with diagEntry/maxEntry<nonDiagDominanceRatio are marked to be significantly non-diagonal dominant (default: 1.0 = mark all non-diagonal dominant rows)
NON_DIAGDOMINANCE_RATIO         1
//
// User specified name for solver block
NAME                            Fluid solver
//
// damping parameter for SIMPLE preconditioner
SIMPLE_DAMPING                  1
//
// Name of the pre-built preconditioner to be used. If set to"XML" the preconditioner is defined using a xml file
AMGNXN_TYPE                     AMG(BGS)
//
// xml file defining the AMGnxn preconditioner
AMGNXN_XML_FILE                 none
//
// solver parameters for solver block 3
-----------------------------------------------------------SOLVER 3
//
// The solver to attack the system of linear equations arising of FE approach with.
//     Amesos_KLU_sym
//     Amesos_KLU_nonsym
//     Superlu
//     Aztec_MSR
//     LAPACK_sym
//     LAPACK_nonsym
//     UMFPACK
//     Belos
//     Stratimikos_Amesos
//     Stratimikos_Aztec
//     Stratimikos_Belos
//     undefined
SOLVER                          UMFPACK
//
----------------------------------------------------------MATERIALS
MAT 1 MAT_Struct_StVenantKirchhoff YOUNG 1000.0 NUE 0.3 DENS 500
MAT 2 MAT_fluid DYNVISCOSITY 0.01 DENSITY 1.0
MAT 3 MAT_Struct_StVenantKirchhoff YOUNG 500.0 NUE 0.3 DENS 500
-----------------------------------------------CLONING MATERIAL MAP
SRC_FIELD fluid SRC_MAT 2 TAR_FIELD ale TAR_MAT 3
-------------------------------------------------------------FUNCT1
SYMBOLIC_FUNCTION_OF_SPACE_TIME (1-cos(2*t*pi/5))
-------------------------------------------------------------FUNCT2
SYMBOLIC_FUNCTION_OF_SPACE_TIME 10*(y-1)*(1-cos(2*t*pi/5))
-------------------------------------------------------------FUNCT3
-------------------------------------------------------------FUNCT4
-------------------------------------------------RESULT DESCRIPTION
STRUCTURE DIS structure NODE 80 QUANTITY dispx VALUE 5.46812e-07 TOLERANCE 1e-12
STRUCTURE DIS structure NODE 80 QUANTITY dispy VALUE -1.17719210e-04 TOLERANCE 1e-12
FLUID DIS fluid NODE 2000 QUANTITY pressure VALUE 7.731346150e-03 TOLERANCE 1e-12
FLUID DIS fluid NODE 2000 QUANTITY velx VALUE 1.706460431e-03 TOLERANCE 1e-12
FLUID DIS fluid NODE 2000 QUANTITY vely VALUE -1.334908861e-03 TOLERANCE 1e-12
