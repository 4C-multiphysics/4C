//
-----------------------------------------------------------------ALE DYNAMIC
//
// ale mesh movement algorithm
//                              solid, springs, laplace
ALE_TYPE                        springs_spatial
//
// number of linear solver used for ale problems...
LINEAR_SOLVER                   1
//
MAXTIME                         4
//
NUMSTEP                         41
//
NUM_INITSTEP                    0
//
RESULTSEVRY                     1
//
TIMESTEP                        0.1
//
MAXITER                         4
//
TOLRES                          1.0e-4
//
TOLDISP                         1.0e-4 
//
----------------------------------------------------------DESIGN DESCRIPTION
//
// number of line clouds
NDLINE                          0
//
// number of points
NDPOINT                         0
//
// number of surface clouds
NDSURF                          0
//
// number of volume clouds
NDVOL                           0
//
--------------------------------------------------------------DISCRETISATION
//
// Number of meshes in reduced dimensional airways network field
NUMAIRWAYSDIS                   1
//
// Number of meshes in ale field
NUMALEDIS                       1
//
// Number of meshes in arterial network field
NUMARTNETDIS                    1
//
// Number of meshes in fluid field
NUMFLUIDDIS                     1
//
// Number of meshes in structural field
NUMSTRUCDIS                     1
//
// Number of meshes in thermal field
NUMTHERMDIS                     1
//
// control parameters for electrochemistry problems
---------------------------------------------------------------FLUID DYNAMIC
//
// Switch on adaptive control of linear solver tolerance for nonlinear solution
//                              Yes,No,yes,no,YES,NO
ADAPTCONV                       yes
//
// The linear solver shall be this much better than the current nonlinear residual in the nonlinear convergence limit
ADAPTCONV_BETTER                0.1
//
// Time integration factor
ALPHA_F                         1
//
// Time integration factor
ALPHA_M                         1
//
// Flag to (de)activate error calculations
//                              no
//                              beltrami_flow
//                              channel2D
//                              gravitation
//                              shear_flow
//                              jeffery_hamel_flow
//                              byfunct1
//                              beltrami_stat_stokes
//                              beltrami_stat_navier_stokes
//                              beltrami_instat_stokes
//                              beltrami_instat_navier_stokes
//                              kimmoin_stat_stokes
//                              kimmoin_stat_navier_stokes
//                              kimmoin_instat_stokes
//                              kimmoin_instat_navier_stokes
//                              fsi_fluid_pusher
CALCERROR                       no
//
// Compute divergence of velocity field at the element center
//                              Yes,No,yes,no,YES,NO
COMPUTE_DIVU                    No
//
// norm for convergence check
//                              L_2_norm,L_2_norm_without_residual_at_itemax
CONVCHECK                       L_2_norm
//
// form of convective term
//                              convective,conservative
CONVFORM                        convective
//
// Tolerance for convergence check
CONVTOL                         1e-12
//
// Time integration factor
GAMMA                           1
//
// write output to gmsh files
//                              Yes,No,yes,no,YES,NO
GMSH_OUTPUT                     No
//
// order of accuracy of mesh velocity determination
GRIDVEL                         BDF2
//
// Scale blocks of matrix with row infnorm?
//                              Yes,No,yes,no,YES,NO
INFNORMSCALING                  no
//
// Initial field for fluid problem
//                              zero_field
//                              field_by_function
//                              disturbed_field_from_function
//                              FLAME_VORTEX_INTERACTION
//                              BELTRAMI-FLOW
//                              KIM-MOIN-FLOW
//                              BOCHEV-TEST
INITIALFIELD                    zero_field
//
// max number of nonlinear iterations for initial stationary solution
INITSTATITEMAX                  5
//
// max. number of nonlin. iterations
ITEMAX                          50
//
// Calculate lift and drag forces along specified boundary
//                              No,no,Yes,yes,Nodeforce,NODEFORCE,nodeforce
LIFTDRAG                        No
//
// number of linear solver used for fluid dynamics
LINEAR_SOLVER                   2
//
// Total simulation time
MAXTIME                         1000
//
// Flag to (de)activate mesh tying algorithm
//                              no
//                              Condensed_Smat
//                              Condensed_Bmat
//                              Condensed_Bmat_merged
//                              SaddlePointSystem_coupled
//                              SaddlePointSystem_pc
//                              Coupling_ionTransport_Laplace
MESHTYING                       no
//
// Flag to activate check for potential nonlinear boundary conditions
//                              no,yes
NONLINEARBC                     no
//
// Nonlinear iteration scheme
//                              fixed_point_like,Newton
NONLINITER                      fixed_point_like
//
// Number of Steps for Starting Scheme
NUMSTASTEPS                     0
//
// Total number of Timesteps
NUMSTEP                         1
//
// Physical Type
//                              Incompressible
//                              Varying_density
//                              Loma
//                              Boussinesq
//                              Poro
//                              Topology_optimization
PHYSICAL_TYPE                   Incompressible
//
// Predictor for first guess in nonlinear iteration
//                              steady_state
//                              zero_acceleration
//                              constant_acceleration
//                              constant_increment
//                              explicit_second_order_midpoint
//                              TangVel
PREDICTOR                       steady_state
//
// Increment for writing restart
RESTARTEVRY                     20
//
// Switch on SIMPLE family of solvers, needs additional FLUID PRESSURE SOLVER block!
//                              Yes,No,yes,no,YES,NO
SIMPLER                         no
//
// Function for Initial Starting Field
STARTFUNCNO                     -1
//
// Time integration factor for starting scheme
START_THETA                     1
//
// steady state check every step
STEADYSTEP                      -1
//
// Flag to (de)activate potential Strong 3D redD coupling
//                              no,yes
STRONG_REDD_3D_COUPLING_TYPE    no
//
// Time integration factor
THETA                           0.66
//
// Time Integration Scheme
//                              Stationary,Np_Gen_Alpha,Af_Gen_Alpha,One_Step_Theta,BDF2
TIMEINTEGR                      Np_Gen_Alpha
//
// Time increment dt
TIMESTEP                        0.01
//
// Increment for writing solution
RESULTSEVRY                     1
//
----------------------------------FLUID DYNAMIC/RESIDUAL-BASED STABILIZATION
//
// Flag to (de)activate cross-stress term -> residual-based VMM.
//                              no_cross,yes_cross,cross_rhs
CROSS-STRESS                    no_cross
//
// Definition of tau_M and Tau_C
//                              Taylor_Hughes_Zarins
//                              Taylor_Hughes_Zarins_wo_dt
//                              Taylor_Hughes_Zarins_Whiting_Jansen
//                              Taylor_Hughes_Zarins_Whiting_Jansen_wo_dt
//                              Taylor_Hughes_Zarins_scaled
//                              Taylor_Hughes_Zarins_scaled_wo_dt
//                              Franca_Barrenechea_Valentin_Frey_Wall
//                              Franca_Barrenechea_Valentin_Frey_Wall_wo_dt
//                              Shakib_Hughes_Codina
//                              Shakib_Hughes_Codina_wo_dt
//                              Codina
//                              Codina_wo_dt
//                              Franca_Madureira_Valentin_Badia_Codina
//                              Franca_Madureira_Valentin_Badia_Codina_wo_dt
DEFINITION_TAU                  Franca_Barrenechea_Valentin_Frey_Wall
//
// Characteristic element length for tau_Mu
//                              streamlength
//                              volume_equivalent_diameter
//                              root_of_volume
CHARELELENGTH_U                 streamlength
//
// Characteristic element length for tau_Mp/tau_C
//                              streamlength
//                              volume_equivalent_diameter
//                              root_of_volume
CHARELELENGTH_PC                root_of_volume
//
// Location where material law is evaluated
//                              element_center,integration_point
EVALUATION_MAT                  element_center
//
// Location where tau is evaluated
//                              element_center,integration_point
EVALUATION_TAU                  element_center
//
// Flag to (de)activate grad-div term.
//                              Yes,No,yes,no,YES,NO
GRAD_DIV                        Yes
//
// residual based without second derivatives (i.e. only consistent for tau->0, but faster)
//                              Yes,No,yes,no,YES,NO
INCONSISTENT                    No
//
// Flag to (de)activate cross-stress term loma continuity equation-> residual-based VMM.
//                              no_cross,yes_cross,cross_rhs
LOMA_CONTI_CROSS_STRESS         no_cross
//
// Flag to (de)activate Reynolds-stress term loma continuity equation-> residual-based VMM.
//                              no_reynolds,yes_reynolds,reynolds_rhs
LOMA_CONTI_REYNOLDS_STRESS      no_reynolds
//
// Flag to (de)activate SUPG stabilization in loma continuity equation.
//                              Yes,No,yes,no,YES,NO
LOMA_CONTI_SUPG                 No
//
// Flag to (de)activate PSPG stabilization.
//                              Yes,No,yes,no,YES,NO
PSPG                            Yes
//
// Flag to (de)activate Reynolds-stress term -> residual-based VMM.
//                              no_reynolds,yes_reynolds,reynolds_rhs
REYNOLDS-STRESS                 no_reynolds
//
// Flag to (de)activate reactive term in residual-based stabilization.
//                              no_rstab,rstab_gls,rstab_usfem
RSTAB                           no_rstab
//
// Apply (un)stabilized fluid formulation
//                              no_stabilization,residual_based,edge_based
STABTYPE                        residual_based
//
// Flag to (de)activate SUPG stabilization.
//                              Yes,No,yes,no,YES,NO
SUPG                            Yes
//
// Flag to allow time dependency of subscales for residual-based stabilization.
//                              quasistatic,time_dependent
TDS                             quasistatic
//
// Specify how to treat the transient term.
//                              no_transient,yes_transient,transient_complete
TRANSIENT                       no_transient
//
// Flag to (de)activate viscous term in residual-based stabilization.
//                              no_vstab,vstab_gls,vstab_gls_rhs,vstab_usfem,vstab_usfem_rhs
VSTAB                           no_vstab
//
-----------------------------------------------------------------FSI DYNAMIC
//
// Iteration Scheme over the fields
//                              basic_sequ_stagg
//                              iter_stagg_fixed_rel_param
//                              iter_stagg_AITKEN_rel_param
//                              iter_stagg_steep_desc
//                              iter_stagg_NLCG
//                              iter_stagg_MFNK_FD
//                              iter_stagg_MFNK_FSI
//                              iter_stagg_MPE
//                              iter_stagg_RRE
//                              iter_monolithicfluidsplit
//                              iter_monolithicstructuresplit
//                              iter_lung_monolithicstructuresplit
//                              iter_lung_monolithicfluidsplit
//                              iter_monolithicxfem
//                              pseudo_structure
//                              iter_constr_monolithicfluidsplit
//                              iter_constr_monolithicstructuresplit
//                              iter_mortar_monolithicstructuresplit
//                              iter_mortar_monolithicfluidsplit
//                              iter_fluidfluid_monolithicstructuresplit
COUPALGO                        iter_stagg_AITKEN_rel_param
//
// Output of unconverged interface values during FSI iteration.
// There will be a new control file for each time step.
// This might be helpful to understand the coupling iteration.
//                              No,Yes,no,yes,NO,YES,Interface,Preconditioner,All
DEBUGOUTPUT                     No
//
// Total simulation time
MAXTIME                         3
//
// Total number of Timesteps
NUMSTEP                         30
//
// Increment for writing restart
RESTARTEVRY                     1
//
// Second order coupling at the interface.
//                              Yes,No,yes,no,YES,NO
SECONDORDER                     Yes
//
// Projection method to use for sliding FSI.
//                              None,Curr,Ref,RotZ,RotZSphere
SLIDEALEPROJ                    None
//
// Time increment dt
TIMESTEP                        0.1
//
// Increment for writing solution
RESULTSEVRY                     1
//
-----------------------------------------------FSI DYNAMIC/MONOLITHIC SOLVER
//
// Required distance for adaptive convergence check in Newton-type FSI.
// This is the improvement we want to achieve in the linear extrapolation of the
// adaptive convergence check. Set to zero to avoid the adaptive check altogether.
ADAPTIVEDIST                    0
//
// Number of Richardson iterations on ale block in MFSI block preconditioner
ALEPCITER                       1 1 1 1
//
// Relaxation factor for Richardson iteration on ale block in MFSI block preconditioner
ALEPCOMEGA                      1.0 1.0 1.0 1.0
//
// Basic tolerance for adaptive convergence check in monolithic FSI.
// This tolerance will be used for the linear solve of the FSI block system.
// The linear convergence test will always use the relative residual norm (AZ_r0).
// Not to be confused with the Newton tolerance (CONVTOL) that applies
// to the nonlinear convergence test using a absolute residual norm.
BASETOL                         0.001
//
// Type of block smoother, can be BGS or Schur
BLOCKSMOOTHER BGS BGS BGS
//
// Tolerance for iteration over fields
CONVTOL                         1e-6
//
// Number of Richardson iterations on fluid block in MFSI block preconditioner
FLUIDPCITER                     1 1 1 1
//
// Relaxation factor for Richardson iteration on fluid block in MFSI block preconditioner
FLUIDPCOMEGA                    1.0 1.0 1.0 1.0
//
// run analysis on fsiamg multigrid scheme
// Supported in monolithic FSI for now.
//                              Yes,No,yes,no,YES,NO
FSIAMGANALYZE                   No
//
// Scale Blocks in monolithic FSI with row infnorm?
//                              Yes,No,yes,no,YES,NO
INFNORMSCALING                  Yes
//
// Maximum number of iterations over fields
ITEMAX                          100
//
// Linear solver algorithm for monolithic block system in monolithic FSI.
// Most of the time preconditioned Krylov is the right thing to choose. But there are
// block Gauss-Seidel methods as well.
//                              PreconditionedKrylov,FSIAMG
LINEARBLOCKSOLVER               PreconditionedKrylov
//
// binary operator to combine primary variables and residual force values
//                              And
NORMCOMBI_RESFINC               And
//
// type of norm for primary variables convergence check
//                              Abs,Rel,Mix
NORM_INC                        Rel
//
// type of norm for residual convergence check
//                              Abs,Rel,Mix
NORM_RESF                       Rel
//
// Number of Richardson iterations on whole MFSI block preconditioner
PCITER                          1 1 1
//
// Relaxation factor for Richardson iteration on whole MFSI block preconditioner
PCOMEGA                         1.0 1.0 1.0
//
// Number of preconditioner reused in monolithic FSI
PRECONDREUSE                    0
//
// Damping factor for Schur complement construction
SCHUROMEGA                      0.001 0.01 0.1
//
// Include linearization with respect to mesh movement in Navier Stokes equation.
// Supported in monolithic FSI for now.
//                              Yes,No,yes,no,YES,NO
SHAPEDERIVATIVES                Yes
//
// Number of Richardson iterations on structural block in MFSI block preconditioner
STRUCTPCITER                    1 1 1 1
//
// Relaxation factor for Richardson iteration on structural block in MFSI block preconditioner
STRUCTPCOMEGA                   1.0 1.0 1.0 1.0
//
// Symmetric block GS preconditioner in monolithic FSI or ordinary GS
//                              Yes,No,yes,no,YES,NO
SYMMETRICPRECOND                No
//
// Absolute tolerance for structure displacement increment in Inf-norm
TOL_DIS_INC_INF                 1e-06
//
// Absolute tolerance for structure displacement increment in L2-norm
TOL_DIS_INC_L2                  1e-06
//
// Absolute tolerance for structure displacement residual in Inf-norm
TOL_DIS_RES_INF                 1e-06
//
// Absolute tolerance for structure displacement residual in L2-norm
TOL_DIS_RES_L2                  1e-06
//
// Absolute tolerance for interface increment in Inf-norm
TOL_FSI_INC_INF                 1e-06
//
// Absolute tolerance for interface increment in L2-norm
TOL_FSI_INC_L2                  1e-06
//
// Absolute tolerance for interface residual in Inf-norm
TOL_FSI_RES_INF                 1e-06
//
// Absolute tolerance for interface residual in L2-norm
TOL_FSI_RES_L2                  1e-06
//
// Absolute tolerance for fluid pressure increment in Inf-norm
TOL_PRE_INC_INF                 1e-06
//
// Absolute tolerance for fluid pressure increment in L2-norm
TOL_PRE_INC_L2                  1e-06
//
// Absolute tolerance for fluid pressure residual in Inf-norm
TOL_PRE_RES_INF                 1e-06
//
// Absolute tolerance for fluid pressure residual in L2-norm
TOL_PRE_RES_L2                  1e-06
//
// Absolute tolerance for fluid velocity increment in Inf-norm
TOL_VEL_INC_INF                 1e-06
//
// Absolute tolerance for fluid velocity increment in L2-norm
TOL_VEL_INC_L2                  1e-06
//
// Absolute tolerance for fluid velocity residual in Inf-norm
TOL_VEL_RES_INF                 1e-06
//
// Absolute tolerance for fluid velocity residual in L2-norm
TOL_VEL_RES_L2                  1e-06
//
----------------------------------------------FSI DYNAMIC/PARTITIONED SOLVER
//
// Tolerance for iteration over fields
CONVTOL                         1e-10
//
// Coupling Method Mortar (mtr) or conforming nodes at interface
//                              MTR,Mtr,mtr,conforming
COUPMETHOD                      conforming
//
// Coupling variable at the interface for partitioned FSI solvers
//                              Displacement,Force
COUPVARIABLE                    Displacement
//
// Maximum number of iterations over fields
ITEMAX                          100
//
// largest omega allowed for Aitken relaxation (0.0 means no constraint)
MAXOMEGA                        0
//
// Coupling strategies for partitioned FSI solvers.
//                              DirichletNeumann,DirichletNeumannSlideALE
PARTITIONED                     DirichletNeumann
//
// Predictor for interface displacements for partitioned schemes
//                              d(n)
//                              d(n)+dt*(1.5*v(n)-0.5*v(n-1))
//                              d(n)+dt*v(n)
//                              d(n)+dt*v(n)+0.5*dt^2*a(n)
PREDICTOR                       d(n)
//
// fixed relaxation parameter for partitioned FSI solvers
RELAX                           1.0
//
// Project velocity into divergence-free subspace for partitioned fsi
//                              Yes,No,yes,no,YES,NO
DIVPROJECTION                   no
//
--------------------------------------------------------------------------IO
//
FILESTEPS                       1000
//
//                              Yes,No,yes,no,YES,NO
FLUID_SOL                       Yes
//
//                              Yes,No,yes,no,YES,NO
FLUID_STRESS                    No
//
//                              Yes,No,yes,no,YES,NO
FLUID_VIS                       No
//
//                              Yes,No,yes,no,YES,NO
FLUID_WALL_SHEAR_STRESS         No
//
// Only the specified procs will write output
LIMIT_OUTP_TO_PROC              -1
//
//                              Yes,No,yes,no,YES,NO
OUTPUT_BIN                      yes
//
// Put a <GroupID>: in front of every line
//                              Yes,No,yes,no,YES,NO
PREFIX_GROUP_ID                 No
//
// Print to screen every n step
STDOUTEVRY                      1
//
//                              No,no,NO,Yes,yes,YES,Cauchy,cauchy,2PK,2pk
STRUCT_COUPLING_STRESS          No
//
//                              Yes,No,yes,no,YES,NO
STRUCT_DISP                     Yes
//
//                              No,no,NO,Yes,yes,YES,EA,ea,GL,gl
STRUCT_PLASTIC_STRAIN           No
//
// output of strain energy
//                              Yes,No,yes,no,YES,NO
STRUCT_SE                       No
//
//                              No,no,NO,Yes,yes,YES,EA,ea,GL,gl
STRUCT_STRAIN                   No
//
//                              No,no,NO,Yes,yes,YES,Cauchy,cauchy,2PK,2pk
STRUCT_STRESS                   No
//
//                              Yes,No,yes,no,YES,NO
STRUCT_SURFACTANT               No
//
//                              Yes,No,yes,no,YES,NO
STRUCT_VEL_ACC                  No
//
//                              None,No,NO,no,Current,Initial
THERM_HEATFLUX                  None
//
//                              Yes,No,yes,no,YES,NO
THERM_TEMPERATURE               No
//
//                              None,No,NO,no,Current,Initial
THERM_TEMPGRAD                  None
//
// Write the output into a file
//                              Yes,No,yes,no,YES,NO
WRITE_TO_FILE                   No
//
// Write screen output
//                              Yes,No,yes,no,YES,NO
WRITE_TO_SCREEN                 Yes
//
// control parameters for low-Mach-number flow problems
-------------------------------------------------------------MORTAR COUPLING
// If chosen, multipliers are removed from crosspoints / edge nodes
//                              Yes,No,yes,no,YES,NO
CROSSPOINTS                     No
//
// Type of numerical integration scheme
//                              Segments,segments,Fast,fast,Fast_BS,fast_BS
INTTYPE                         Segments
//
// Type of LM interpolation/weighting function
//                              undefined
//                              quad_quad
//                              quadratic_quadratic
//                              quad_pwlin
//                              quadratic_piecewiselinear
//                              quad_lin
//                              quadratic_linear
//                              pwlin_pwlin
//                              piecewiselinear_piecewiselinear
//                              lin_lin
//                              linear_linear
LM_QUAD                         undefined
//
// Maximum value of load balance measure before parallel redistribution
MAX_BALANCE                     2
//
// Minimum no. of elements per processor for parallel redistribution
MIN_ELEPROC                     0
//
// Number of employed integration points per dimension
NUMGP_PER_DIM                   0
//
// Type of redistribution algorithm
//                              None,none,No,no,Static,static,Dynamic,dynamic
PARALLEL_REDIST                 Static
//
// Type of redundancy in interface storage
//                              All,all,Master,master,None,none
REDUNDANT_STORAGE               Master
//
// Type of contact search
//                              BruteForce
//                              bruteforce
//                              BruteForceEleBased
//                              bruteforceelebased
//                              BinaryTree
//                              Binarytree
//                              binarytree
SEARCH_ALGORITHM                Binarytree
//
// Radius / Bounding volume inflation for contact search
SEARCH_PARAM                    0.3
//
// Type of employed set of shape functions
//                              Dual,dual,Standard,standard,std,PetrovGalerkin,petrovgalerkin,pg
LM_SHAPEFCN                     Dual
//
-----------------------------------------------------------------PROBLEM TYP
//
//
//                              AeroCode_Thermo_Fluid_Structure_Interaction
//                              Ale
//                              ArterialNetwork
//                              Biofilm_Fluid_Structure_Interaction
//                              Cavitation
//                              Combustion
//                              Electrochemistry
//                              Fluid
//                              Fluid_Ale
//                              Fluid_Fluid
//                              Fluid_Fluid_Ale
//                              Fluid_Fluid_FSI
//                              Fluid_Freesurface
//                              Fluid_Structure_Interaction
//                              Fluid_Structure_Interaction_Lung
//                              Fluid_Structure_Interaction_XFEM
//                              Fluid_Top_Opt
//                              Fluid_XFEM2
//                              Gas_Fluid_Structure_Interaction
//                              Low_Mach_Number_Flow
//                              NP_Supporting_Procs
//                              Particle
//                              Poroelastic_scalar_transport
//                              Poroelasticity
//                              RedAirways_Tissue
//                              ReducedDimensionalAirWays
//                              Scalar_Transport
//                              Structure
//                              Structure_Ale
//                              Structure_Scalar_Interaction
//                              Thermo
//                              Thermo_Fluid_Structure_Interaction
//                              Thermo_Structure_Interaction
PROBLEMTYP                      Fluid_Structure_Interaction
//
// Set the random seed. If < 0 use current time.
RANDSEED                        -1
//
RESTART                         0
//
// Defines the function spaces for the spatial approximation
//                              Polynomial,Nurbs,Meshfree
SHAPEFCT                        Polynomial
//
--------------------------------------------------------------------SOLVER 1
//
// The convergence test to use for terminating the iterative solver.
//                              AZ_r0
//                              AZ_rhs
//                              AZ_Anorm
//                              AZ_noscaled
//                              AZ_sol
//                              AZ_weighted
//                              AZ_expected_values
//                              AZTECOO_conv_test
//                              AZ_inf_noscaled
AZCONV                          AZ_r0
//
// The tolerance below which an entry from the factors of an internal "ilut"
// preconditioner will be dropped.
AZDROP                          0
//
//                              unused
AZGRAPH                         0
//
// max iterations
AZITER                          1000
//
// damping for GaussSeidel and jacobi type methods
AZOMEGA                         0
//
// The number of iterations between each output of the solver's progress.
AZOUTPUT                        0
//
// The order for of the polynomials used for the "Polynomial" and
// "Least-squares Polynomial" internal preconditioners.
AZPOLY                          3
//
// Type of internal preconditioner to use.
// Note! this preconditioner will only be used if the input operator
// supports the Epetra_RowMatrix interface and the client does not pass
// in an external preconditioner!
//                              none
//                              ILU
//                              ILUT
//                              Jacobi
//                              SymmGaussSeidel
//                              Least_Squares
//                              Neumann
//                              ICC
//                              LU
//                              RILU
//                              BILU
//                              ML
//                              MLFLUID
//                              MLFLUID2
//                              MLAPI
//                              GaussSeidel
//                              DownwindGaussSeidel
//                              AMG(Braess-Sarazin)
//                              AMG
//                              BGS2x2
//                              BGSnxn
//                              TekoSIMPLE
//                              CheapSIMPLE
//                              MueLu_sym
//                              MueLu_nonsym
//                              MueLu_contact
//                              MueLu_contact2
//                              MueLu_contact3
//                              MueLu_contactSP
//                              MueLu_contactPenalty
AZPREC                          ILU
//
// how often to recompute some preconditioners
AZREUSE                         0
//
// scaling of the system
//                              none,sym,infnorm
AZSCAL                          none
//
// Type of linear solver algorithm to use.
//                              CG,GMRES,GMRESR,CGS,TFQMR,BiCGSTAB,LU,FGMRES
AZSOLVE                         GMRES
//
// The maximum size of the Krylov subspace used with "GMRES" before
// a restart is performed.
AZSUB                           300
//
// tolerance in (un)scaled residual
AZTOL                           1e-08
//
// damping parameter for BGS2X2 preconditioner block1
BGS2X2_BLOCK1_DAMPING           1
//
// damping parameter for BGS2X2 preconditioner block2
BGS2X2_BLOCK2_DAMPING           1
//
// BGS2x2 flip order parameter
//                              block0_block1_order,block1_block0_order
BGS2X2_FLIPORDER                block0_block1_order
//
// damping parameter for BGS2X2 preconditioner
BGS2X2_GLOBAL_DAMPING           1
//
// threshold tau for downwinding
DWINDTAU                        1.5
//
// Combine mode for Ifpack Additive Schwarz
//                              Add,Insert,Zero
IFPACKCOMBINE                   Add
//
// The amount of fill allowed for an internal "ilut" preconditioner.
IFPACKFILL                      1
//
// The amount of fill allowed for the internal "ilu" preconditioner.
IFPACKGFILL                     0
//
// The amount of overlap used for the ifpack "ilu" and "ilut" preconditioners.
IFPACKOVERLAP                   0
//
// objective size of an aggregate with METIS/VBMETIS, 2D: 9, 3D: 27
ML_AGG_SIZE                     27
//
//                              UC,METIS,VBMETIS,MIS
ML_COARSEN                      UC
//
// damping coarse grid
ML_DAMPCOARSE                   1
//
// damping fine grid
ML_DAMPFINE                     1
//
// damping med grids
ML_DAMPMED                      1
//
// ML stop coarsening when coarse ndof smaller then this
ML_MAXCOARSESIZE                5000
//
// ML max number of levels
ML_MAXLEVEL                     5
//
// ML print-out level (0-10)
ML_PRINT                        0
//
// damping factor for prolongator smoother (usually 1.33 or 0.0)
ML_PROLONG_SMO                  0
//
// threshold for prolongator smoother/aggregation
ML_PROLONG_THRES                0
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERCOARSE               Umfpack
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERFINE                 ILU
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERMED                  ILU
//
// no. smoothing steps or polynomial order on each level (at least ML_MAXLEVEL numbers)
ML_SMOTIMES 1 1 1 1 1
//
//                              SGS,Jacobi,Chebychev,ILU,GS
MueLu_INITSMOOTHER              SGS
//
// damping parameter for adaptive SA smoother (initialization phase). For Chebyshev it is used as alpha parameter
MueLu_INITSMOO_DAMPING          1
//
// number of sweeps for adaptive SA smoother (initialization phase). For Chebyshev it is used as polynomial degree
MueLu_INITSMOO_SWEEPS           1
//
// User specified name for solver block
NAME ALE solver
//
// matrix rows with diagEntry/maxEntry<nonDiagDominanceRatio are marked to be significantly non-diagonal dominant (default: 1.0 = mark all non-diagonal dominant rows)
NON_DIAGDOMINANCE_RATIO         1
//
// allow linear solver to permute linear system to improve properties of linear system for iterative methods.
//                              none,Algebraic,algebraic,Local,local
PERMUTE_SYSTEM                  none
//
// damping parameter for SIMPLE preconditioner
SIMPLE_DAMPING                  1
//
// The solver to attack the system of linear equations arising of FE approach with.
//                              Amesos_KLU_sym
//                              Amesos_KLU_nonsym
//                              Superlu
//                              vm3
//                              Aztec_MSR
//                              LAPACK_sym
//                              LAPACK_nonsym
//                              UMFPACK
//                              Belos
//                              Stratimikos_Amesos
//                              Stratimikos_Aztec
//                              Stratimikos_Belos
//                              undefined
SOLVER                          UMFPACK
//
// xml file for stratimikos parameters
STRATIMIKOS_XMLFILE             none
//
// sub solver/smoother block number (SIMPLE/C: used for prediction of primary variable on all levels, BS: used for fine and intermedium BraessSarazin (BS) level smoother)
SUB_SOLVER1                     -1
//
// sub solver/smoother block number (SIMPLE/C: used for SchurComplement eq. on all levels, BS: used for coarse BraessSarazin (BS) level smoother)
SUB_SOLVER2                     -1
//
// verbosity level (0=no output,... 10=extreme), for Belos only
VERBOSITY                       0
//
// solver parameters for solver block 2
--------------------------------------------------------------------SOLVER 2
//
AZBDIAG                         0
//
// The convergence test to use for terminating the iterative solver.
//                              AZ_r0
//                              AZ_rhs
//                              AZ_Anorm
//                              AZ_noscaled
//                              AZ_sol
//                              AZ_weighted
//                              AZ_expected_values
//                              AZTECOO_conv_test
//                              AZ_inf_noscaled
AZCONV                          AZ_r0
//
// The tolerance below which an entry from the factors of an internal "ilut"
// preconditioner will be dropped.
AZDROP                          0
//
//                              unused
AZGRAPH                         0
//
// max iterations
AZITER                          1000
//
// damping for GaussSeidel and jacobi type methods
AZOMEGA                         0
//
// The number of iterations between each output of the solver's progress.
AZOUTPUT                        0
//
// The order for of the polynomials used for the "Polynomial" and
// "Least-squares Polynomial" internal preconditioners.
AZPOLY                          3
//
// Type of internal preconditioner to use.
// Note! this preconditioner will only be used if the input operator
// supports the Epetra_RowMatrix interface and the client does not pass
// in an external preconditioner!
//                              none
//                              ILU
//                              ILUT
//                              Jacobi
//                              SymmGaussSeidel
//                              Least_Squares
//                              Neumann
//                              ICC
//                              LU
//                              RILU
//                              BILU
//                              ML
//                              MLFLUID
//                              MLFLUID2
//                              MLAPI
//                              GaussSeidel
//                              DownwindGaussSeidel
//                              AMG(Braess-Sarazin)
//                              AMG
//                              BGS2x2
//                              BGSnxn
//                              TekoSIMPLE
//                              CheapSIMPLE
//                              MueLu_sym
//                              MueLu_nonsym
//                              MueLu_contact
//                              MueLu_contact2
//                              MueLu_contact3
//                              MueLu_contactSP
//                              MueLu_contactPenalty
AZPREC                          ILU
//
// how often to recompute some preconditioners
AZREUSE                         0
//
// scaling of the system
//                              none,sym,infnorm
AZSCAL                          none
//
// Type of linear solver algorithm to use.
//                              CG,GMRES,GMRESR,CGS,TFQMR,BiCGSTAB,LU,FGMRES
AZSOLVE                         GMRES
//
// The maximum size of the Krylov subspace used with "GMRES" before
// a restart is performed.
AZSUB                           300
//
// tolerance in (un)scaled residual
AZTOL                           1e-12
//
// damping parameter for BGS2X2 preconditioner block1
BGS2X2_BLOCK1_DAMPING           1
//
// damping parameter for BGS2X2 preconditioner block2
BGS2X2_BLOCK2_DAMPING           1
//
// BGS2x2 flip order parameter
//                              block0_block1_order,block1_block0_order
BGS2X2_FLIPORDER                block0_block1_order
//
// damping parameter for BGS2X2 preconditioner
BGS2X2_GLOBAL_DAMPING           1
//
// threshold tau for downwinding
DWINDTAU                        1.5
//
// Combine mode for Ifpack Additive Schwarz
//                              Add,Insert,Zero
IFPACKCOMBINE                   Add
//
// The amount of fill allowed for an internal "ilut" preconditioner.
IFPACKFILL                      1
//
// The amount of fill allowed for the internal "ilu" preconditioner.
IFPACKGFILL                     0
//
// The amount of overlap used for the ifpack "ilu" and "ilut" preconditioners.
IFPACKOVERLAP                   0
//
// objective size of an aggregate with METIS/VBMETIS, 2D: 9, 3D: 27
ML_AGG_SIZE                     27
//
//                              UC,METIS,VBMETIS,MIS
ML_COARSEN                      UC
//
// damping coarse grid
ML_DAMPCOARSE                   1
//
// damping fine grid
ML_DAMPFINE                     1
//
// damping med grids
ML_DAMPMED                      1
//
// ML stop coarsening when coarse ndof smaller then this
ML_MAXCOARSESIZE                5000
//
// ML max number of levels
ML_MAXLEVEL                     5
//
// ML print-out level (0-10)
ML_PRINT                        0
//
// damping factor for prolongator smoother (usually 1.33 or 0.0)
ML_PROLONG_SMO                  0
//
// threshold for prolongator smoother/aggregation
ML_PROLONG_THRES                0
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERCOARSE               Umfpack
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERFINE                 ILU
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERMED                  ILU
//
// no. smoothing steps or polynomial order on each level (at least ML_MAXLEVEL numbers)
ML_SMOTIMES 1 1 1 1 1
//
//                              SGS,Jacobi,Chebychev,ILU,GS
MueLu_INITSMOOTHER              SGS
//
// damping parameter for adaptive SA smoother (initialization phase). For Chebyshev it is used as alpha parameter
MueLu_INITSMOO_DAMPING          1
//
// number of sweeps for adaptive SA smoother (initialization phase). For Chebyshev it is used as polynomial degree
MueLu_INITSMOO_SWEEPS           1
//
// User specified name for solver block
NAME Fluid solver
//
// matrix rows with diagEntry/maxEntry<nonDiagDominanceRatio are marked to be significantly non-diagonal dominant (default: 1.0 = mark all non-diagonal dominant rows)
NON_DIAGDOMINANCE_RATIO         1
//
// allow linear solver to permute linear system to improve properties of linear system for iterative methods.
//                              none,Algebraic,algebraic,Local,local
PERMUTE_SYSTEM                  none
//
// damping parameter for SIMPLE preconditioner
SIMPLE_DAMPING                  1
//
// The solver to attack the system of linear equations arising of FE approach with.
//                              Amesos_KLU_sym
//                              Amesos_KLU_nonsym
//                              Superlu
//                              vm3
//                              Aztec_MSR
//                              LAPACK_sym
//                              LAPACK_nonsym
//                              UMFPACK
//                              Belos
//                              Stratimikos_Amesos
//                              Stratimikos_Aztec
//                              Stratimikos_Belos
//                              undefined
SOLVER                          Aztec_MSR
//
// xml file for stratimikos parameters
STRATIMIKOS_XMLFILE             none
//
// sub solver/smoother block number (SIMPLE/C: used for prediction of primary variable on all levels, BS: used for fine and intermedium BraessSarazin (BS) level smoother)
SUB_SOLVER1                     -1
//
// sub solver/smoother block number (SIMPLE/C: used for SchurComplement eq. on all levels, BS: used for coarse BraessSarazin (BS) level smoother)
SUB_SOLVER2                     -1
//
// verbosity level (0=no output,... 10=extreme), for Belos only
VERBOSITY                       0
//
// solver parameters for solver block 3
--------------------------------------------------------------------SOLVER 3
//
AZBDIAG                         0
//
// The convergence test to use for terminating the iterative solver.
//                              AZ_r0
//                              AZ_rhs
//                              AZ_Anorm
//                              AZ_noscaled
//                              AZ_sol
//                              AZ_weighted
//                              AZ_expected_values
//                              AZTECOO_conv_test
//                              AZ_inf_noscaled
AZCONV                          AZ_r0
//
// The tolerance below which an entry from the factors of an internal "ilut"
// preconditioner will be dropped.
AZDROP                          0
//
//                              unused
AZGRAPH                         0
//
// max iterations
AZITER                          1000
//
// damping for GaussSeidel and jacobi type methods
AZOMEGA                         0
//
// The number of iterations between each output of the solver's progress.
AZOUTPUT                        0
//
// The order for of the polynomials used for the "Polynomial" and
// "Least-squares Polynomial" internal preconditioners.
AZPOLY                          3
//
// Type of internal preconditioner to use.
// Note! this preconditioner will only be used if the input operator
// supports the Epetra_RowMatrix interface and the client does not pass
// in an external preconditioner!
//                              none
//                              ILU
//                              ILUT
//                              Jacobi
//                              SymmGaussSeidel
//                              Least_Squares
//                              Neumann
//                              ICC
//                              LU
//                              RILU
//                              BILU
//                              ML
//                              MLFLUID
//                              MLFLUID2
//                              MLAPI
//                              GaussSeidel
//                              DownwindGaussSeidel
//                              AMG(Braess-Sarazin)
//                              AMG
//                              BGS2x2
//                              BGSnxn
//                              TekoSIMPLE
//                              CheapSIMPLE
//                              MueLu_sym
//                              MueLu_nonsym
//                              MueLu_contact
//                              MueLu_contact2
//                              MueLu_contact3
//                              MueLu_contactSP
//                              MueLu_contactPenalty
AZPREC                          ILU
//
// how often to recompute some preconditioners
AZREUSE                         0
//
// scaling of the system
//                              none,sym,infnorm
AZSCAL                          none
//
// Type of linear solver algorithm to use.
//                              CG,GMRES,GMRESR,CGS,TFQMR,BiCGSTAB,LU,FGMRES
AZSOLVE                         GMRES
//
// The maximum size of the Krylov subspace used with "GMRES" before
// a restart is performed.
AZSUB                           300
//
// tolerance in (un)scaled residual
AZTOL                           1e-08
//
// damping parameter for BGS2X2 preconditioner block1
BGS2X2_BLOCK1_DAMPING           1
//
// damping parameter for BGS2X2 preconditioner block2
BGS2X2_BLOCK2_DAMPING           1
//
// BGS2x2 flip order parameter
//                              block0_block1_order,block1_block0_order
BGS2X2_FLIPORDER                block0_block1_order
//
// damping parameter for BGS2X2 preconditioner
BGS2X2_GLOBAL_DAMPING           1
//
// threshold tau for downwinding
DWINDTAU                        1.5
//
// Combine mode for Ifpack Additive Schwarz
//                              Add,Insert,Zero
IFPACKCOMBINE                   Add
//
// The amount of fill allowed for an internal "ilut" preconditioner.
IFPACKFILL                      1
//
// The amount of fill allowed for the internal "ilu" preconditioner.
IFPACKGFILL                     0
//
// The amount of overlap used for the ifpack "ilu" and "ilut" preconditioners.
IFPACKOVERLAP                   0
//
// objective size of an aggregate with METIS/VBMETIS, 2D: 9, 3D: 27
ML_AGG_SIZE                     27
//
//                              UC,METIS,VBMETIS,MIS
ML_COARSEN                      UC
//
// damping coarse grid
ML_DAMPCOARSE                   1
//
// damping fine grid
ML_DAMPFINE                     1
//
// damping med grids
ML_DAMPMED                      1
//
// ML stop coarsening when coarse ndof smaller then this
ML_MAXCOARSESIZE                5000
//
// ML max number of levels
ML_MAXLEVEL                     5
//
// ML print-out level (0-10)
ML_PRINT                        0
//
// damping factor for prolongator smoother (usually 1.33 or 0.0)
ML_PROLONG_SMO                  0
//
// threshold for prolongator smoother/aggregation
ML_PROLONG_THRES                0
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERCOARSE               Umfpack
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERFINE                 ILU
//
//                              SGS
//                              Jacobi
//                              Chebychev
//                              MLS
//                              ILU
//                              KLU
//                              Superlu
//                              GS
//                              DGS
//                              Umfpack
//                              BS
//                              SIMPLE
//                              SIMPLEC
ML_SMOOTHERMED                  ILU
//
// no. smoothing steps or polynomial order on each level (at least ML_MAXLEVEL numbers)
ML_SMOTIMES 1 1 1 1 1
//
//                              SGS,Jacobi,Chebychev,ILU,GS
MueLu_INITSMOOTHER              SGS
//
// damping parameter for adaptive SA smoother (initialization phase). For Chebyshev it is used as alpha parameter
MueLu_INITSMOO_DAMPING          1
//
// number of sweeps for adaptive SA smoother (initialization phase). For Chebyshev it is used as polynomial degree
MueLu_INITSMOO_SWEEPS           1
//
// User specified name for solver block
NAME Structure solver
//
// matrix rows with diagEntry/maxEntry<nonDiagDominanceRatio are marked to be significantly non-diagonal dominant (default: 1.0 = mark all non-diagonal dominant rows)
NON_DIAGDOMINANCE_RATIO         1
//
// allow linear solver to permute linear system to improve properties of linear system for iterative methods.
//                              none,Algebraic,algebraic,Local,local
PERMUTE_SYSTEM                  none
//
// damping parameter for SIMPLE preconditioner
SIMPLE_DAMPING                  1
//
// The solver to attack the system of linear equations arising of FE approach with.
//                              Amesos_KLU_sym
//                              Amesos_KLU_nonsym
//                              Superlu
//                              vm3
//                              Aztec_MSR
//                              LAPACK_sym
//                              LAPACK_nonsym
//                              UMFPACK
//                              Belos
//                              Stratimikos_Amesos
//                              Stratimikos_Aztec
//                              Stratimikos_Belos
//                              undefined
SOLVER                          UMFPACK
//
// xml file for stratimikos parameters
STRATIMIKOS_XMLFILE             none
//
// sub solver/smoother block number (SIMPLE/C: used for prediction of primary variable on all levels, BS: used for fine and intermedium BraessSarazin (BS) level smoother)
SUB_SOLVER1                     -1
//
// sub solver/smoother block number (SIMPLE/C: used for SchurComplement eq. on all levels, BS: used for coarse BraessSarazin (BS) level smoother)
SUB_SOLVER2                     -1
//
// verbosity level (0=no output,... 10=extreme), for Belos only
VERBOSITY                       0
//
----------------------------------------------------------STRUCTURAL DYNAMIC
//
// Switch on adaptive control of linear solver tolerance for nonlinear solution
//                              Yes,No,yes,no,YES,NO
ADAPTCONV                       No
//
// The linear solver shall be this much better than the current nonlinear residual in the nonlinear convergence limit
ADAPTCONV_BETTER                0.1
//
// TEMPORARY FLAG: Switch on time integration driver based on ADAPTER::Structure rather than independent implementation
//                              Yes,No,yes,no,YES,NO
//
// for methods other than load control: [node(fortran numbering)] [dof(c-numbering)] [curve(fortran numbering)]
CONTROLNODE -1 -1 -1
//
// load, disp, arc1, arc2 control
//                              load,Load,disp,Disp,Displacement,arc1,Arc1,arc2,Arc2
CONTROLTYPE                     load
//
// type of damping: (1) Rayleigh damping matrix and use it from M_DAMP x M + K_DAMP x K, (2) Material based and calculated in elements
//                              no,No,NO,yes,Yes,YES,Rayleigh,Material,BrownianMotion
DAMPING                         No
//
// What to do in time integration even if Newton-Raphson iteration failed
DIVERCONT                       stop
//
// type of time integration control
//                              Statics
//                              GenAlpha
//                              OneStepTheta
//                              GEMM
//                              ExplicitEuler
//                              CentrDiff
//                              ParticleCentrDiff
//                              AdamsBashforth2
//                              EulerMaruyama
//                              EulerImpStoch
//                              StatMech
DYNAMICTYP                      GenAlpha
//
// EIGEN make eigenanalysis of the initial dynamic system
//
// type of norm to be applied to residuals
//                              L1,L2,Rms,Inf
ITERNORM                        L2
//
//
K_DAMP                          0.5
//
// number of linear solver used for structural problems
LINEAR_SOLVER                   3
//
// Use linearization of external follower load in Newton
//                              Yes,No,yes,no,YES,NO
LOADLIN                         no
//
// Lump the mass matrix for explicit time integration
//                              Yes,No,yes,no,YES,NO
LUMPMASS                        No
//
//
// maximum number of iterations allowed for Newton-Raphson iteration before failure
MAXITER                         50
//
// maximum time
MAXTIME                         5
//
// minimum number of iterations to be done within Newton-Raphson loop
MINITER                         0
//
// Use the modified explicit Euler time integration scheme
//                              Yes,No,yes,no,YES,NO
MODIFIEDEXPLEULER               Yes
//
M_DAMP                          0.5
//
// Nonlinear solution technique
//                              vague
//                              fullnewton
//                              lsnewton
//                              oppnewton
//                              modnewton
//                              ptc
//                              newtonlinuzawa
//                              augmentedlagrange
//                              NoxNewtonLineSearch
//                              noxgeneral
NLNSOL                          fullnewton
//
// binary operator to combine pressure and displacement values
//                              And,Or
NORMCOMBI_DISPPRES              And
//
// binary operator to combine displacement and residual force values
//                              And,Or
NORMCOMBI_RESFDISP              And
//
// binary operator to combine force and incompressible residual
//                              And,Or
NORMCOMBI_RESFINCO              And
//
// type of norm for displacement convergence check
//                              Abs,Rel,Mix
NORM_DISP                       Abs
//
// type of norm for incompressible residual convergence check
//                              Abs
NORM_INCO                       Abs
//
// type of norm for pressure convergence check
//                              Abs
NORM_PRES                       Abs
//
// type of norm for residual convergence check
//                              Abs,Rel,Mix
NORM_RESF                       Abs
//
// maximum number of steps
NUMSTEP                         200
//
// Type of predictor
//                              Vague
//                              ConstDis
//                              ConstVel
//                              ConstAcc
//                              ConstDisVelAcc
//                              TangDis
//                              ConstDisPres
//                              ConstDisVelAccPres
PREDICT                         ConstDisVelAcc
//
// prestressing takes values none mulf id
//                              none,None,NONE,mulf,Mulf,MULF,id,Id,ID
PRESTRESS                       none
//
// time to switch from pre to post stressing
PRESTRESSTIME                   0
//
// pseudo time step for pseudo transient continuation (PTC) stabilized Newton procedure
PTCDT                           0.1
//
// write system energies every requested step
RESEVRYERGY                     0
//
// write restart possibility every RESTARTEVRY steps
RESTARTEVRY                     1
//
//
// save displacements and contact forces every RESULTSEVRY steps
RESULTSEVRY                     1
//
// number of STC layers for multilayer case
STC_LAYER                       1
//
// Scaled director conditioning for thin shell structures
//                              no,No,NO,Symmetric,Right
STC_SCALING                     no
//
//
// time step size
TIMESTEP                        0.05
//
// tolerance in the constr error norm for the newton iteration
TOLCONSTR                       1e-08
//
// tolerance in the displacement norm for the newton iteration
TOLDISP                         1e-12
//
// tolerance in the incompressible residual norm for the newton iteration
TOLINCO                         1e-10
//
// tolerance in pressure norm for the newton iteration
TOLPRE                          1e-10
//
// tolerance in the residual norm for the newton iteration
TOLRES                          1e-12
//
//                              uzawa,simple,direct
UZAWAALGO                       direct
//
// maximum number of iterations allowed for uzawa algorithm before failure going to next newton step
UZAWAMAXITER                    50
//
// Parameter for Uzawa algorithm dealing with lagrange multipliers
UZAWAPARAM                      1
//
// Tolerance for iterative solve with Uzawa algorithm
UZAWATOL                        1e-08
//
// Use temperature-dependent Young's modulus
//                              Yes,No,yes,no,YES,NO
YOUNG_IS_TEMP_DEPENDENT         No
//
-------------------------------------------------STRUCTURAL DYNAMIC/GENALPHA
//
// Generalised-alpha factor in [0,1)
ALPHA_F                         0.5
//
// Generalised-alpha factor in [0,1)
ALPHA_M                         0.5
//
// Generalised-alpha factor in (0,1/2]
BETA                            0.25
//
// Generalised-alpha factor in (0,1]
GAMMA                           0.5
//
// mid-average type of internal forces
//                              Vague,ImrLike,TrLike
GENAVG                          TrLike
//
-------------------------------------------------------------------MATERIALS
MAT 1 MAT_fluid DYNVISCOSITY 0.01 DENSITY 1.0
MAT 2 MAT_ElastHyper NUMMAT 1 MATIDS 3 DENS 500
MAT 3 ELAST_CoupNeoHooke YOUNG 250.0 NUE 0.0
MAT 4 MAT_Struct_StVenantKirchhoff YOUNG 1.0 NUE 0.0 DENS 1.0
//
// Newtonian fluid
// DYNVISCOSITY dynamic viscosity
// DENSITY spatial mass density
// GAMMA (optional) surface tension coeficient
//MAT 0 MAT_fluid DYNVISCOSITY 0 DENSITY 0 GAMMA 1
//
// fluid with non-linear viscosity according to Carreau-Yasuda
// NU_0 zero-shear viscosity
// NU_INF infinite-shear viscosity
// LAMBDA characteristic time
// APARAM constant parameter
// BPARAM constant parameter
// DENSITY density
//MAT 0 MAT_carreauyasuda NU_0 0 NU_INF 0 LAMBDA 0 APARAM 0 BPARAM 0 DENSITY 0
//
// fluid with nonlinear viscosity according to a modified power law
// MCONS consistency
// DELTA safety factor
// AEXP exponent
// DENSITY density
//MAT 0 MAT_modpowerlaw MCONS 0 DELTA 0 AEXP 0 DENSITY 0
//
// yoghurt-type fluid with nonlinear viscosity
// SHC specific heat capacity at constant pressure (J/(kg*K))
// DENSITY density
// THERMCOND thermal conductivity (J/(m*K*s))
// STRAINRATEEXP exponent of strain-rate term
// PREEXCON pre-exponential constant (1/s)
// ACTENERGY activation energy (J/kg)
// GASCON specific gas constant R (J/(kg*K))
// DELTA safety factor
//MAT 0 MAT_yoghurt SHC 0 DENSITY 0 THERMCOND 0 STRAINRATEEXP 0 PREEXCON 0 ACTENERGY 0 GASCON 0 DELTA 0
//
// permeability for flow in porous media
// TYPE Problem type: Darcy or Darcy-Stokes
// DYNVISCOSITY dynamic viscosity
// DENSITY density
// PERMEABILITY permeability of medium
//MAT 0 MAT_permeable TYPE Darcy-Stokes DYNVISCOSITY 0 DENSITY 0 PERMEABILITY 0
//
// scalar transport material
// DIFFUSIVITY kinematic diffusivity
// REACOEFF (optional) reaction coefficient
// SCNUM (optional) schmidt number
// FLDDENSITY (optional) fluid density
//MAT 0 MAT_scatra DIFFUSIVITY 0 REACOEFF 1 SCNUM 1 FLDDENSITY 1
//
// Myocard muscle material
// MAIN_DIFFUSIVITY conductivity in fiber direction
// OFF_DIFFUSIVITY conductivity perpendicular to fiber direction
// PERTUBATION_DERIV pertubation for calculation of reaction coefficient derivative
// U_O base level potential
// U_U maximum exited potential
// THETA_V excitation threshold
// THETA_W slow current threshold
// THETA_VM v gate time constant threshold
// THETA_O slow outward current time constant threshold
// TAU_V1M v gate time constant
// TAU_V2M v gate time constant
// TAU_VP v gate time constant
// TAU_W1M w gate time constant
// TAU_W2M w gate time constant
// K_WM w gate proportional factor
// U_WM w gate time constant threshold
// TAU_WP w gate time constant
// TAU_FI fast inward current time constant
// TAU_O1 slow outward current time constant
// TAU_O2 slow outward current time constant
// TAU_SO1 slow outward current time constant
// TAU_SO2 slow outward current time constant
// K_SO slow outward current proportional factor
// U_SO slow outward current time constant threshold
// TAU_S1 s gate time constant
// TAU_S2 s gate time constant
// K_S s gate proportional factor
// U_S s gate time constant threshold
// TAU_SI slow inward current time constant
// TAU_WINF w gate infinity value time constant
// W_INFS w gate infinity value
//MAT 0 MAT_myocard MAIN_DIFFUSIVITY 0 OFF_DIFFUSIVITY 0 PERTUBATION_DERIV 0 U_O 0 U_U 0 THETA_V 0 THETA_W 0 THETA_VM 0 THETA_O 0 TAU_V1M 0 TAU_V2M 0 TAU_VP 0 TAU_W1M 0 TAU_W2M 0 K_WM 0 U_WM 0 TAU_WP 0 TAU_FI 0 TAU_O1 0 TAU_O2 0 TAU_SO1 0 TAU_SO2 0 K_SO 0 U_SO 0 TAU_S1 0 TAU_S2 0 K_S 0 U_S 0 TAU_SI 0 TAU_WINF 0 W_INFS 0
//
// material according to mixture-fraction approach
// KINVISC kinematic viscosity
// KINDIFF kinematic diffusivity
// EOSFACA equation-of-state factor a
// EOSFACB equation-of-state factor b
//MAT 0 MAT_mixfrac KINVISC 0 KINDIFF 0 EOSFACA 0 EOSFACB 0
//
// material according to Sutherland law
// REFVISC reference dynamic viscosity (kg/(m*s))
// REFTEMP reference temperature (K)
// SUTHTEMP Sutherland temperature (K)
// SHC specific heat capacity at constant pressure (J/(kg*K))
// PRANUM Prandtl number
// THERMPRESS (initial) thermodynamic pressure (J/m^3)
// GASCON specific gas constant R (J/(kg*K))
//MAT 0 MAT_sutherland REFVISC 0 REFTEMP 0 SUTHTEMP 0 SHC 0 PRANUM 0 THERMPRESS 0 GASCON 0
//
// Arrhenius-type chemical kinetics (species)
// REFVISC reference dynamic viscosity (kg/(m*s))
// REFTEMP reference temperature (K)
// SUTHTEMP Sutherland temperature (K)
// SCHNUM Schmidt number
// PREEXCON pre-exponential constant (1/s)
// TEMPEXP exponent of temperature dependence
// ACTEMP activation temperature (K)
//MAT 0 MAT_arrhenius_spec REFVISC 0 REFTEMP 0 SUTHTEMP 0 SCHNUM 0 PREEXCON 0 TEMPEXP 0 ACTEMP 0
//
// Arrhenius-type chemical kinetics (temperature)
// REFVISC reference dynamic viscosity (kg/(m*s))
// REFTEMP reference temperature (K)
// SUTHTEMP Sutherland temperature (K)
// SHC specific heat capacity at constant pressure (J/(kg*K))
// PRANUM Prandtl number
// REAHEAT heat of reaction per unit mass (J/kg)
// PREEXCON pre-exponential constant (1/s)
// TEMPEXP exponent of temperature dependence
// ACTEMP activation temperature (K)
// THERMPRESS (initial) thermodynamic pressure (J/m^3)
// GASCON specific gas constant R (J/(kg*K))
//MAT 0 MAT_arrhenius_temp REFVISC 0 REFTEMP 0 SUTHTEMP 0 SHC 0 PRANUM 0 REAHEAT 0 PREEXCON 0 TEMPEXP 0 ACTEMP 0 THERMPRESS 0 GASCON 0
//
// material with Arrhenius-type chemical kinetics (progress variable)
// REFVISC reference dynamic viscosity (kg/(m*s))
// REFTEMP reference temperature (K)
// SUTHTEMP Sutherland temperature (K)
// PRANUM Prandtl number
// PREEXCON pre-exponential constant (1/s)
// TEMPEXP exponent of temperature dependence
// ACTEMP activation temperature (K)
// UNBSHC specific heat capacity of unburnt phase (J/(kg*K))
// BURSHC specific heat capacity of burnt phase (J/(kg*K))
// UNBTEMP temperature of unburnt phase (K)
// BURTEMP temperature of burnt phase (K)
// UNBDENS density of unburnt phase (kg/m�)
// BURDENS density of burnt phase (kg/m�)
//MAT 0 MAT_arrhenius_pv REFVISC 0 REFTEMP 0 SUTHTEMP 0 PRANUM 0 PREEXCON 0 TEMPEXP 0 ACTEMP 0 UNBSHC 0 BURSHC 0 UNBTEMP 0 BURTEMP 0 UNBDENS 0 BURDENS 0
//
// material with Ferziger-Echekki (1993) chemical kinetics (progress variable)
// REFVISC reference dynamic viscosity (kg/(m*s))
// REFTEMP reference temperature (K)
// SUTHTEMP Sutherland temperature (K)
// PRANUM Prandtl number
// REACRATECON reaction-rate constant (1/s)
// PVCRIT critical value of progress variable
// UNBSHC specific heat capacity of unburnt phase (J/(kg*K))
// BURSHC specific heat capacity of burnt phase (J/(kg*K))
// UNBTEMP temperature of unburnt phase (K)
// BURTEMP temperature of burnt phase (K)
// UNBDENS density of unburnt phase (kg/m�)
// BURDENS density of burnt phase (kg/m�)
// MOD modification factor (0.0=original, 1.0=modified)
//MAT 0 MAT_ferech_pv REFVISC 0 REFTEMP 0 SUTHTEMP 0 PRANUM 0 REACRATECON 0 PVCRIT 0 UNBSHC 0 BURSHC 0 UNBTEMP 0 BURTEMP 0 UNBDENS 0 BURDENS 0 MOD 0
//
// material parameters for ion species in electrolyte solution
// DIFFUSIVITY kinematic diffusivity
// VALENCE valence (= charge number)
// DENSIFICATION (optional) densification coefficient
// ELIM_DIFFUSIVITY(optional) kinematic diffusivity of elim. species
// ELIM_VALENCE (optional) valence of elim. species
//MAT 0 MAT_ion DIFFUSIVITY 0 VALENCE 0 DENSIFICATION 1 ELIM_DIFFUSIVITY 1 ELIM_VALENCE 1
//
// material parameters for ion species in electrolyte solution
// DIFFUSIVITY kinematic diffusivity
// VALENCE valence (= charge number)
// TRANSFERENCE transference number
//MAT 0 MAT_diffcond DIFFUSIVITY 0 VALENCE 0 TRANSFERENCE 0
//
// material parameters for ion species in electrolyte solution
// VALENCE valence (= charge number)
// CURVE_DIFF curve number for kinematic diffusivity
// CURVE_TRANS curve number for transference number
// A constant for diffusion potential in current equation
// B constant for diffusion potential in current equation
// C constant for diffusion potential in current equation
//MAT 0 MAT_newman VALENCE 0 CURVE_DIFF 0 CURVE_TRANS 0 A 0 B 0 C 0
//
// list/collection of materials, i.e. material IDs
// LOCAL individual materials allocated per element or only at global scope
// NUMMAT number of materials in list
// MATIDS the list material IDs
//MAT 0 MAT_matlist LOCAL No NUMMAT 0 MATIDS
//
// specific list/collection of species and phases for elch applications
// CURRENT current flow as a solution variable
// NUMSPEC number of ionic species in electrolyte
// SPECIDS the list material IDs
// NUMPHASE number of phases in electrolyte
// PHASEIDS the list phasel IDs
//MAT 0 MAT_elchmat CURRENT No NUMSPEC 0 SPECIDS NUMPHASE 0 PHASEIDS
//
// material parameters for ion species in electrolyte solution
// EPSILON porousity of the phase
// CONDUCTIVITY conductivity
// NR (optional) conductivity depending on concentration: number of curve
//MAT 0 MAT_elchphase EPSILON 0 CONDUCTIVITY 0 NR 0
//
// de St.Venant--Kirchhoff material
// YOUNG Young's modulus
// NUE Poisson's ratio
// DENS mass density
// THEXPANS (optional) coefficient of linear thermal expansion
//MAT 0 MAT_Struct_StVenantKirchhoff YOUNG 0 NUE 0 DENS 0 THEXPANS 1
//
// Thermo St.Venant--Kirchhoff material
// YOUNGNUM number of Young's modulus in list
// YOUNG Young's modulus
// NUE Poisson's ratio
// DENS mass density
// THEXPANS coefficient of linear thermal expansion
// CAPA capacity
// CONDUCT conductivity
// INITTEMP initial temperature
//MAT 0 MAT_Struct_ThrStVenantK YOUNGNUM 0 YOUNG NUE 0 DENS 0 THEXPANS 0 CAPA 0 CONDUCT 0 INITTEMP 0
//
// Thermo-elastic St.Venant Kirchhoff / plastic von Mises material
// YOUNG Young's modulus
// NUE Poisson's ratio
// DENS mass density
// THEXPANS coefficient of linear thermal expansion
// INITTEMP initial temperature
// YIELD yield stress
// ISOHARD isotropic hardening modulus
// KINHARD kinematic hardening modulus
// TOL tolerance for local Newton iteration
//MAT 0 MAT_Struct_ThrPlasticLinElast YOUNG 0 NUE 0 DENS 0 THEXPANS 0 INITTEMP 0 YIELD 0 ISOHARD 0 KINHARD 0 TOL 0
//
// elastic neo-Hooke / plastic von Mises material
// YOUNG Young's modulus
// NUE Poisson's ratio
// DENS mass density
// ISOHARD isotropic hardening
// YIELD yield stress
// INFYIELD inf yield stress for nonlinear isotropic hardening
// EXP exponent for nonlinear isotropic hardening
// KINHARD kinematic hardening
//MAT 0 MAT_Struct_PlasticNeoHooke YOUNG 0 NUE 0 DENS 0 ISOHARD 0 YIELD 0 INFYIELD 0 EXP 0 KINHARD 0
//
// hyperelastic / finite strain plastic von Mises material
// YOUNG Young's modulus
// NUE Poisson's ratio
// DENS mass density
// YIELD yield stress
// ISOHARD isotropic hardening modulus
// KINHARD kinematic hardening modulus
//MAT 0 MAT_Struct_PlasticHyperElast YOUNG 0 NUE 0 DENS 0 YIELD 0 ISOHARD 0 KINHARD 0
//
// elastic St.Venant Kirchhoff / plastic von Mises material
// YOUNG Young's modulus
// NUE Poisson's ratio
// DENS mass density
// YIELD yield stress
// ISOHARD isotropic hardening modulus
// KINHARD kinematic hardening modulus
// TOL tolerance for local Newton iteration
//MAT 0 MAT_Struct_PlasticLinElast YOUNG 0 NUE 0 DENS 0 YIELD 0 ISOHARD 0 KINHARD 0 TOL 0
//
// Robinson's visco-plastic material
// KIND kind of Robinson material
// YOUNGNUM number of Young's modulus in list
// YOUNG Young's modulus
// NUE Poisson's ratio
// DENS mass density
// THEXPANS coefficient of linear thermal expansion
// INITTEMP initial temperature
// HRDN_FACT hardening factor 'A'
// HRDN_EXPO hardening power 'n'
// SHRTHRSHLDNUM number of shear stress threshold 'K^2'in list
// SHRTHRSHLD Bingam-Prager shear stress threshold 'K^2'
// RCVRY recovery factor 'R_0'
// ACTV_ERGY activation energy 'Q_0'
// ACTV_TMPR activation temperature 'T_0'
// G0 'G_0'
// M_EXPO 'm'
// BETANUM number of 'beta' in list
// BETA beta
// H_FACT 'H'
//MAT 0 MAT_Struct_Robinson KIND arya_narloyz YOUNGNUM 0 YOUNG NUE 0 DENS 0 THEXPANS 0 INITTEMP 0 HRDN_FACT 0 HRDN_EXPO 0 SHRTHRSHLDNUM 0 SHRTHRSHLD RCVRY 0 ACTV_ERGY 0 ACTV_TMPR 0 G0 0 M_EXPO 0 BETANUM 0 BETA H_FACT 0
//
// elasto-plastic von Mises material with damage
// YOUNG Young's modulus
// NUE Poisson's ratio
// DENS mass density
// YIELD yield stress
// KINHARD kinematic hardening modulus
// TOL tolerance for local Newton iteration
//MAT 0 MAT_Struct_Damage YOUNG 0 NUE 0 DENS 0 YIELD 0 KINHARD 0 TOL 0
//
// aneurysm wall material according to Raghavan and Vorp [2000]
// YOUNG Young's modulus
// BETA 2nd parameter
// NUE Poisson's ratio
// DENS mass density
//MAT 0 MAT_Struct_AAANeoHooke YOUNG 0 BETA 0 NUE 0 DENS 0
//
// aneurysm wall material according to Raghavan and Vorp [2000] with stochastic modelling of beta
// YOUNG Young's modulus
// BETA 2nd parameter
// NUE Poisson's ratio
// DENS mass density
//MAT 0 MAT_Struct_AAANeoHookeStopro YOUNG 0 BETA 0 NUE 0 DENS 0
//
// AAA thrombus material according to GASSER [2008]
// DENS mass density
// VOL Type of volumetric Strain Energy Density (OSM,SuBa,SiTa)
// NUE Poisson's ratio (0.49)
// BETA empiric constant for OSM (-2.0)
// CLUM luminal stiffness parameter (2.62e3)
// CMED medial stiffness parameter (2.62e3)
// CABLUM abluminal stiffness parameter (2.62e3)
//MAT 0 MAT_Struct_AAAGasser DENS 0 VOL OSM NUE 0 BETA 0 CLUM 0 CMED 0 CABLUM 0
//
// aneurysm wall material according to Raghavan and Vorp [2000] with damage
// BULK Bulk's modulus
// ALPHA 1nd parameter,alpha
// BETA 2nd parameter,beta
// EQSTRMIN equivalent strain initial damage
// A 1st parameter, a
// B 2nd parameter, b
// DENS mass density
//MAT 0 MAT_Raghavan_Damage BULK 0 ALPHA 0 BETA 0 EQSTRMIN 0 A 0 B 0 DENS 0
//
// aneurysm wall material according to Mixed Effects Model
// AGE age
// REFDIA subrenal diameter
// NUE Poisson's ratio
// DENS mass density
//MAT 0 MAT_Struct_AAA_MixedEffects AGE 0 REFDIA 0 NUE 0 DENS 0
//
// visco-elastic neo-Hookean material law
// YOUNGS_SLOW ???
// POISSON ???
// DENS ???
// YOUNGS_FAST ???
// RELAX ???
// THETA ???
//MAT 0 MAT_VISCONEOHOOKE YOUNGS_SLOW 0 POISSON 0 DENS 0 YOUNGS_FAST 0 RELAX 0 THETA 0
//
// visco-elastic anisotropic fibre material law
// KAPPA dilatation modulus
// MUE Shear Modulus
// DENS Density
// K1 Parameter for linear fiber stiffness
// K2 Parameter for exponetial fiber stiffness
// GAMMA angle between fibers
// BETA_ISO ratio between elasticities in generalized Maxweel body
// BETA_ANISO ratio between elasticities in generalized Maxweel body
// RELAX_ISO isotropic relaxation time
// RELAX_ANISO anisotropic relaxation time
// MINSTRETCH minimal principal stretch fibers do respond to
// ELETHICKDIR Element thickness direction applies also to fibers (only sosh)
//MAT 0 MAT_VISCOANISO KAPPA 0 MUE 0 DENS 0 K1 0 K2 0 GAMMA 0 BETA_ISO 0 BETA_ANISO 0 RELAX_ISO 0 RELAX_ANISO 0 MINSTRETCH 0 ELETHICKDIR 0
//
// Structural micro-scale approach: material parameters are calculated from microscale simulation
// MICROFILE inputfile for microstructure
// MICRODIS_NUM Number of microscale discretization
// INITVOL (optional) Initial volume of RVE
//MAT 0 MAT_Struct_Multiscale MICROFILE filename.dat MICRODIS_NUM 0 INITVOL 1
//
// list/collection of hyperelastic materials, i.e. material IDs
// NUMMAT number of materials/potentials in list
// MATIDS the list material/potential IDs
// DENS material mass density
//MAT 0 MAT_ElastHyper NUMMAT 0 MATIDS DENS 0
//
// Generalized Maxwell model compatible with the collection of hyperelastic materials
// NUMMAT number of materials/potentials in list
// MATIDS the list material/potential IDs
// DENS material mass density
// GAMMA fiber angle
// RELAX_ISOT_PRINC relaxation time - isotropic not splitted formulation - Leave it to 0 if you don't use it
// BETA_ISOT_PRINC viscous constant of the generalized maxwell model - isotropic not splitted formulation - Leave it to 0 if you don't use it
// RELAX_ISOT_MOD_VOL relaxation time - isotropic splitted formulation - volumetric contribution - Leave it to 0 if you don't use it
// BETA_ISOT_MOD_VOL viscous constant of the generalized maxwell model - isotropic splitted formulation - volumetric contribution - Leave it to 0 if you don't use it
// RELAX_ISOT_MOD_ISOC relaxation time - isotropic splitted formulation - isochoric contribution - Leave it to 0 if you don't use it
// BETA_ISOT_MOD_ISOC viscous constant of the generalized maxwell model - isotropic splitted formulation - isochoric contribution - Leave it to 0 if you don't use it
// RELAX_ANISOT_PRINC relaxation time - anisotropic not splitted formulation - Leave it to 0 if you don't use it
// BETA_ANISOT_PRINC viscous constant of the generalized maxwell model - anisotropic not splitted formulation - Leave it to 0 if you don't use it
// INIT_MODE (optional) initialization modus for fiber alignement
//MAT 0 MAT_ViscoGenMax NUMMAT 0 MATIDS DENS 0 GAMMA 0 RELAX_ISOT_PRINC 0 BETA_ISOT_PRINC 0 RELAX_ISOT_MOD_VOL 0 BETA_ISOT_MOD_VOL 0 RELAX_ISOT_MOD_ISOC 0 BETA_ISOT_MOD_ISOC 0 RELAX_ANISOT_PRINC 0 BETA_ANISOT_PRINC 0 INIT_MODE -1
//
// logarithmic neo-Hooke material acc. to Bonet and Wood
// MODE parameter set: YN (Young's modulus and Poisson's ration) or Lame (mue and lambda)
// C1 E or mue
// C2 nue or lambda
//MAT 0 ELAST_CoupLogNeoHooke MODE YN C1 0 C2 0
//
// compressible neo-Hooke material acc. to Holzapfel
// YOUNG (optional) Young's modulus
// NUE (optional) Poisson's ratio
//MAT 0 ELAST_CoupNeoHooke YOUNG 1 NUE 1
//
// Mooney - Rivlin material acc. to Holzapfel
// C1 (optional) material constant
// C2 (optional) material constant
// C3 (optional) material constant
//MAT 0 ELAST_CoupMooneyRivlin C1 1 C2 1 C3 1
//
// Blatz and Ko material acc. to Holzapfel
// MUE Shear modulus
// NUE Poisson's ratio
// F interpolation parameter
//MAT 0 ELAST_CoupBlatzKo MUE 0 NUE 0 F 0
//
// isochoric part of neo-Hooke material acc. to Holzapfel
// MUE Shear modulus
//MAT 0 ELAST_IsoNeoHooke MUE 0
//
// isochoric and volumetric part of HU dependent neo-Hooke material
//                              ALPHA_MAX
//                              CT_MIN
//                              CT_MAX
//                              NUE
//                              BETA
//MAT 0 ELAST_IsoVolHUDependentNeoHooke ALPHA_MAX 0 CT_MIN 0 CT_MAX 0 NUE 0 BETA 0
//
// isochoric and volumetric part of AAAGasser material (thrombus)
// CLUM luminal stiffness parameter (2.62e3)
// CMED medial stiffness parameter (2.62e3)
// CABLUM abluminal stiffness parameter (2.62e3)
//                              NUE
//                              BETA
//MAT 0 ELAST_IsoVolAAAGasser CLUM 0 CMED 0 CABLUM 0 NUE 0 BETA 0
//
// isochoric part of Yeoh material acc. to Holzapfel
// C1 Linear modulus
// C2 Quadratic modulus
// C3 Cubic modulus
//MAT 0 ELAST_IsoYeoh C1 0 C2 0 C3 0
//
// isochoric part of quadratic material
// C material parameter
//MAT 0 ELAST_IsoQuad C 0
//
// isochoric part of cubic material
// C material parameter
//MAT 0 ELAST_IsoCub C 0
//
// isochoric part of general power material
// C material parameter
// D exponent
//MAT 0 ELAST_Iso1Pow C 0 D 0
//
// isochoric part of general power material
// C material parameter
// D exponent
//MAT 0 ELAST_Iso2Pow C 0 D 0
//
// part of general power material
// C material parameter
// D exponent
//MAT 0 ELAST_Coup1Pow C 0 D 0
//
// part of general power material
// C material parameter
// D exponent
//MAT 0 ELAST_Coup2Pow C 0 D 0
//
// isochoric part of exponential material acc. to Holzapfel
// K1 material parameter
// K2 material parameter
// C exponent
//MAT 0 ELAST_IsoExpoPow K1 0 K2 0 C 0
//
// isochoric part of Mooney-Rivlin material acc. to Holzapfel
// C1 Linear modulus for first invariant
// C2 Linear modulus for second invariant
//MAT 0 ELAST_IsoMooneyRivlin C1 0 C2 0
//
// volumetric part of SussmanBathe material
// KAPPA dilatation modulus
//MAT 0 ELAST_VolSussmanBathe KAPPA 0
//
// Penalty formulation for the volumetric part
// EPSILON penalty parameter
// GAMMA penalty parameter
//MAT 0 ELAST_VolPenalty EPSILON 0 GAMMA 0
//
// Ogden formulation for the volumetric part
// KAPPA dilatation modulus
// BETA empiric constant
//MAT 0 ELAST_VolOgden KAPPA 0 BETA 0
//
// anisotropic part with one exp. fiber
// K1 linear constant
// K2 exponential constant
// GAMMA angle
// K1COMP linear constant
// K2COMP exponential constant
// INIT (optional) initialization modus for fiber alignment
// ADAPT_ANGLE (optional) adapt angle during remodeling
//MAT 0 ELAST_CoupAnisoExpo K1 0 K2 0 GAMMA 0 K1COMP 0 K2COMP 0 INIT 1 ADAPT_ANGLE No
//
// anisotropic part with two exp. fibers
// A4 linear anisotropic constant for fiber 1
// B4 exponential anisotropic constant for fiber 1
// A6 linear anisotropic constant for fiber 2
// B6 exponential anisotropic constant for fiber 2
// A8 linear anisotropic constant for fiber 1 relating fiber 2
// B8 exponential anisotropic constant for fiber 1 relating fiber 2
// GAMMA angle
// INIT (optional) initialization modus for fiber alignment
// ADAPT_ANGLE (optional) adapt angle during remodeling
//MAT 0 ELAST_CoupAnisoExpoTwoCoup A4 0 B4 0 A6 0 B6 0 A8 0 B8 0 GAMMA 0 INIT 1 ADAPT_ANGLE No
//
// anisotropic part with one neo Hookean fiber
// C linear constant
// GAMMA angle
// INIT (optional) initialization modus for fiber alignment
// ADAPT_ANGLE (optional) adapt angle during remodeling
//MAT 0 ELAST_CoupAnisoNeoHooke C 0 GAMMA 0 INIT 1 ADAPT_ANGLE No
//
// anisotropic part with one neo Hookean fiber with coefficient given by a simplification of the activation-contraction law of Bestel-Clement-Sorine-2001
// SIGMA Contractility (maximal stress)
// TAUC0 Initial value for the active stress
// MAX_ACTIVATION Maximal value for the rescaled activation
// MIN_ACTIVATION Minimal value for the rescaled activation
// SOURCE_ACTIVATION Where the activation comes from: 0=scatra , >0 Id for FUNCT
// GAMMA (optional) azimuth angle
// THETA (optional) polar angle
// INIT (optional) initialization mode for fiber alignment
// ADAPT_ANGLE (optional) adapt angle during remodeling
//MAT 0 ELAST_CoupAnisoNeoHooke_ActiveStress SIGMA 0 TAUC0 0 MAX_ACTIVATION 0 MIN_ACTIVATION 0 SOURCE_ACTIVATION 0 GAMMA 1 THETA 1 INIT 1 ADAPT_ANGLE No
//
// anisotropic part with one neo Hookean fiber with variable coefficient
// C linear constant
// SOURCE_ACTIVATION Where the activation comes from: 0=scatra , >0 Id for FUNCT
// GAMMA (optional) azimuth angle
// THETA (optional) polar angle
// INIT (optional) initialization mode for fiber alignment
// ADAPT_ANGLE (optional) adapt angle during remodeling
//MAT 0 ELAST_CoupAnisoNeoHooke_VarProp C 0 SOURCE_ACTIVATION 0 GAMMA 1 THETA 1 INIT 1 ADAPT_ANGLE No
//
// anisotropic part with one exp. fiber
// K1 linear constant
// K2 exponential constant
// GAMMA angle
// K1COMP linear constant
// K2COMP exponential constant
// INIT (optional) initialization modus for fiber alignment
// ADAPT_ANGLE (optional) adapt angle during remodeling
//MAT 0 ELAST_IsoAnisoExpo K1 0 K2 0 GAMMA 0 K1COMP 0 K2COMP 0 INIT 1 ADAPT_ANGLE No
//
// Varga material acc. to Holzapfel
// MUE Shear modulus
// BETA 'Anti-modulus'
//MAT 0 ELAST_CoupVarga MUE 0 BETA 0
//
// Isochoric Varga material acc. to Holzapfel
// MUE Shear modulus
// BETA 'Anti-modulus'
//MAT 0 ELAST_IsoVarga MUE 0 BETA 0
//
// artery with constant properties
// VISCOSITY viscosity of blood
// DENS density of blood
// YOUNG artery Youngs modulus of elasticity
// NUE Poissons ratio of artery fiber
// DIAM artery initial diameter
// TH artery thickness
// PEXT1 artery fixed external pressure 1
// PEXT2 artery fixed external pressure 2
//MAT 0 MAT_CNST_ART VISCOSITY 0 DENS 0 YOUNG 0 NUE 0 DIAM 0 TH 0 PEXT1 0 PEXT2 0
//
// isotropic (linear) Fourier's law of heat conduction
// CAPA capacity
// CONDUCT conductivity
//MAT 0 THERM_FourierIso CAPA 0 CONDUCT 0
//
// integration point based growth
// DENS Density
// IDMATELASTIC number of elastic material in input file: MAT IDMATELASTIC ...
// STARTTIME start growth after this time
// ENDTIME end growth after this time
// TOL tolerance for local Newton iteration
// KPLUS growth law parameter kthetaplus
// MPLUS growth law parameter mthetaplus
// KMINUS growth law parameter kthetaminus
// MMINUS growth law parameter mthetaminus
// HOMMANDEL homeostatic value for mandelstress
//MAT 0 MAT_GROWTH DENS 0 IDMATELASTIC 0 STARTTIME 0 ENDTIME 0 TOL 0 KPLUS 0 MPLUS 0 KMINUS 0 MMINUS 0 HOMMANDEL 0
//
// growth and remodeling of arteries
// DENS Density
// MUE Shear Modulus
// PHIE mass fraction of elastin
// PREELA prestretch of elastin
// K1 Parameter for linear collagen fiber stiffness
// K2 Parameter for exponential collagen fiber stiffness
// PRECOLL prestretch of collagen fibers
// K1M Parameter for linear smooth muscle fiber stiffness
// K2M Parameter for exponential smooth muscle fiber stiffness
// PHIM mass fraction of smooth muscle
// PREMUS prestretch of smooth muscle fibers
// SMAX maximal active stress
// KAPPA dilatation modulus
// LIFETIME lifetime of collagen fibers
// HOMSTR homeostatic target value of scalar stress measure
// GROWTHFAC growth factor
// STARTTIME at this time turnover of collagen starts
// INTEGRATION time integration scheme (Explicit, Implicit)
// TOL tolerance for local Newton iteration
// GROWTHFORCE driving force of growth (Single, All)
// INITSTRETCH how to set stretches in the beginning (None, Homeo)
// CURVE number of timecurve for increase of prestretch in time
// DEGOPTION which degradation function (Lin, Cos, Exp)
//MAT 0 MAT_ConstraintMixture DENS 0 MUE 0 PHIE 0 PREELA 0 K1 0 K2 0 PRECOLL 0 K1M 0 K2M 0 PHIM 0 PREMUS 0 SMAX 0 KAPPA 0 LIFETIME 0 HOMSTR 0 GROWTHFAC 0 STARTTIME 0 INTEGRATION Explicit TOL 0 GROWTHFORCE Single INITSTRETCH None CURVE 0 DEGOPTION Lin
//
// biofilm material
// DIFFUSIVITY kinematic diffusivity
// REARATE substrate uptake rate coefficient
// SATCOEFF substrate saturation coefficient
//MAT 0 MAT_biofilm DIFFUSIVITY 0 REARATE 0 SATCOEFF 0
//
// optimization material
// MINPORO minimal porosity
// MAXPORO maximal porosity
// SMEARFAC smearing factor
//MAT 0 MAT_opti MINPORO 0 MAXPORO 0 SMEARFAC 0
//
// wrapper for structure porelastic material
// MATID ID of structure material
// INITPOROSITY initial porosity of porous medium
// BULKMODULUS bulk modulus of porous medium
// PENALTYPARAMETER penalty paramter of porous medium
//MAT 0 MAT_StructPoro MATID 0 INITPOROSITY 0 BULKMODULUS 0 PENALTYPARAMETER 0
//
// wrapper for structure porelastic material with reaction
// MATID ID of structure material
// INITPOROSITY initial porosity of porous medium
// BULKMODULUS bulk modulus of porous medium
// PENALTYPARAMETER penalty paramter of porous medium
//MAT 0 MAT_StructPoroReaction MATID 0 INITPOROSITY 0 BULKMODULUS 0 PENALTYPARAMETER 0
//
// flow in deformable porous media
// DYNVISCOSITY dynamic viscosity
// DENSITY density
// PERMEABILITY permeability of medium
// TYPE Problem type: Darcy or Darcy-Brinkman
//MAT 0 MAT_FluidPoro DYNVISCOSITY 0 DENSITY 0 PERMEABILITY 0 TYPE Darcy
//
// elastic spring
// STIFFNESS spring constant
// DENS density
//MAT 0 MAT_Struct_Spring STIFFNESS 0 DENS 0
//
// 0D acinar material
// Stiffness1 first stiffness
// Stiffness2 second stiffness
// Viscosity1 first viscosity
// Viscosity2 second viscosity
//MAT 0 MAT_0D_MAXWELL_ACINUS Stiffness1 0 Stiffness2 0 Viscosity1 0 Viscosity2 0
//
// particle material
// DENSITY mass density
// INITRADIUS initial radius of particle
//MAT 0 MAT_Particle DENSITY 0 INITRADIUS 0
--------------------------------------------------------CLONING MATERIAL MAP
// SRC_FIELD '' SRC_MAT 0 TAR_FIELD '' TAR_MAT 0
SRC_FIELD fluid SRC_MAT 1 TAR_FIELD ale TAR_MAT 4
// CURVE 0 on Polygonal T 0 BYSTEP No 0 0 BYABSTIME Yes 0 0 FACTOR 0 0
// CURVE 0 on Polygonal T 0 BYABSTIME Yes 0 0 FACTOR 0 0
// CURVE 0 on Explicit FUNC '' c1 0 c2 0
// CURVE 0 on EXPR FUNC '' t1 0 t2 0
// CURVE 0 on LungSinus Frequ 0 pPEEP 0 Phase 0
// CURVE 0 on PhysiologicalWaveform InterpolType '' Period 0 Flowrate 0 Samplingpoints 0 Arrayread [...]
// CURVE 0 on PeriodicRepetition Period 0 t1 0 t2 0
-------------------------------------------------------------FUNCT1
FUNCTION (1-cos(2*t*pi/5))
-------------------------------------------------------------FUNCT2
FUNCTION 10*(y-1)*(1-cos(2*t*pi/5))
-------------------------------------------------------------FUNCT3
-------------------------------------------------------------FUNCT4
// FUNCT 0 LINE_LIN 0 0 0 0 0 0 0 0
// FUNCT 0 LINE_QUAD 0 0 0 0 0 0
// FUNCT 0 RADIUS_LIN 0 0 0 0 0 0 0 0
// FUNCT 0 RADIUS_QUAD 0 0 0 0 0 0
// FUNCT 0 BELTRAMI
// FUNCT 0 KIM-MOIN
// FUNCT 0 BOCHEV-UP
// FUNCT 0 BOCHEV-RHS
// FUNCT 0 BELTRAMI-UP MAT 0 ISSTAT 0
// FUNCT 0 BELTRAMI-GRADU MAT 0 ISSTAT 0
// FUNCT 0 BELTRAMI-RHS MAT 0 ISSTAT 0 ISSTOKES 0
// FUNCT 0 KIMMOIN-UP MAT 0 ISSTAT 0
// FUNCT 0 KIMMOIN-GRADU MAT 0 ISSTAT 0
// FUNCT 0 KIMMOIN-RHS MAT 0 ISSTAT 0 ISSTOKES 0
// FUNCT 0 TURBBOULAYER
// FUNCT 0 TURBBOULAYER-BFS
// FUNCT 0 TURBBOULAYERORACLES
// FUNCT 0 JEFFERY-HAMEL
// FUNCT 0 WOMERSLEY Local 0 MAT 0 CURVE 0 FSI ''
// FUNCT 0 WOMERSLEY Local 0 Radius 0 MAT 0 CURVE 0
// FUNCT 0 CYLINDER_3D 0
// FUNCT 0 ZALESAKSDISK
// FUNCT 0 CIRCULARFLAME2
// FUNCT 0 CIRCULARFLAME3
// FUNCT 0 CIRCULARFLAME4
// FUNCT 0 COLLAPSINGWATERCOLUMN
// FUNCT 0 COLLAPSINGWATERCOLUMNCOARSE
// FUNCT 0 ORACLESGFUNC
// FUNCT 0 ROTATINGCONE
// FUNCT 0 LEVELSETCUTTEST
// FUNCT 0 COMPONENT 0 EXPR 0 0 0 FUNCTION ''
// FUNCT 0 EXPR 0 0 0 FUNCTION ''
----------------------------------------------------------RESULT DESCRIPTION
// STRUCTURE DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// FLUID DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// ALE DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// THERMAL DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// SCATRA DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// RED_AIRWAY DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// ARTNET DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// ADJOINT DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// OPTI DIS '' NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
// FSI NODE 0 QUANTITY '' VALUE 0 TOLERANCE 0 [ NAME '' ]
STRUCTURE DIS structure NODE 22 QUANTITY dispx VALUE -3.10527382943322509e-04 TOLERANCE 1e-12
STRUCTURE DIS structure NODE 22 QUANTITY dispy VALUE  2.58228799458276662e-02 TOLERANCE 1e-10
FLUID DIS fluid NODE 500 QUANTITY pressure VALUE -8.94685072024776519e-03 TOLERANCE 1e-10
FLUID DIS fluid NODE 500 QUANTITY velx     VALUE -5.84882305078221684e-02 TOLERANCE 1e-10
FLUID DIS fluid NODE 500 QUANTITY vely     VALUE -1.07044425305789767e-01 TOLERANCE 1e-9
