#!/bin/bash

#####################################################
########## DESCRIPTION ##############################
#####################################################

# This is a bash script meant for code checks concerning clang-format style and header compliance.

# The test will fail if code is found that is not compliant with the BACI clang format style.
# In this preliminary version uncompliant headers will not lead to a test failure but the affected files will be written out in a text file called "wrong_format.txt"
# This ensures that the work with BACI is not interrupted and gives time to work on non-compliant headers, in parallel.
# The files with non-compliant code format will also be written out in a file named "wrong_clang_format.txt"

# Author:    Jonas Nitzler
# Date:      04.09.2018
# Version:   1.0

## Delete old .txt files containing non-compliant files
[ -e wrong_format.txt ] && rm wrong_format.txt
[ -e wrong_clang_format.txt ] && rm wrong_clang_format.txt

### Header check ################################################
echo "Start test for correct file headers ..."
python ./tests/code_test/nightly_header-check.py | tee wrong_format.txt

if [ -s wrong_format.txt ]
then
  echo "Failed. Non-compliant file headers have been reported in wrong_format.txt."
else
  echo "Passed."
fi

########### Execute clang-format with style file settings (taken from https://github.com/sheredom/git-hooks)##################################################
if [ -f ./utilities/code_styles/clang-format ]
then
  # set the field separator to new line
  IFS=$'\n'

  echo "Start test for code format ..."
  for line in $(find ./ -type f)
  do
    # check if the file is a c or cpp file
    if [[ $line == *.cpp || $line == *.cc || $line == *.cp || $line == *.cxx || $line == *.H || $line == *.h || $line == *.hpp || $line == *.hh || $line == *.hxx ]]
    then
      # Check if clang would format the file
      if [[  $(diff -u <(./utilities/code_styles/clang-format -style=file $(pwd)/${line}) <(cat $(pwd)/${line})) ]]
      then
        uncompliant_files+="$(pwd)/${line}\n"
      fi
    fi
  done

  if [ ! -z "$uncompliant_files" ]
  then
    (printf "$uncompliant_files")>>wrong_clang_format.txt
    echo "Failed. Non-compliant files have been reported in wrong_clang_format.txt."
    exit 1
  fi
fi

echo "Passed."
exit 0
