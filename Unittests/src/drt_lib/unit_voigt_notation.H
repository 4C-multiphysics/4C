/*---------------------------------------------------------------------------*/
/*! \file

\brief unittests for utilities concerning voigt notation

\level 3

*/

#ifndef UNIT_VOIGT_NOTATION_H
#define UNIT_VOIGT_NOTATION_H

#include "Unittests/src/common/unit_cxx_test_wrapper.H"
#include <src/linalg/linalg_fixedsizematrix.H>
#include <Teuchos_RCPDecl.hpp>
#include <src/drt_lib/voigt_notation.H>

namespace UTILS
{
  namespace VOIGT
  {
    class VoigtNotation_TestSuite;
  }
}  // namespace UTILS

class UTILS::VOIGT::VoigtNotation_TestSuite : public BACICxxTestWrapper
{
 public:
  void Setup() override
  {
    tens = Teuchos::rcp(new LINALG::Matrix<3, 3>);
    itens = Teuchos::rcp(new LINALG::Matrix<3, 3>);
    tens_strain = Teuchos::rcp(new LINALG::Matrix<6, 1>);
    itens_strain = Teuchos::rcp(new LINALG::Matrix<6, 1>);
    tens_stress = Teuchos::rcp(new LINALG::Matrix<6, 1>);
    itens_stress = Teuchos::rcp(new LINALG::Matrix<6, 1>);

    (*tens)(0, 0) = 1.1;
    (*tens)(1, 1) = 1.2;
    (*tens)(2, 2) = 1.3;
    (*tens)(0, 1) = (*tens)(1, 0) = 0.01;
    (*tens)(1, 2) = (*tens)(2, 1) = 0.02;
    (*tens)(0, 2) = (*tens)(2, 0) = 0.03;

    (*itens)(0, 0) = 0.90972618;
    (*itens)(1, 1) = 0.83360457;
    (*itens)(2, 2) = 0.76990741;
    (*itens)(0, 1) = (*itens)(1, 0) = -0.00723301;
    (*itens)(1, 2) = (*itens)(2, 1) = -0.01265777;
    (*itens)(0, 2) = (*itens)(2, 0) = -0.0208824;

    (*tens_strain)(0) = (*tens_stress)(0) = 1.1;
    (*tens_strain)(1) = (*tens_stress)(1) = 1.2;
    (*tens_strain)(2) = (*tens_stress)(2) = 1.3;

    (*tens_stress)(3) = 0.01;
    (*tens_stress)(4) = 0.02;
    (*tens_stress)(5) = 0.03;

    (*itens_stress)(0) = 0.90972618;
    (*itens_stress)(1) = 0.83360457;
    (*itens_stress)(2) = 0.76990741;
    (*itens_stress)(3) = -0.00723301;
    (*itens_stress)(4) = -0.01265777;
    (*itens_stress)(5) = -0.0208824;

    (*tens_strain)(3) = 2 * 0.01;
    (*tens_strain)(4) = 2 * 0.02;
    (*tens_strain)(5) = 2 * 0.03;

    (*itens_strain)(0) = 0.90972618;
    (*itens_strain)(1) = 0.83360457;
    (*itens_strain)(2) = 0.76990741;
    (*itens_strain)(3) = 2 * -0.00723301;
    (*itens_strain)(4) = 2 * -0.01265777;
    (*itens_strain)(5) = 2 * -0.0208824;
  }

  void TearDown() override {}

  void Test_MatrixToVector_StressLike()
  {
    LINALG::Matrix<6, 1> cmp_stress(false);

    UTILS::VOIGT::Stresses::MatrixToVector(*tens, cmp_stress);

    for (int i = 0; i < 6; ++i) TS_ASSERT_DELTA(cmp_stress(i), (*tens_stress)(i), 1e-10);
  }

  void Test_MatrixToVector_StrainLike()
  {
    LINALG::Matrix<6, 1> cmp_strain(false);

    UTILS::VOIGT::Strains::MatrixToVector(*tens, cmp_strain);

    for (int i = 0; i < 6; ++i) TS_ASSERT_DELTA(cmp_strain(i), (*tens_strain)(i), 1e-10);
  }

  void Test_Determinant_StressLike()
  {
    TS_ASSERT_DELTA(UTILS::VOIGT::Stresses::Determinant(*tens_stress), 1.7143620000000002, 1e-10);
  }

  void Test_Determinant_StrainLike()
  {
    TS_ASSERT_DELTA(UTILS::VOIGT::Strains::Determinant(*tens_strain), 1.7143620000000002, 1e-10);
  }

  void Test_InvariantsPrincipal_StressLike()
  {
    LINALG::Matrix<3, 1> prinv(false);
    UTILS::VOIGT::Stresses::InvariantsPrincipal(prinv, *tens_stress);
    TS_ASSERT_DELTA(prinv(0), 3.5999999999999996, 1e-10);
    TS_ASSERT_DELTA(prinv(1), 4.3085999999999984, 1e-10);
    TS_ASSERT_DELTA(prinv(2), 1.7143620000000002, 1e-10);
  }

  void Test_InvariantsPrincipal_StrainLike()
  {
    LINALG::Matrix<3, 1> prinv(false);
    UTILS::VOIGT::Strains::InvariantsPrincipal(prinv, *tens_strain);
    TS_ASSERT_DELTA(prinv(0), 3.5999999999999996, 1e-10);
    TS_ASSERT_DELTA(prinv(1), 4.3085999999999984, 1e-10);
    TS_ASSERT_DELTA(prinv(2), 1.7143620000000002, 1e-10);
  }

  void Test_InverseStressLike()
  {
    LINALG::Matrix<6, 1> itens_stress_result(false);
    UTILS::VOIGT::Stresses::InverseTensor(*tens_stress, itens_stress_result);

    for (unsigned i = 0; i < 6; ++i)
      TS_ASSERT_DELTA(itens_stress_result(i), (*itens_stress)(i), 1e-5);
  }

  void Test_InverseStrainLike()
  {
    LINALG::Matrix<6, 1> itens_strain_result(false);
    UTILS::VOIGT::Strains::InverseTensor(*tens_strain, itens_strain_result);

    for (unsigned i = 0; i < 6; ++i)
      TS_ASSERT_DELTA(itens_strain_result(i), (*itens_strain)(i), 1e-5);
  }

  void Test_ToStressLike()
  {
    LINALG::Matrix<6, 1> strain_to_stress(false);
    LINALG::Matrix<6, 1> stress_to_stress(false);
    UTILS::VOIGT::Strains::ToStressLike(*tens_strain, strain_to_stress);
    UTILS::VOIGT::Stresses::ToStressLike(*tens_stress, stress_to_stress);

    for (unsigned i = 0; i < 6; ++i)
    {
      TS_ASSERT_DELTA(strain_to_stress(i), (*tens_stress)(i), 1e-5);
      TS_ASSERT_DELTA(stress_to_stress(i), (*tens_stress)(i), 1e-5);
    }
  }

  void Test_ToStrainLike()
  {
    LINALG::Matrix<6, 1> strain_to_strain(false);
    LINALG::Matrix<6, 1> stress_to_strain(false);
    UTILS::VOIGT::Strains::ToStrainLike(*tens_strain, strain_to_strain);
    UTILS::VOIGT::Stresses::ToStrainLike(*tens_stress, stress_to_strain);

    for (unsigned i = 0; i < 6; ++i)
    {
      TS_ASSERT_DELTA(strain_to_strain(i), (*tens_strain)(i), 1e-5);
      TS_ASSERT_DELTA(stress_to_strain(i), (*tens_strain)(i), 1e-5);
    }
  }

  void Test_identity_matrix()
  {
    LINALG::Matrix<6, 1> id(false);

    IdentityMatrix(id);

    TS_ASSERT_DELTA(id(0), 1.0, 1e-10);
    TS_ASSERT_DELTA(id(1), 1.0, 1e-10);
    TS_ASSERT_DELTA(id(2), 1.0, 1e-10);
    TS_ASSERT_DELTA(id(3), 0.0, 1e-10);
    TS_ASSERT_DELTA(id(4), 0.0, 1e-10);
    TS_ASSERT_DELTA(id(5), 0.0, 1e-10);
  }

  void Test_StrainLike_VectorToMatrix()
  {
    LINALG::Matrix<3, 3> matrix(false);
    UTILS::VOIGT::Strains::VectorToMatrix(*tens_strain, matrix);
    TS_ASSERT_EQUALS(matrix, *tens);
  }

  void Test_StressLike_VectorToMatrix()
  {
    LINALG::Matrix<3, 3> matrix(false);
    UTILS::VOIGT::Stresses::VectorToMatrix(*tens_stress, matrix);
    TS_ASSERT_EQUALS(matrix, *tens);
  }

 private:
  Teuchos::RCP<LINALG::Matrix<3, 3>> tens;
  Teuchos::RCP<LINALG::Matrix<3, 3>> itens;
  Teuchos::RCP<LINALG::Matrix<6, 1>> tens_strain;
  Teuchos::RCP<LINALG::Matrix<6, 1>> itens_strain;
  Teuchos::RCP<LINALG::Matrix<6, 1>> tens_stress;
  Teuchos::RCP<LINALG::Matrix<6, 1>> itens_stress;
};

#endif
