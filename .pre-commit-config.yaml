repos:
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: v19.1.6
    hooks:
      - id: clang-format
        name: Format C/C++
        # Only use on C and C++ files and not on other files that clang could format (e.g. json).
        types_or: [c++, c]
        exclude: 'mm$'

  - repo: https://github.com/cheshirekow/cmake-format-precommit
    rev: v0.6.13
    hooks:
      - id: cmake-format
        name: Format cmake
        args: [--config, utilities/code_checks/.cmake-format.yaml, --in-place]
        additional_dependencies: [pyyaml>=5.1]

  - repo: https://github.com/psf/black-pre-commit-mirror
    rev: 22.3.0
    hooks:
      - id: black
        name: Format python

  - repo: https://github.com/pamoller/xmlformatter
    rev: v0.2.6
    hooks:
      - id: xml-formatter
        name: Format xml
        args: [--indent, '2', --indent-char, ' ', --selfclose, --overwrite]
        # Only run on "pure" XML files and not on files that internally use XML (e.g. svg)
        files: \.xml$

  - repo: https://github.com/google/yamlfmt
    rev: v0.12.1
    hooks:
      - id: yamlfmt
        name: Format yaml
        args: [-conf, utilities/code_checks/.yamlfmt.yaml]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
        # Do not modify reference vtu files, since we generate these and do not hand-edit them.
        exclude: 'vtu$'
      - id: no-commit-to-branch
        name: Don't commit to main

  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: insert-license
        name: Insert license header (//)
        types_or: [c++, c]
        exclude: 'mm$'
        args:
          - --license-filepath
          - utilities/license_header.txt
          - --comment-style
          - '//'
          - --detect-license-in-X-top-lines=1
      - id: insert-license
        name: Insert license header (#)
        types_or: [python, cmake, dockerfile, shell]
        args:
          - --license-filepath
          - utilities/license_header.txt
          - --comment-style
          - '#'
          # Allow the first line to be a shebang separated by a newline.
          - --detect-license-in-X-top-lines=3

  - repo: https://github.com/crate-ci/typos
    rev: v1.28.4
    hooks:
      - id: typos
        name: Check for typos in code
        types_or: [c++, c, python, cmake, shell]
        exclude: '(mm$|list_of_tests.cmake)'
      - id: typos
        name: Check for typos in documentation
        types_or: [markdown, rst]

  - repo: local
    hooks:
      - id: check-venv-up-to-date
        name: Python virtual environment is up to date
        language: system
        entry: ./utilities/code_checks/check_venv
        always_run: true
        pass_filenames: false
        fail_fast: true

      - id: check-dependencies-hash
        name: Github workflow dependencies hash is up to date
        language: python
        entry: utilities/python-venv/bin/check-workflow-dependencies-hash
        always_run: true
        pass_filenames: false

      - id: cpp-filename-includes
        name: C++ file names and include style
        description: 'Check that all C++ files have the correct file name and include style'
        language: system
        types_or: [c++, c]
        exclude: 'tests/cut_test/|mm$'
        entry: utilities/python-venv/bin/check-filenames-and-includes
        args: ['--paths', 'src/', 'unittests/', 'apps/', '--files']

      - id: cpp-include-guard
        name: Include guards
        description: 'Check that all C++ files have the correct include guards'
        language: python
        types_or: [c++, c]
        files: '\.(h|hpp)$'
        entry: utilities/python-venv/bin/check-header-guards

      - id: cpp-preprocessor
        name: C++ preprocessor directives
        description: 'Check that all C++ files only use acceptable preprocessor directives'
        language: python
        types_or: [c++, c]
        entry: utilities/python-venv/bin/check-preprocessor

      - id: input-files
        name: Test input files
        description: 'Check input files conform to expectations'
        language: python
        files: 'tests/input_files/.*\.dat$'
        entry: utilities/python-venv/bin/check-test-files

      - id: non-ascii-chars
        name: Non-ASCII characters
        language: system
        exclude_types: [markdown, rst]
        entry: ./utilities/code_checks/check_non_ascii_chars
