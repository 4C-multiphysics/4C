#!/bin/bash

#------------------------------------------------------------------------------------------------------------------------------#
# This is a bash script meant for code checks concerning clang-format style and header compliance.

# The test will fail if code is found that is not compliant with the BACI clang format style or if our header requirements for
# input files and source files are violated. In the event of failure, an error message is written to stdout and to the files
# "wrong_clang_format.txt", respectively "wrong_format.txt".

# Author:    Jonas Nitzler
# Date:      07.08.2019
# Version:   1.2

## Delete old .txt files containing non-compliant files
[ -e wrong_format.txt ] && rm wrong_format.txt
[ -e wrong_clang_format.txt ] && rm wrong_clang_format.txt

### Header check ################################################
echo "Start test for correct file headers ..."
python2 ./utilities/code_checks/header_check.py --out wrong_format.txt | tee wrong_format.txt

if [ -s wrong_format.txt ]
then
  echo "Failed. Non-compliant file headers have been reported in wrong_format.txt."
  cat wrong_format.txt
  exit 1
else
  echo "Passed."
fi


### Tests check ################################################
python2 ./utilities/code_checks/testing_frameworks_check.py --out wrong_tests.txt | tee wrong_tests.txt

if [ -s wrong_tests.txt ]
then
  echo "Failed. Non-compliant (unit- and input file-)tests have been reported in wrong_tests.txt."
  cat wrong_tests.txt
  # exit 1
else
  echo "Passed."
fi

########### Execute clang-format with style file settings (taken from https://github.com/sheredom/git-hooks)##################################################
if [ -f ./utilities/code_checks/clang-format ]
then
  # set the field separator to new line
  IFS=$'\n'

  echo "Start test for code format ..."
  for line in $(find ./ -type f)
  do
    # check if the file is a c or cpp file
    if [[ $line == *.cpp || $line == *.cc || $line == *.cp || $line == *.cxx || $line == *.H || $line == *.h || $line == *.hpp || $line == *.hh || $line == *.hxx ]]
    then
      # Check if clang would format the file
      if [[  $(diff -u <(./utilities/code_checks/clang-format -style=file $(pwd)/${line}) <(cat $(pwd)/${line})) ]]
      then
        uncompliant_files+="$(pwd)/${line}\n"
      fi
    fi
  done

  if [ ! -z "$uncompliant_files" ]
  then
    (printf "$uncompliant_files")>>wrong_clang_format.txt
    echo "Failed. Non-compliant files have been reported in wrong_clang_format.txt."
    cat wrong_clang_format.txt
    exit 1
  fi
fi

echo "Passed."
exit 0
