#!/bin/bash

############################################################
#
# This script formats C++ source files and xml files
#   1) searches for all C++ source files in baci and applies clang-format to them.
#   2) searches for all xml files and applies xmlformat according to the options declared in bacixmlformat to them.
#
############################################################

# Load the python virtual environment, which provides clang-format.
PYTHON_VENV="`dirname "$0"`/baci-python-venv"
source "${PYTHON_VENV}"/bin/activate

# set the field separator to new line
IFS=$'\n'

# 1) clang-format
echo "Run clang-format on all source files in the repository."
for line in $(git ls-files)
do

# check if the file is a c or cpp file
if [[ $line == *.cpp || $line == *.cc || $line == *.cp || $line == *.cxx || $line == *.H || $line == *.h || $line == *.hpp || $line == *.hh || $line == *.hxx ]]
then
    # Format file using clang-format
    clang-format -i -style=file $(pwd)/${line}
fi

# check if the file is a cmake file
if [[ $line == *.cmake || $line == *CMakeLists.txt ]]
then
    # format file using cmake-format
    cmake-format -c $(pwd)/utilities/code_checks/.cmake-format.yaml -i $(pwd)/${line}
fi

done
echo "Done."

# 2) xmlformat with the options declared in bacixmlformat
echo "Run xmlformat on all xml files in the repository."
for line in $(git ls-files)
do

# check if the file is an xml file
if [[ $line == *.xml ]]
then
    # format file using xmlformat
    $(pwd)/utilities/bacixmlformat $(pwd)/${line}
fi

done
echo "Done."