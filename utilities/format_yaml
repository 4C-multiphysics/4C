#!/bin/bash

############################################################
#
# Bash script that executes yamlfmt.
#
# Options applied to yamlfmt:
#   overwrite the existing file by -w
#
# Usage of format_yaml:
#   format_yaml <inputfile>
#   format_yaml --nooverwrite <inputfile>: disables -w option for yamlfmt, instead redirectes output.
#                                             This is achieved by creating a temporary and calling yamlfmt
#                                             on it with -w option enabled. Reason is that the redirection
#                                             of yamlfmt's output without -w does not work.
#
############################################################

# load the python virtual environment, which provides yamlfmt.
PYTHON_VENV="`dirname "$0"`/python-venv"
source "${PYTHON_VENV}"/bin/activate

# call yamlfmt with --nooverwrite as possible option
# note: long option is implemented as argument to getopts, see (https://stackoverflow.com/a/28466267)
# --nooverwrite is seen by getopts as - with the argument nooverwrite
# true argument yamlfile is harvested via shell parameter expansion, updating $OPT and $OPTARG
while getopts ":-:" option
do
    case "$option" in
        -) case "$OPTARG" in # call yamlfmt without overwrite option
            nooverwrite)
                yamlfile="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                # create temporary
                cp $yamlfile "`dirname "$0"`/yaml_tmp_"
                # format temporary in-place
                yamlfmt -w "`dirname "$0"`/yaml_tmp_"
                # read formatted temporary
                cat < "`dirname "$0"`/yaml_tmp_"
                # remove temporary
                rm "`dirname "$0"`/yaml_tmp_"
                exit
            esac;;
        \?) # invalid option
            echo "Error: Invalid option"
            exit;;
    esac
done

# call yamlfmt with overwrite option
echo "Run yamlfmt on $1."
yamlfmt -w $1

echo "Done."