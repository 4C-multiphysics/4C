#
#--------------------------------------------------------------------
#    Makefile CARAT (parallel and sequentiel)
#--------------------------------------------------------------------
#
# ! pfad der unterverzeichnisse in den debugger aufnehmen !
#
#
#
# Ausschalten der Ausgabe von Kommandos durch Make
.SILENT:
#
#--------------------------------------------------------------------
#
# enter path to your source directory here
#--------------------------------------------------------------------
include ./Makefile.personal_path
#
#
#--------------------------------------------------------------------
# list of possible defines:
#--------------------------------------------------------------------
#  
# -DD_BRICK1    defines element brick1
# -DD_FLUID2    defines element fluid2
# -DD_SHELL8    defines element shell8
# -DD_FLUID2    defines element fluid2
# -DD_FLUID3    defines element fluid3
# -DD_ALE       defines element ale
# -DD_WALL1     defines element wall1
#
# -DDEBUG     defines debug mode: routine and array tracing 
# -DPARALLEL  defines parallel version of programm
# -DSIXTYFOUR defines 64bit compilation and linkage
# -DSUSE73    defines for compilation and linkage with gcc and g77 on Suselinux
# 
# -DMLIB_PACKAGE       defines interface to solver library MLIB (HPUX11, sequentiell)
# -DHYPRE_PACKAGE      defines interface to solver library HYPRE
# -DAZTEC_PACKAGE      defines interface to solver library AZTEC
# -DPARSUPERLU_PACKAGE defines interface to solver library ParSuperLU
# -DSUPERLU_PACKAGE    defines interface to solver library SuperLU (not impl. yet)
# -DMUMPS_PACKAGE      defines interface to solver library Mumps (only in parallel HPUX11)
# -DUMFPACK            defines interface to solver library Umfpack
# -DSPOOLES_PACKAGE    defines interface to solver library Spooles (only in parallel HPUX11)
#
#--------------------------------------------------------------------
# switch between sequentiell and parallel compilation by uncommenting 
# the approbiate compilers:
#--------------------------------------------------------------------
#
# sequentiell part
#--------------------------------------------------------------------
#PROGRAM_NAME  = cca_seq_10.20.exe
#FXX     = f77
#CCX     = cc
#LDX     = cc
#PFL     = -DD_SHELL8 -DD_FLUID2 -DD_FLUID3 -DD_ALE -DD_BRICK1 -DD_WALL1 -DAZTEC_PACKAGE -DUMFPACK
#AZTEC   = -laztec_seriell21
#UMFPACK = -lumfpack40_hpux10_32
##--------------------------------------------------------------------
#
# parallel part
#--------------------------------------------------------------------
PROGRAM_NAME  = cca_par_10.20.exe
FXX     = /opt/mpi/bin/mpif77
CCX     = /opt/mpi/bin/mpicc
LDX     = /opt/mpi/bin/mpicc
PFL     = -DPARALLEL  -DD_FLUID2  -DD_SHELL8 -DD_WALL1 -DD_FLUID3 -DD_ALE -DD_BRICK1 \
          -DAZTEC_PACKAGE -DUMFPACK
AZTEC   = -laztec_par21
UMFPACK = -lumfpack40_hpux10_32
#
#--------------------------------------------------------------------
#
CC	 = $(CCX)
LD       = $(CCX)
RM	 = /bin/rm -f

#--------------------------------------------------------------------
# switch between fast and debug compilation by uncommenting 
# the approbiate flags:
#------------------------------------------------ this is debug-32bit
CFLAGS        = -D__HP__ +w1 +e -Aa -Ae  -g ${PFL} -DDEBUG
FFLAGS        = -g -I/opt/mpi/include/
#------------------------------------------------- this is fast-32bit
#CFLAGS       = -D__HP__  +e -Ae +w1  -OAa +Onolimit ${PFL}
#FFLAGS        = +O2 +Onolimit -I/opt/mpi/include/
#--------------------------------------------------------------------
LDFLAGS	 = -L/usr/lib -L/opt/fortran/lib -lcl -lc -lM -lm 
INCLUDES = -I/opt/mpi/include/ \
           -I/bau/stat33/users/statik/lib/hypre-1.6.0/src/hypre/include/ \
           -I/bau/stat33/users/statik/lib/SULUDIST0210/SuperLU_DIST/SRC \
           -I/bau/stat33/users/statik/lib/METIS/ \
           -L/bau/stat33/users/statik/lib/METIS/ -lmetis \
           -L/bau/stat33/users/statik/lib/AZTEC21_MPI/ \
           -L/bau/stat33/users/statik/lib/AZTEC21/ $(AZTEC) \
           -L/bau/stat33/users/statik/lib \
           -L/bau/stat33/users/statik/lib/hypre-1.6.0/src/hypre/lib \
           -L/bau/stat33/users/statik/lib/SULUDIST0210/SuperLU_DIST \
           -L/bau/stat33/users/statik/lib/SCALAPACK \
           -L/bau/stat33/users/statik/lib/BLACS/LIB \
           -L/bau/stat33/users/statik/lib/MUMPS4.1.6/lib \
           -L/bau/stat33/users/statik/lib/UMFPACK/lib \
           -llapack_hppa \
           -lHYPRE_DistributedMatrix \
           -lHYPRE_DistributedMatrixPilutSolver \
           -lHYPRE_Euclid \
           -lHYPRE_FEI \
           -lHYPRE_IJ_mv \
           -lHYPRE_LSI \
           -lHYPRE_MatrixMatrix \
           -lHYPRE_ParaSails \
           -lHYPRE_blas \
           -lHYPRE_parcsr_ls \
           -lHYPRE_parcsr_mv \
           -lHYPRE_seq_mv \
           -lHYPRE_sstruct_ls \
           -lHYPRE_sstruct_mv \
           -lHYPRE_struct_ls \
           -lHYPRE_struct_mv \
           -lHYPRE_utilities \
           -lkrylov \
           -lsuperlu_hppa \
           -lblacs_MPI-HPPA-0 \
           -lblacsCinit_MPI-HPPA-0 \
           -lblacsF77init_MPI-HPPA-0 \
           -lscalapack_HPPA \
           -lmumps \
           -lblas \
           -lumfpack40_hpux10_32

# sparsekit is not used at the moment
#           -lskit 
# libHYPRE_superlu.a convlicts with libsuperlu_hppa.a
#           -lHYPRE_superlu

LDOPTS        = -a archive -v


LIBS	      =  
#
# binaries
#                main
OBJS1         = src/main/main_ccarat.o 
#                global_full
OBJS2	      = src/global_full/global_control.o \
                src/global_full/global_inp_control.o \
                src/global_full/global_cal_control.o \
                src/global_full/global_init_control.o \
                src/global_full/global_ass_dof.o \
                src/global_full/cal_dyn_control.o \
                src/global_full/cal_static_control.o \
                src/global_full/cal_nlnstatic_control.o \
                src/global_full/cal_nlndyn_struct.o \
                src/global_full/cal_nlndyn_stru_expl.o \
                src/global_full/cal_static_service.o \
                src/global_full/dyn_timecurve.o \
                src/global_full/dyn_service.o \
                src/global_full/map_node_find.o \
                src/global_full/global_mask_matrices.o \
                src/global_full/global_mask_msr.o \
                src/global_full/global_mask_vbr.o \
                src/global_full/global_mask_mds.o \
                src/global_full/global_dofconnect.o \
                src/global_full/global_mask_parcsr.o \
                src/global_full/global_mask_ucchb.o \
                src/global_full/global_mask_dense.o \
                src/global_full/global_mask_rcptr.o \
                src/global_full/global_mask_ccf.o \
                src/global_full/global_mask_skyline.o \
                src/global_full/global_mask_spooles.o \
                src/global_full/global_calelm.o \
                src/global_full/global_calelm_dyn.o \
                src/global_full/global_calelm_fluid.o \
                src/global_full/global_calrhs.o \
                src/global_full/solver_control.o \
                src/global_full/solver_service.o \
                src/global_full/solver_service2.o \
                src/global_full/solver_add_data.o \
                src/global_full/solver_add_msr.o \
                src/global_full/solver_add_mlib.o \
                src/global_full/solver_add_parcsr.o \
                src/global_full/solver_add_ucchb.o \
                src/global_full/solver_add_dense.o \
                src/global_full/solver_add_rcptr.o \
                src/global_full/solver_add_ccf.o \
                src/global_full/solver_add_skyline.o \
                src/global_full/solver_add_spooles.o \
                src/global_full/solver_mlib.o \
                src/global_full/solver_aztec.o \
                src/global_full/solver_hypre.o \
                src/global_full/solver_superlu.o \
                src/global_full/solver_lapack.o \
                src/global_full/solver_mumps.o \
                src/global_full/solver_umfpack.o \
                src/global_full/solver_colsol.o \
                src/global_full/solver_spooles.o \
                src/global_full/restart_control.o \
                src/global_full/machine_hpux.o 
#                pss_full
OBJS3	      = src/pss_full/pss_am.o \
                src/pss_full/pss_ds.o \
                src/pss_full/pss_fr.o \
                src/pss_full/pss_pss.o 
#                input_full
OBJS4	      = src/input_full/input_control_global.o \
                src/input_full/input_ctr_head.o \
                src/input_full/input_sol.o \
                src/input_full/input_design.o \
                src/input_full/input_design_top.o \
                src/input_full/input_mesh.o \
                src/input_full/input_topology.o \
                src/input_full/input_curves.o \
                src/input_full/input_material.o \
                src/input_full/inherit_insidedesign.o \
                src/input_full/inherit_design_dis.o \
                src/input_full/input_conditions.o
#                fluid3
OBJS5	      = src/fluid3/f3_inpele.o 
#                shell8
OBJS6	      = src/shell8/s8_main.o \
                src/shell8/s8_restart.o \
                src/shell8/s8_inpele.o \
                src/shell8/s8_intg.o \
                src/shell8/s8_jaco.o \
                src/shell8/s8_a3.o \
                src/shell8/s8_loccoordnode.o \
                src/shell8/s8_funcderiv.o \
                src/shell8/s8_static_ke.o \
                src/shell8/s8_static_keug.o \
                src/shell8/s8_cal_dyn.o \
                src/shell8/s8_stress.o \
                src/shell8/s8_tfte.o \
                src/shell8/s8_tforce.o \
                src/shell8/s8_tvkg.o \
                src/shell8/s8_load1.o \
                src/shell8/s8_tmtr.o \
                src/shell8/s8_mtr.o \
                src/shell8/s8_tvmr.o \
                src/shell8/s8_tvbo.o \
                src/shell8/s8_tvhe_linear.o \
                src/shell8/s8_tvhe.o \
                src/shell8/s8_tvma.o \
                src/shell8/s8_tmat.o \
                src/shell8/s8_eps.o \
                src/shell8/s8_intforce.o \
                src/shell8/s8_mat_linel.o \
                src/shell8/s8_btdb.o \
                src/shell8/s8_eas.o \
                src/shell8/s8_ans.o \
                src/shell8/s8_vthv.o \
                src/shell8/s8_xint.o \
                src/shell8/s8_init.o 
#                ale
OBJS7         = src/ale3/ale3_inpele.o \
                src/ale3/ale3_intg.o \
                src/ale3/ale3_static_ke.o \
                src/ale3/ale3_funcderiv.o \
                src/ale3/ale3_bop.o \
                src/ale3/ale3_jaco.o \
                src/ale3/ale3_mat_linel.o \
                src/ale3/ale3_call_stiff.o \
                src/ale3/ale3_hourglass.o \
                src/ale3/ale3_main.o \
                src/ale3/ale3_calelm.o \
                src/ale3/ale3_rhs.o \
                src/ale3/ale3_dirich.o \
                src/ale3/ale3_dyn_control.o \
                src/ale2/ale2_inpele.o \
                src/ale2/ale2_intg.o \
                src/ale2/ale2_static_ke.o \
                src/ale2/ale2_funcderiv.o \
                src/ale2/ale2_bop.o \
                src/ale2/ale2_jaco.o \
                src/ale2/ale2_mat_linel.o \
                src/ale2/ale2_hourglass.o \
                src/ale2/ale2_main.o
#                parallel
OBJS8	      = src/parallel/par_initmetis.o \
                src/parallel/par_make_comm.o \
                src/parallel/par_assignmesh.o
#                brick1
OBJS9	      = src/brick1/b1_inpele.o \
                src/brick1/b1_intg.o \
                src/brick1/b1_static_ke.o \
                src/brick1/b1_funcderiv.o \
                src/brick1/b1_bop.o \
                src/brick1/b1_jaco.o \
                src/brick1/b1_mat_linel.o \
                src/brick1/b1_call_stiff.o \
                src/brick1/b1_main.o
#                math
OBJS10	      = src/math/sort_find.o \
                src/math/math1.o
#                output
OBJS11	      = src/output/out_global.o \
                src/output/out_gid_msh.o \
                src/output/out_gid_sol.o
#                wall1
OBJS12	      = src/wall1/w1_bop.o \
                src/wall1/w1_cal_deriv.o \
                src/wall1/w1_cal_eps.o \
                src/wall1/w1_cal_stress.o \
                src/wall1/w1_call_mat.o \
                src/wall1/w1_call_stiff.o \
                src/wall1/w1_funcderiv.o \
                src/wall1/w1_init.o \
                src/wall1/w1_inpele.o \
                src/wall1/w1_intg.o \
                src/wall1/w1_jaco.o \
                src/wall1/w1_main.o \
                src/wall1/w1_mat_linel.o \
                src/wall1/w1_mat_plast_dp.o \
                src/wall1/w1_mat_plast_epc.o \
                src/wall1/w1_mat_plast_epc_serv.o \
                src/wall1/w1_mat_plast_mises.o \
                src/wall1/w1_mat_plast_serv.o \
                src/wall1/w1_mat_serv.o \
                src/wall1/w1_static_ke.o \
                src/wall1/w1_static_keug.o \
                src/wall1/w1_boplin.o \
                src/wall1/w1_defgrad.o \
                src/wall1/w1_call_matgeononl.o \
                src/wall1/w1_mat_linelgeonon.o \
                src/wall1/w1_cal_kg.o \
                src/wall1/w1_cal_keu.o \
                src/wall1/w1_cal_fint.o \
                src/wall1/w1_cal_fext.o \
                src/wall1/w1_mat_trans.o
                #                fluid2
OBJS14        = src/fluid2/f2_caldirich.o \
                src/fluid2/f2_calelesize.o \
                src/fluid2/f2_calele.o \
                src/fluid2/f2_calfuncderiv.o \
                src/fluid2/f2_calint.o \
                src/fluid2/f2_caliterrhs.o \
                src/fluid2/f2_calgalmat.o \
                src/fluid2/f2_caljaco.o \
                src/fluid2/f2_calservice.o \
                src/fluid2/f2_calstabpar.o \
                src/fluid2/f2_calstabmat.o \
                src/fluid2/f2_caltimerhs.o \
                src/fluid2/f2_inpele.o \
                src/fluid2/f2_intg.o \
                src/fluid2/f2_main.o 
#                fluid_full
OBJS15        = src/fluid_full/cal_fluid.o \
                src/fluid_full/fluid_dirich.o \
                src/fluid_full/fluid_imp_semimp.o \
                src/fluid_full/fluid_pr_mcorr.o \
                src/fluid_full/fluid_stationary.o \
                src/fluid_full/fluid_service.o \
		src/fluid_full/inp_fluid_start_data.o
#                fortran
OBJS13	      = src/fortran/colsol.o
#
#
# targets
#
PROGRAM       = $(PROGRAM_NAME)
#
# dependencies
#
$(PROGRAM):     $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) $(OBJS7) $(OBJS8) \
                $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) $(OBJS15)
		@echo "Linking $(PROGRAM) ..."
		@$(LD) $(LDFLAGS) $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) \
                $(OBJS15) $(LIBS) $(INCLUDES) -o $(PROGRAM)
		@echo "done"

#
$(OBJS1):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS2):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS3):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS4):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS5):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS6):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS7):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS8):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS9):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS10):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS11):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS12):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS14):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
		@echo "MainMake is back."
#
$(OBJS15):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
# fortran
$(OBJS13):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(FXX) $(FFLAGS)  -c  ${<F}
		@echo "MainMake is back."
##
.c.o:
	@ echo "$@ wird kompiliert...."
	$(CC) $(CFLAGS) $(INCLUDES) -c  $<

.f.o:
	@ echo "$@ wird kompiliert...."
	$(FXX) $(FFLAGS) -c  $<
clean:
	rm -rf  $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) \
                $(OBJS13) $(OBJS14) $(OBJS15) 
$
