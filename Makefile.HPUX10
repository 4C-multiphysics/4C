#--------------------------------------------------------------------
#    Makefile CCARAT (parallel and sequentiel)
#--------------------------------------------------------------------
#
#--------------------------------------------------------------------
# list of possible defines:
#--------------------------------------------------------------------
#  
#  ELEMENTS:
#  =========
# -DD_ALE        defines element ale (2D+3D)
# -DD_AXISHELL   defines axishell element
# -DD_BEAM3      defines element beam3
# -DD_BRICK1     defines element brick1
# -DD_FLUID2     defines element fluid2
# -DD_FLUID2_PRO defines element fluid2 with projection method
# -DFLUID2_ML    defines element fluid2 with multilevel 
# -DD_FLUID3     defines element fluid3
# -DFLUID3_ML    defines element fluid3 with multilevel 
# -DD_SHELL8     defines element shell8
# -DD_SHELL9     defines element shell9
# -DD_WALL1      defines element wall1
# -DD_INTERF     defines interface element
# -DD_WALLGE     defines gradient enhanced wall element
#
#  PROBLEMTYPES:
#  =============
# -DD_FLUID      defines general fluid problem
# -DD_FSI        defines general FSI problem
# -DD_OPTIM      defines optimization
# -DD_CONTACT    defines contact algorithms
#
#  ADDITIONAL FEATURES:
#  ====================
# -DD_MAT        defines materials
# -DS8CONTACT    defines contact algorithms for shell8 contact
# -DWALLCONTACT  defines contact algorithms for wall contact
# -DGEMM         defines Generalized Energy-Momentum Int. Scheme
#
#  TOOLS:
#  ======
# -DRESULTTEST   defines defines result testing before checking in a new version
# -DPERF         defines routines for exact time measurements 
#
#  PLATFORMS:
#  ==========
# -DHPUX10       defines for compilation on HP-UX 10.20
# -DHPUX11       defines for compilation on HP-UX 11.0
# -DHPUXITA      defines compilation for Itanium2 running HP-UX 11.23
# -DSUSE73       defines for compilation and linkage with gcc and g77 on Linux
# -DAZUSA        defines for compilation on azusa.hww.de
# -DSUN          defines for compilation and linkage on CUSS Sunfire machine
#
# -DDEBUG        defines debug mode: routine and array tracing 
# -DPARALLEL     defines parallel version of programm
# -DSIXTYFOUR    defines 64bit compilation and linkage
#
#  SOLVERS:
#  ========
# -DAZTEC_PACKAGE      defines interface to solver library AZTEC
# -DUMFPACK            defines interface to solver library Umfpack
# -DSPOOLES_PACKAGE    defines interface to solver library Spooles (only in parallel HPUX11)
#
#  INACTIVE SOLVERS:
#  =================
# -DMLIB_PACKAGE       defines interface to solver library MLIB (HPUX11, sequentiell)
# -DHYPRE_PACKAGE      defines interface to solver library HYPRE (not yet impl.)
# -DPARSUPERLU_PACKAGE defines interface to solver library ParSuperLU
# -DSUPERLU_PACKAGE    defines interface to solver library SuperLU 
# -DMUMPS_PACKAGE      defines interface to solver library Mumps (only in parallel HPUX11)
#
#  VISUAL:
#  =======
# -DVISUAL2_PACKAGE    defines visualisation tool VISUAL2 (only in seriell)
# -DVISUAL3_PACKAGE    defines visualisation tool VISUAL3 (only in seriell)
#
#
#--------------------------------------------------------------------
#  use these defines for compilation
#--------------------------------------------------------------------
PFL1  = -DHPUX10 \
	-DD_FLUID -DD_FLUID2 -DD_FLUID3 -DD_FSI -DD_ALE \
	-DD_AXISHELL -DD_BRICK1 -DD_OPTIM -DD_BEAM3 -DD_SHELL9 -DD_MAT \
	-DD_SHELL8 -DD_CONTACT -DS8CONTACT \
        -DD_WALL1 -DD_INTERF  -DD_WALLGE\
        -DRESULTTEST -DPERF \
        -DUMFPACK -DAZTEC_PACKAGE
#
#--------------------------------------------------------------------
# switch between sequentiell and parallel compilation by uncommenting 
# the approbiate compilers:
#--------------------------------------------------------------------
# sequentiell part
#--------------------------------------------------------------------
PROGRAM_NAME  = cca_seq_10.20.
FXX     = f77
CCX     = cc
LDX     = cc
PFL     = $(PFL1)
AZTEC   = -laztec_seriell21
UMFPACK = -lumfpack40_hpux10_32
SPOOLES = 
#--------------------------------------------------------------------
# parallel part
#--------------------------------------------------------------------
#PROGRAM_NAME  = cca_par_10.20.
#FXX   = /opt/mpi/bin/mpif77
#CCX   = /opt/mpi/bin/mpicc
#LDX   = /opt/mpi/bin/mpicc
#PFL   = $(PFL1) -DPARALLEL
#AZTEC   = -laztec_par21
#UMFPACK = -lumfpack40_hpux10_32
#SPOOLES = -lspoolesMPI_10.20  -lspooles_10.20
#--------------------------------------------------------------------
#
CC	 = $(CCX)
LD       = $(CCX)
RM	 = /bin/rm -f
#
#
#--------------------------------------------------------------------
# switch between fast and debug compilation by uncommenting 
# the approbiate flags:
#------------------------------------------------ this is debug-32bit
#PROGRAMM      =  $(PROGRAM_NAME)debg
#CFLAGS        = -D__HP__ +w1 +e -Aa -Ae  -g ${PFL} -DDEBUG
#FFLAGS        = -g -I/opt/mpi/include/
#------------------------------------------------- this is fast-32bit
PROGRAMM      =  $(PROGRAM_NAME)fast
CFLAGS        = -D__HP__  +w1 +e -Aa -Ae -O +Onolimit  ${PFL}
FFLAGS        = +O2 +Onolimit -I/opt/mpi/include/
#---------------------------------------------------- VISUAL2/VISUAL3
#
#
# VISUAL2/VISUAL3 cannot linked together into one executable!!!
OPENGL          = -L/opt/graphics/OpenGL/lib -lGLU -lGL 
PEX5            = -L/opt/graphics/PEX5/lib -lPEX5 
VISUAL3         = $(OPENGL) $(PEX5) -lVisual3 -lX11 -lXext -lXi
VISUAL2         = -lVisual2 -lX11
#VISUAL          = $(VISUAL3)
VISUAL          =
#--------------------------------------------------------------------
#
#
LIBDIR = /bau/stat16/users/statik/ccarat/lib/hpux_10


LDFLAGS	 = -L/usr/lib -L/opt/fortran/lib -lcl -lc -lM -lm 
LDOPTS        = -a archive -v


INCLUDES = -I/opt/mpi/include/ \
	   -I/bau/stat16/users/statik/ccarat/include


LIBS     = -L$(LIBDIR)/metis/ \
           -L$(LIBDIR)/aztec21/ \
           -L$(LIBDIR)/umfpack/ \
           -L$(LIBDIR)/spooles \
           -L$(LIBDIR)/visual \
           -L$(LIBDIR)/lapack \
           -lmetis \
           $(AZTEC) \
           $(UMFPACK) \
           $(SPOOLES) \
           $(VISUAL) \
           -llapack_hppa \
           -lblas



#----------------------- binaries -----------------------------------
include ./Makefile.objects
#--------------------------------------------------------------------
#
#
SRC=.
#
#
PROGRAM       = $(PROGRAMM)
#
#
$(PROGRAM):     $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) $(OBJS7) $(OBJS8) \
                $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) $(OBJS15) \
                $(OBJS16) $(OBJS17) $(OBJS18) $(OBJS19) $(OBJS20) $(OBJS_OPT) $(OBJS_AXISHELL) $(OBJS_MAT) $(OBJS_F2PRO) \
                $(OBJS_IF) $(OBJS_WALLGE)
		@echo "Linking $(PROGRAM) ..."
		@$(LD) $(LDFLAGS) $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) \
                $(OBJS15) $(OBJS16) $(OBJS17) $(OBJS18) $(OBJS19) $(OBJS20) $(OBJS_OPT) $(OBJS_AXISHELL) $(OBJS_MAT) $(OBJS_F2PRO) \
                $(OBJS_IF) $(OBJS_WALLGE) \
		$(LIBS) $(INCLUDES) -o $(PROGRAM)
		@echo "done"


$(OBJS1):
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS2):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS3):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS4):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS5):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS6):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS7):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS8):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS9):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS10):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS11):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS12):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS14):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS15):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS16):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS17):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS18):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS19):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS20):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_OPT):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_AXISHELL):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_MAT):     
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_F2PRO):
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@
		
$(OBJS_IF):
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_WALLGE):
		@echo "Making $@ ..."
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

# fortran
$(OBJS13):     
		@echo "Making $@ ..."
		$(FXX) $(FFLAGS)  -c ${SRC}/${@D}/$(*F).f -o ${SRC}/$@

.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

.f.o:
	$(FXX) $(FFLAGS) $(INCLUDES) -c $< -o $@

clean:
	rm -rf  $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) \
                $(OBJS13) $(OBJS14) $(OBJS15) $(OBJS16) $(OBJS17) $(OBJS18) \
		$(OBJS19) $(OBJS20) \
		$(OBJS_OPT) $(OBJS_AXISHELL) $(OBJS_MAT) $(OBJS_F2PRO) \
		$(OBJS_WALLGE) $(OBJS_IF)

