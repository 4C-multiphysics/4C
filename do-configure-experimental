#!/bin/sh

# ln -s /usr/lib/blitz/include/blitz/gnu /usr/include/blitz

BACI_HOME=`dirname $0`
EXTRA_ARGS=$@

# activate debug version: ./do-configure --debug 
# or choose do-configure-debug which does the same
if [ "x$1" == "x--debug" ]; then
  BUILD_TYPE="DEBUG"
  TRILINOS_BUILD_TYPE="dbg"
else
  BUILD_TYPE="RELEASE"
  TRILINOS_BUILD_TYPE="release"
fi

##############################################################
# detect operating system
if [[ "`uname -r | grep 2.6.29.6`" ]] || [[ "`uname -r | grep fc8`" ]]; then
	echo "Detected Fedora 8"
	echo "!!!!!!!!!!!!!!!!!!!!  WARNING  !!!!!!!!!!!!!!!!!!!!"
	echo "!!       You are using an outdated system.       !!"
	echo "!! It's highly recommended to update your system !!"
	echo "!! to Fedora 16 soon. There's no support for FC8 !!"
	echo "!! machines any more.                            !!" 
	echo "!!!!!!!!!!!!!!!!!!!!  WARNING  !!!!!!!!!!!!!!!!!!!!"
	read -p "Press [Enter] to proceed..."
	OS_VERSION="FC8"
	CMAKE_COMMAND=/lnm/programs/cmake-2.8.2/bin/cmake
	CUBIT_PATH=/lnm/programs/cubit-13.2/bin
elif [[ "`uname -r | grep fc12`" ]] || [[ "`uname -r | grep fc11`" ]]; then
	echo "Detected Fedora 12"
	OS_VERSION="FC12"
	CMAKE_COMMAND=cmake
	CUBIT_PATH=/lnm/programs/cubit-13.2/bin
elif [ "`uname -r | grep fc16`" ]; then
	echo "Detected Fedora 16"
	OS_VERSION="FC16"
	CMAKE_COMMAND=cmake
	CUBIT_PATH=/lnm/programs64/cubit-13.2/bin
fi

# remove CMakeCache.txt
rm -f CMakeCache.txt

############################################################
# decide which MPI and which libraries shall be used
if [ "$OS_VERSION" == "FC8" ]; then
	MPIDIR=/usr
elif [ "$OS_VERSION" == "FC12" ]; then
	MPIDIR=/usr/lib/openmpi
elif [ "$OS_VERSION" == "FC16" ]; then
	MPIDIR=/usr/lib64/openmpi
else
	echo "unknown OS version! This is fatal!"
	exit
fi

############################################################
# use LNM Trilinos Q3/2012 (a)
if [ "$OS_VERSION" == "FC16" ]; then
	INCLUDE_INSTALL_DIR="/lnm/lib/Q3_2012/fc16/openmpi-gcc/include"
	LIB_INSTALL_DIR="/lnm/lib/Q3_2012/fc16/openmpi-gcc/lib"
	Trilinos_PREFIX="/lnm/lib/Q3_2012/trilinos/fc16_openmpi_$TRILINOS_BUILD_TYPE/"
	# libM replacement
	AMDLIBMDIR_PATH="/lnm/lib/Q3_2012/amdlibm-3-0-2"
	# AMD core math library BLAS/LAPACK replacement
	ACMLDIR_PATH="/lnm/lib/Q3_2012/acml-5-2-0/gfortran64"
	BLAS_LIBS="/lnm/lib/Q3_2012/acml-5-2-0/gfortran64/lib/libacml.a"
	LAPACK_LIBS="/lnm/lib/Q3_2012/acml-5-2-0/gfortran64/lib/libacml.a"
else
	# no Q3/2012 Trilinos available for FC8 and FC12.
	# use Q2/2012 instead
	INCLUDE_INSTALL_DIR="/lnm/lib/Q2_2012/fc8/openmpi-gcc/include"
	LIB_INSTALL_DIR="/lnm/lib/Q2_2012/fc8/openmpi-gcc/lib"
	Trilinos_PREFIX="/lnm/lib/Q2_2012/trilinos/fc8_openmpi_release/"
	# libM replacement
	AMDLIBMDIR_PATH=""
	# AMD core math library BLAS/LAPACK replacement
	ACMLDIR_PATH=""
	BLAS_LIBS=""
	LAPACK_LIBS=""

	echo "!!!!!!!!!!!!!!!!!!!!  WARNING  !!!!!!!!!!!!!!!!!!!!"
	echo "!!       You are using an outdated system.       !!"
	echo "!! It's highly recommended to update your system !!"
	echo "!! to Fedora 16 soon!                            !!"
	echo "!! No Q3/2012 Trilinos available for FC8 and FC12!!" 
	echo "!! The configuration script now uses the Q2/2012 !!"
	echo "!! Trilinos release.                             !!" 
	echo "!! New BLAS/LAPACK library replacements may not  !!"
	echo "!! work with old 32bit systems any more. We do   !!"
	echo "!! NOT guarantee for the reliability of your     !!"
	echo "!! results using wrong BLAS/LAPACK libraries     !!"
	echo "!!!!!!!!!!!!!!!!!!!!  WARNING  !!!!!!!!!!!!!!!!!!!!"
	read -p "Press [Enter] to proceed..."
fi

Trilinos_DIR="$Trilinos_PREFIX/lib/cmake/Trilinos"


############################################################

$CMAKE_COMMAND \
    -D CMAKE_BUILD_TYPE:STRING=$BUILD_TYPE \
    -D CMAKE_CXX_COMPILER:FILEPATH="$MPIDIR/bin/mpic++" \
    -D CMAKE_C_COMPILER:FILEPATH="$MPIDIR/bin/mpicc" \
    -D CMAKE_Fortran_COMPILER:FILEPATH="$MPIDIR/bin/mpif90" \
    -D CMAKE_CXX_FLAGS:STRING="-Wall -mfpmath=sse -msse3 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE" \
    -D CMAKE_CXX_FLAGS_RELEASE:STRING="-O3" \
    -D CMAKE_C_FLAGS:STRING="-Wall -mfpmath=sse -msse3 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE" \
    -D CMAKE_C_FLAGS_RELEASE:STRING="-O3" \
    -D CMAKE_EXE_LINKER_FLAGS:STRING="-lhdf5_hl" \
    -D CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING="-O2" \
    -D CMAKE_Fortran_FLAGS:STRING="-Wall" \
    -D CMAKE_Fortran_FLAGS_RELEASE:STRING="-O5 -funroll-all-loops -malign-double" \
    -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF \
    -D HAVENOT_SUPERLU:BOOL=OFF \
    -D HAVE_TEKO:BOOL=OFF \
    -D HAVE_MueLu:BOOL=ON \
    -D TRILINOS_DEV:BOOL=ON \
    -D D_ARTNET:BOOL=ON \
    -D D_RED_AIRWAYS:BOOL=ON \
    -D TRAP_FE:BOOL=OFF \
    -D PARMETIS:BOOL=ON \
    -D COLOROUTPUT:BOOL=OFF \
    -D D_EXODUS:BOOL=ON \
    -D D_ALE:BOOL=ON \
    -D D_FLUID3:BOOL=ON \
    -D D_THERMO:BOOL=ON \
    -D ENABLE_STACKTR:BOOL=ON \
    -D INCLUDE_INSTALL_DIR:FILEPATH=$INCLUDE_INSTALL_DIR \
    -D LIB_INSTALL_DIR:FILEPATH=$LIB_INSTALL_DIR \
    -D Trilinos_DIR:FILEPATH=$Trilinos_DIR \
    -D BOOST_INCLUDEDIR:FILEPATH=$INCLUDE_INSTALL_DIR \
    -D BOOST_LIBRARYDIR:FILEPATH=$LIB_INSTALL_DIR \
    -D QHULL_LIBRARY_DIR:FILEPATH=$LIB_INSTALL_DIR \
    -D QHULL_INCLUDE_DIR:FILEPATH=$INCLUDE_INSTALL_DIR \
    -D MPI_DIR:FILEPATH=$MPIDIR \
    -D CUBIT_DIR:FILEPATH=$CUBIT_PATH \
    -D BLA_VENDOR:STRING="ACML.5.2.0" \
    -D BLAS_LIBRARIES:FILEPATH=$BLAS_LIBS \
    -D LAPACK_LIBRARIES:FILEPATH=$LAPACK_LIBS \
    -D ACMLDIR:STRING=$ACMLDIR_PATH \
    -D AMDLIBMDIR:FILEPATH=$AMDLIBMDIR_PATH \
    $EXTRA_ARGS \
    ${BACI_HOME}

BUILD_FOLDER=`pwd`
cd $BACI_HOME

if [ -f .cproject ]; then ./adapt_cproject.py `basename $0` $BUILD_FOLDER $BUILD_TYPE; fi

#    -D HDF5_INCLUDE_DIRS:FILEPATH="/usr/include" \
#    -D HDF5_LIBRARY_DIRS:FILEPATH="/usr/lib64" \
#    -D HDF5_HL_LIBRARIES:STRING="-lhdf5_hl" \
