
post_gid: $(OBJS_POST_GID_BIN) $(OBJS_POST_GID_COMMON) $(OBJS_POST_COMMON)
	$(PLAIN_LD) $(LDFLAGS) $(PLAIN_LIBS) $(OBJS_POST_GID_BIN) $(OBJS_POST_GID_COMMON) $(OBJS_POST_COMMON) -o post_gid

post_gid_txt: $(OBJS_POST_GID_TXT) $(OBJS_POST_GID_COMMON) $(OBJS_POST_COMMON)
	$(PLAIN_LD) $(LDFLAGS) $(PLAIN_LIBS) $(OBJS_POST_GID_TXT) $(OBJS_POST_GID_COMMON) $(OBJS_POST_COMMON) -o post_gid_txt

post_out: $(OBJS_POST_OUT) $(OBJS_POST_COMMON)
	$(PLAIN_LD) $(LDFLAGS) $(PLAIN_LIBS) $(OBJS_POST_OUT) $(OBJS_POST_COMMON) -o post_out

# We need the fortran objects here, visual is called by fortran code.
post_visual2: $(OBJS_POST_VISUAL2) $(OBJS_POST_COMMON) src/fortran/vis2_qat2v2.o
	$(PLAIN_LD) $(LDFLAGS) $(OBJS_POST_VISUAL2) src/fortran/vis2_qat2v2.o $(OBJS_POST_COMMON) $(PLAIN_LIBS) $(VISUAL2_LIB) -o post_visual2

post_monitor: $(OBJS_POST_MONITOR) $(OBJS_POST_COMMON)
	$(PLAIN_LD) $(LDFLAGS) $(OBJS_POST_MONITOR) $(OBJS_POST_COMMON) $(PLAIN_LIBS) -o post_monitor

$(OBJS_MAIN):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_GLOBAL):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_STRUCTURE):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_SOLVER):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_PSS):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_INPUT):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_FLUID3):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_F3F):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_SHELL8):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_ALE):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_PAR):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_BRICK1):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_MATH):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_OUTPUT):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_WALL1):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_FLUID2):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_FLUID):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_FSI):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_SSI):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_SHELL9):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_BEAM3):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_F2ML):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_F3ML):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_S2ML):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_OPT):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_AXISHELL):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_MAT):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_F2PRO):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_IF):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_WALLGE):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_VISUAL):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_POST_GID_BIN):
		$(PLAIN_CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_POST_GID_TXT):
		$(PLAIN_CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_POST_GID_COMMON):
		$(PLAIN_CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_POST_COMMON):
		$(PLAIN_CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_POST_OUT):
		$(PLAIN_CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_POST_VISUAL2):
		$(PLAIN_CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_POST_MONITOR):
		$(PLAIN_CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

# fortran
$(OBJS_FORTRAN):
		$(F77) $(FFLAGS)  -c ${SRC}/${@D}/$(*F).f -o ${SRC}/$@

$(OBJS_F3F_F):
		$(F77) $(FFLAGS)  -c ${SRC}/${@D}/$(*F).f -o ${SRC}/$@

# c++
$(OBJS_NURBS_CPP):
		$(CP) $(CPFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).cpp -o ${SRC}/$@


.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

.f.o:
	$(F77) $(FFLAGS) $(INCLUDES) -c $< -o $@

clean:
	rm -f	src/*/*.o
