Index: src/drt_mortar/mortar_interface.cpp
===================================================================
--- src/drt_mortar/mortar_interface.cpp	(revision 21208)
+++ src/drt_mortar/mortar_interface.cpp	(working copy)
@@ -35,23 +35,13 @@
 #include "../linalg/linalg_serialdensevector.H"
 #include "../linalg/linalg_serialdensematrix.H"
 
-#include "../drt_io/io_control.H"
-#include "../drt_meshfree_discret/drt_meshfree_discret.H"
-
 #include "../drt_lib/drt_utils_parmetis.H"
 #include "../drt_lib/drt_utils.H"
-#include "../drt_lib/drt_globalproblem.H"
 
 #include <Teuchos_Time.hpp>
 #include <Epetra_Time.h>
 #include <Epetra_SerialComm.h>
 
-#include "../drt_particle/binning_strategy.H"
-
-#include "../drt_nurbs_discret/drt_nurbs_discret.H"
-
-#include "../drt_poroelast/poroelast_utils.H"
-
 /*----------------------------------------------------------------------*
  |  ctor (public)                                            mwgee 10/07|
  *----------------------------------------------------------------------*/
@@ -81,32 +71,9 @@
   procmap_.clear();
 
   // build interface disretization
-  if (!nurbs_)
-  {
-    if (!imortar_.get("GEO_DECOUPLED", false))
-    {
-      // standard case
-      idiscret_ = Teuchos::rcp(
-          new DRT::Discretization((std::string) "mortar interface", com));
-    }
-    else
-    {
-      // adapt flags in meshfree params
-      Teuchos::RCP<Teuchos::ParameterList> meshfreeparams
-        = Teuchos::rcp(new Teuchos::ParameterList(DRT::Problem::Instance()->MeshfreeParams()));
-      meshfreeparams->set("TYPE", "GeoDecoupled");
+  idiscret_ = Teuchos::rcp(
+      new DRT::Discretization((std::string) "mortar interface", com));
 
-      idiscret_ = Teuchos::rcp(
-          new DRT::MESHFREE::MeshfreeDiscretization((std::string) "mortar interface", com, *meshfreeparams));
-    }
-  }
-  else
-  {
-    idiscret_ = Teuchos::rcp(
-        new DRT::NURBS::NurbsDiscretization((std::string) "mortar interface",
-            com));
-  }
-
   // overwrite shape function type
   INPAR::MORTAR::ShapeFcn shapefcn = DRT::INPUT::IntegralValue<
       INPAR::MORTAR::ShapeFcn>(IParams(), "LM_SHAPEFCN");
@@ -284,7 +251,7 @@
 void MORTAR::MortarInterface::AddMortarPoint(
     Teuchos::RCP<MORTAR::MortarNode> mrtrnode)
 {
-  Teuchos::rcp_dynamic_cast<DRT::MESHFREE::MeshfreeDiscretization>(idiscret_, true)->AddPoint(mrtrnode);
+  dserror("Needed for MeshfreeDiscretization. Blame on us!");
   return;
 }
 
@@ -318,6 +285,9 @@
  *----------------------------------------------------------------------*/
 void MORTAR::MortarInterface::RemoveSingleInterfaceSide(bool slaveside)
 {
+#if 1
+  dserror("MortarInterface::RemoveSingleInterfaceSide not included in contact module");
+#else
   Teuchos::RCP<Epetra_Map> elecolmap;
   Teuchos::RCP<Epetra_Map> nodecolmap;
   Teuchos::RCP<Epetra_Map> pointcolmap;
@@ -405,7 +375,7 @@
         idiscret_->DeleteNode(gid);
     }
   }
-
+#endif
   return;
 }
 
@@ -729,10 +699,6 @@
   // make sure discretization is complete
   Discret().FillComplete(true, false, false);
 
-  //ghost also parent elements according to the ghosting strategy of the interface (atm just for poro)
-  if (newghosting && poro_)
-    POROELAST::UTILS::CreateVolumeGhosting(Discret());
-
   // need row and column maps of slave and master nodes / elements / dofs
   // separately so we can easily address them
   UpdateMasterSlaveSets();
@@ -822,6 +788,9 @@
  *----------------------------------------------------------------------*/
 void MORTAR::MortarInterface::BinningStrategy(Teuchos::RCP<Epetra_Map> initial_elecolmap, double vel)
 {
+#if 1
+  dserror("Support for binning strategy in contact module only upon request. Please contact AdCo Engineering GW GmbH.");
+#else
   // init XAABB
   LINALG::Matrix<3,2> XAABB(false);
   for(int dim=0; dim<3; ++dim)
@@ -926,7 +895,7 @@
 
   // fillcomplete interface
   FillComplete();
-
+#endif
   return;
 }
 