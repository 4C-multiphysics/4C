From 6e4b7e94414e1b3721bfb48e5b8ebb5588a9c120 Mon Sep 17 00:00:00 2001
From: Tobias Wiesner <wiesner@lnm.mw.tum.de>
Date: Wed, 26 Nov 2014 11:49:33 +0100
Subject: [PATCH 12/16] Remove dependency from GlobalProblem in
 drt_discret_conditions.cpp

Should be fine for standard cases (standard conditions)
---
 src/drt_lib/drt_discret_conditions.cpp |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/drt_lib/drt_discret_conditions.cpp b/src/drt_lib/drt_discret_conditions.cpp
index 87e21f0..fc9dfbd 100644
--- a/src/drt_lib/drt_discret_conditions.cpp
+++ b/src/drt_lib/drt_discret_conditions.cpp
@@ -16,7 +16,7 @@ Maintainer: Michael Gee
 #include "drt_dserror.H"
 #include "drt_parobject.H"
 
-#include "drt_globalproblem.H"
+//#include "drt_globalproblem.H"
 #include "drt_condition_utils.H"
 #include "../linalg/linalg_utils.H"
 
@@ -82,11 +82,11 @@ void DRT::Discretization::BoundaryConditionsGeometry()
     //  - line conditions in 1D
     //  - surface conditions in 2D
     //  - volume conditions in 3D
-    else if ((int)(fool->second->GType())==DRT::Problem::Instance()->NDim())
+    /*else if ((int)(fool->second->GType())==DRT::Problem::Instance()->NDim())
       havenewelements = BuildVolumesinCondition(fool->first,fool->second);
     // dimension of condition must not larger than the one of the problem itself
     else if ((int)(fool->second->GType())>DRT::Problem::Instance()->NDim())
-      dserror("Dimension of condition is larger than the problem dimension.");
+      dserror("Dimension of condition is larger than the problem dimension.");*/
     // build a line element geometry description
     else if (fool->second->GType()==DRT::Condition::Line)
       havenewelements = BuildLinesinCondition(fool->first,fool->second);
-- 
1.7.7.6

