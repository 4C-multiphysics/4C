#
#
#--------------------------------------------------------------------
# list of possible defines:
#--------------------------------------------------------------------
# -DD_ALE        defines element ale (2D+3D)
# -DD_AXISHELL   defines axishell element
# -DD_BEAM3      defines element beam3
# -DD_BRICK1     defines element brick1
# -DD_FLUID2     defines element fluid2
# -DD_FLUID2_PRO defines element fluid2 with projection method
# -DFLUID2_ML    defines element fluid2 with multilevel 
# -DD_FLUID3     defines element fluid3
# -DFLUID3_ML    defines element fluid3 with multilevel 
# -DD_SHELL8     defines element shell8
# -DD_SHELL9     defines element shell9
# -DD_WALL1      defines element wall1
#
# -DGEMM         defines Generalized Energy-Momentum Int. Scheme
# -DD_FLUID      defines general fluid problem
# -DD_FSI        defines general FSI problem
# -DD_MAT        defines materials
# -DD_OPTIM      defines optimization
# -DRESULTTEST   defines defines result testing before checking in a new version
# -DS8CONTACT    defines contact algorithms for shell8 contact
# -DWALLCONTACT  defines contact algorithms for wall contact
#
# -DDEBUG        defines debug mode: routine and array tracing 
# -DPARALLEL     defines parallel version of programm
# -DSIXTYFOUR    defines 64bit compilation and linkage
# -DSUSE73       defines for compilation and linkage with gcc and g77 on Suselinux
# -DSUN          defines for compilation and linkage on CUSS Sunfire machine
# -DAZUSA        defines for compilation on azusa.hww.de
# -DHPUX10       defines for compilation on HPUX10
# -DHPUX11       defines for compilation on HPUX11
# -DHPUXITA      defines compilation for Itanium2 running HPUX11i
# 
# -DMLIB_PACKAGE       defines interface to solver library MLIB (HPUX11, sequentiell)
# -DHYPRE_PACKAGE      defines interface to solver library HYPRE (not yet impl.)
# -DAZTEC_PACKAGE      defines interface to solver library AZTEC
# -DPARSUPERLU_PACKAGE defines interface to solver library ParSuperLU
# -DSUPERLU_PACKAGE    defines interface to solver library SuperLU 
# -DMUMPS_PACKAGE      defines interface to solver library Mumps (only in parallel HPUX11)
# -DUMFPACK            defines interface to solver library Umfpack
# -DSPOOLES_PACKAGE    defines interface to solver library Spooles (only in parallel HPUX11)
#
# -DVISUAL2_PACKAGE    defines visualisation tool VISUAL2 (only in seriell)
#                      (add -lVisual2 -lX11 to INCLUDES!!!)
#--------------------------------------------------------------------
# 
PFL       =  -DSUN -DD_SHELL8 -DD_SHELL9 -DD_BRICK1 -DD_FLUID2 -DD_FLUID3 -DD_BEAM3 -DD_ALE -DD_WALL1  \
             -DPARALLEL -DSPOOLES_PACKAGE -DAZTEC_PACKAGE -DS8CONTACT -DD_CONTACT -DD_AXISHELL -DD_MAT
#
# set correct paths
# the library lib_sun.tar.gz is in /bau/stat16/users/statik/lib
#                                  /bau/stat33/users/statik/lib
# put the lib_sun.tar.gz in the same directory as the ccarat, 
# for example
# /users/stgt/<name>/ccarat
# /users/stgt/<name>/lib_sun.tar.gz
# make 
# gunzip lib_sun.tar.gz
# tar -xvf lib_sun.tar
# compile on the andromeda !!!!!!!!!!!!!!!!!!!!
# set correct HOMEDIR to the directory where you placed ccarat and lib_sun
HOMEDIR      =  /users/stgt/<name>
SRC          =  $(HOMEDIR)/ccarat/
METISDIR     =  $(HOMEDIR)/lib_sun/metis-4.0/Lib
SPOOLESDIR   =  $(HOMEDIR)/lib_sun/spooles
AZTECDIR     =  $(HOMEDIR)/lib_sun/aztec21/lib
NAGCDIR32      =  /soft/local/lpp/nagc/clsol06da 
NAGCDIR64      =  /soft/local/lpp/nagc/clso606da


#
# compilers
#
CC	 = mpcc
F77      = mpf90
LD       = $(CC)
RM	 = /bin/rm -f
#---------------------------------------------------------------
#                                            this is debug 32bit
#---------------------------------------------------------------
CFLAGS   = -g $(PFL) -xlic_lib=sunperf -DDEBUG
FFLAGS   = -g -dalign -xlic_lib=sunperf
LDFLAGS  = -g -xlic_lib=sunperf
LDOPTS   = -g -xlic_lib=sunperf
NAGCDIR  = $(NAGCDIR32)
LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) -L$(AZTECDIR)
LIBS	 = $(LIBPATHS) -lm -lmetis_sun32 -lspoolesMPI_sun32 -lspooles_sun32 -laztec_sun_par21_32 -lnagc -lm -mt -lmpi
PROGRAM  = cca_sun_debg.exe
#----------------------------------------------------------------
#                                             this is fast 32 bit
#----------------------------------------------------------------
#CFLAGS   = -fast -xtarget=ultra3 -xarch=v8plusb -xlic_lib=sunperf -xvector=s $(PFL)
#FFLAGS   = -fast -xtarget=ultra3 -xarch=v8plusb -dalign -xlic_lib=sunperf -xvector
#LDFLAGS  = -fast -xtarget=ultra3 -xarch=v8plusb -xlic_lib=sunperf -xvector=s
#LDOPTS   = -fast -xtarget=ultra3 -xarch=v8plusb -dalign -xlic_lib=sunperf -xvector
#NAGCDIR  = $(NAGCDIR32)
#LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) -L$(AZTECDIR)
#LIBS	  = $(LIBPATHS) -lm -lmetis_sun32 -lspoolesMPI_sun32 -lspooles_sun32 -laztec_sun_par21_32 -lnagc -lm -mt -lmpi
#PROGRAM  = cca_sun_fast32.exe
#----------------------------------------------------------------
#                                             this is fast 64 bit
#----------------------------------------------------------------
#CFLAGS   = -fast -xtarget=ultra3 -xarch=v9b -xlic_lib=sunperf -xvector=s $(PFL)
#FFLAGS   = -fast -xtarget=ultra3 -xarch=v9b -dalign -xlic_lib=sunperf -xvector
#LDFLAGS  = -fast -xtarget=ultra3 -xarch=v9b -xlic_lib=sunperf -xvector=s
#LDOPTS   = -fast -xtarget=ultra3 -xarch=v9b -dalign -xlic_lib=sunperf -xvector=s
#NAGCDIR  = $(NAGCDIR64)
#LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) 
#LIBS	  = $(LIBPATHS) -lm -lmetis_sun64 -lspoolesMPI_sun64 -lspooles_sun64 -lnagc -lm -mt -lmpi
#PROGRAM  = cca_sun_fast64.exe
#
#
#
INCLUDES  =  -I/usr/include/ -I$(NAGCDIR)/include
#
#----------------------- binaries -----------------------------------
include ./Makefile.objects
#--------------------------------------------------------------------
#
#
# targets
#
#
# dependencies
#
$(PROGRAM):     $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) $(OBJS7) $(OBJS8) \
                $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) \
                $(OBJS15) $(OBJS16) $(OBJS17) $(OBJS18) $(OBJS19) $(OBJS20) $(OBJS_OPT) \
		$(OBJS_AXISHELL) $(OBJS_MAT) $(OBJS_F2PRO)
		@echo "Linking $(LD) $(LDFLAGS) $(LIBS) -o $(PROGRAM)"
		@$(LD) $(LDFLAGS) $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) \
		$(OBJS15) $(OBJS16) $(OBJS17) $(OBJS18) $(OBJS19) $(OBJS20) $(OBJS_OPT) \
		$(OBJS_AXISHELL) $(OBJS_MAT) $(OBJS_F2PRO) \
		$(LIBS) -o $(PROGRAM)


		@echo "done"
$(OBJS1):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS2):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS3):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS4):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS5):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS6):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS7):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS8):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS9):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS10):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS11):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS12):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS14):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS15):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS16):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS17):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS18):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS19):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS20):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS_OPT):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS_AXISHELL):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $(*F).c $<
		@echo "MainMake is back."
#
$(OBJS_MAT):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS_F2PRO):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
# fortran
$(OBJS13):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(F77) $(FFLAGS)  -c $(*F).f $<
		@echo "MainMake is back."

.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<
.f.o:
	$(F77) $(FFLAGS) -c $<
clean:
	rm -rf  $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) \
                $(OBJS13) $(OBJS14) $(OBJS15) $(OBJS16) $(OBJS17) $(OBJS18) \
                $(OBJS19) $(OBJS20) $(OBJS_OPT) $(OBJS_AXISHELL) $(OBJS_MAT) \
                $(OBJS_F2PRO) 

