#--------------------------------------------------------------------
#    Makefile CCARAT (parallel and sequentiel)
#--------------------------------------------------------------------
#
#--------------------------------------------------------------------
# list of possible defines:
#--------------------------------------------------------------------
#  
#  ELEMENTS:
#  =========
# -DD_ALE        defines element ale (2D+3D)
# -DD_AXISHELL   defines axishell element
# -DD_BEAM3      defines element beam3
# -DD_BRICK1     defines element brick1
# -DD_FLUID2     defines element fluid2
# -DD_FLUID2_PRO defines element fluid2 with projection method
# -DFLUID2_ML    defines element fluid2 with multilevel 
# -DD_FLUID3     defines element fluid3
# -DFLUID3_ML    defines element fluid3 with multilevel 
# -DD_SHELL8     defines element shell8
# -DD_SHELL9     defines element shell9
# -DD_WALL1      defines element wall1
# -DD_INTERF     defines interface element
# -DD_WALLGE     defines gradient enhanced wall element
#
#  PROBLEMTYPES:
#  =============
# -DD_FLUID      defines general fluid problem
# -DD_FSI        defines general FSI problem
# -DD_OPTIM      defines optimization
# -DD_CONTACT    defines contact algorithms
#
#  ADDITIONAL FEATURES:
#  ====================
# -DD_MAT        defines materials
# -DS8CONTACT    defines contact algorithms for shell8 contact
# -DWALLCONTACT  defines contact algorithms for wall contact
# -DGEMM         defines Generalized Energy-Momentum Int. Scheme
#
#  TOOLS:
#  ======
# -DRESULTTEST   defines defines result testing before checking in a new version
# -DPERF         defines routines for exact time measurements 
#
#  PLATFORMS:
#  ==========
# -DHPUX10       defines for compilation on HP-UX 10.20
# -DHPUX11       defines for compilation on HP-UX 11.0
# -DHPUXITA      defines compilation for Itanium2 running HP-UX 11.23
# -DSUSE73       defines for compilation and linkage with gcc and g77 on Linux
# -DAZUSA        defines for compilation on azusa.hww.de
# -DSUN          defines for compilation and linkage on CUSS Sunfire machine
#
# -DDEBUG        defines debug mode: routine and array tracing 
# -DPARALLEL     defines parallel version of programm
# -DSIXTYFOUR    defines 64bit compilation and linkage
#
#  SOLVERS:
#  ========
# -DAZTEC_PACKAGE      defines interface to solver library AZTEC
# -DUMFPACK            defines interface to solver library Umfpack
# -DSPOOLES_PACKAGE    defines interface to solver library Spooles (only in parallel HPUX11)
#
#  INACTIVE SOLVERS:
#  =================
# -DMLIB_PACKAGE       defines interface to solver library MLIB (HPUX11, sequentiell)
# -DHYPRE_PACKAGE      defines interface to solver library HYPRE (not yet impl.)
# -DPARSUPERLU_PACKAGE defines interface to solver library ParSuperLU
# -DSUPERLU_PACKAGE    defines interface to solver library SuperLU 
# -DMUMPS_PACKAGE      defines interface to solver library Mumps (only in parallel HPUX11)
#
#  VISUAL:
#  =======
# -DVISUAL2_PACKAGE    defines visualisation tool VISUAL2 (only in seriell)
# -DVISUAL3_PACKAGE    defines visualisation tool VISUAL3 (only in seriell)
#
#
#--------------------------------------------------------------------
#  use these defines for compilation
#--------------------------------------------------------------------
PFL1  = -DSUN -DPARALLEL \
	-DD_FLUID -DD_FLUID2 -DD_FLUID3 -DD_FSI -DD_ALE \
	-DD_AXISHELL -DD_BRICK1 -DD_OPTIM -DD_BEAM3 -DD_SHELL9 -DD_MAT \
	-DD_SHELL8 -DD_CONTACT -DS8CONTACT \
        -DD_WALL1 -DD_INTERF  -DD_WALLGE \
        -DRESULTTEST -DPERF \
        -DUMFPACK -DAZTEC_PACKAGE
#
#
# set correct paths
# the library lib_sun.tar.gz is in /bau/stat16/users/statik/lib
#                                  /bau/stat33/users/statik/lib
# put the lib_sun.tar.gz in the same directory as the ccarat, 
# for example
# /users/stgt/<name>/ccarat
# /users/stgt/<name>/lib_sun.tar.gz
# make 
# gunzip lib_sun.tar.gz
# tar -xvf lib_sun.tar
# compile on the andromeda !!!!!!!!!!!!!!!!!!!!
# set correct HOMEDIR to the directory where you placed ccarat and lib_sun
HOMEDIR      =  /users/stgt/<name>
SRC          =  $(HOMEDIR)/ccarat/
METISDIR     =  $(HOMEDIR)/lib_sun/metis-4.0/Lib
SPOOLESDIR   =  $(HOMEDIR)/lib_sun/spooles
AZTECDIR     =  $(HOMEDIR)/lib_sun/aztec21/lib
NAGCDIR32      =  /soft/local/lpp/nagc/clsol06da 
NAGCDIR64      =  /soft/local/lpp/nagc/clso606da


#
# compilers
#
CC	 = mpcc
F77      = mpf90
LD       = $(CC)
RM	 = /bin/rm -f
#---------------------------------------------------------------
#                                            this is debug 32bit
#---------------------------------------------------------------
CFLAGS   = -g $(PFL) -xlic_lib=sunperf -DDEBUG
FFLAGS   = -g -dalign -xlic_lib=sunperf
LDFLAGS  = -g -xlic_lib=sunperf
LDOPTS   = -g -xlic_lib=sunperf
NAGCDIR  = $(NAGCDIR32)
LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) -L$(AZTECDIR)
LIBS	 = $(LIBPATHS) -lm -lmetis_sun32 -lspoolesMPI_sun32 -lspooles_sun32 -laztec_sun_par21_32 -lnagc -lm -mt -lmpi
PROGRAM  = cca_sun_debg.exe
#----------------------------------------------------------------
#                                             this is fast 32 bit
#----------------------------------------------------------------
#CFLAGS   = -fast -xtarget=ultra3 -xarch=v8plusb -xlic_lib=sunperf -xvector=s $(PFL)
#FFLAGS   = -fast -xtarget=ultra3 -xarch=v8plusb -dalign -xlic_lib=sunperf -xvector
#LDFLAGS  = -fast -xtarget=ultra3 -xarch=v8plusb -xlic_lib=sunperf -xvector=s
#LDOPTS   = -fast -xtarget=ultra3 -xarch=v8plusb -dalign -xlic_lib=sunperf -xvector
#NAGCDIR  = $(NAGCDIR32)
#LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) -L$(AZTECDIR)
#LIBS	  = $(LIBPATHS) -lm -lmetis_sun32 -lspoolesMPI_sun32 -lspooles_sun32 -laztec_sun_par21_32 -lnagc -lm -mt -lmpi
#PROGRAM  = cca_sun_fast32.exe
#----------------------------------------------------------------
#                                             this is fast 64 bit
#----------------------------------------------------------------
#CFLAGS   = -fast -xtarget=ultra3 -xarch=v9b -xlic_lib=sunperf -xvector=s $(PFL)
#FFLAGS   = -fast -xtarget=ultra3 -xarch=v9b -dalign -xlic_lib=sunperf -xvector
#LDFLAGS  = -fast -xtarget=ultra3 -xarch=v9b -xlic_lib=sunperf -xvector=s
#LDOPTS   = -fast -xtarget=ultra3 -xarch=v9b -dalign -xlic_lib=sunperf -xvector=s
#NAGCDIR  = $(NAGCDIR64)
#LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) 
#LIBS	  = $(LIBPATHS) -lm -lmetis_sun64 -lspoolesMPI_sun64 -lspooles_sun64 -lnagc -lm -mt -lmpi
#PROGRAM  = cca_sun_fast64.exe
#
#
#
INCLUDES  =  -I/usr/include/ -I$(NAGCDIR)/include
#
#----------------------- binaries -----------------------------------
include ./Makefile.objects
#--------------------------------------------------------------------
#
#
# targets
#
#
#
#
$(PROGRAM):	$(OBJS_MAIN) $(OBJS_GLOBAL) $(OBJS_SOLVER) $(OBJS_PSS) $(OBJS_INPUT) \
		$(OBJS_PAR) $(OBJS_MATH) $(OBJS_OUTPUT) $(OBJS_FORTRAN) \
		$(OBJS_FLUID) $(OBJS_FLUID3) $(OBJS_FLUID2) $(OBJS_ALE) \
		$(OBJS_FSI) $(OBJS_F2PRO) $(OBJS_F2ML) $(OBJS_F3ML) \
		$(OBJS_BRICK1) $(OBJS_BEAM3) $(OBJS_OPT) $(OBJS_MAT) \
		$(OBJS_SHELL9) $(OBJS_SHELL8) $(OBJS_AXISHELL) \
		$(OBJS_WALL1) $(OBJS_WALLGE) $(OBJS_IF)
		@echo "Linking $(PROGRAM) ..."
		@$(LD) $(LDFLAGS) \
		$(OBJS_MAIN) $(OBJS_GLOBAL) $(OBJS_SOLVER) $(OBJS_PSS) $(OBJS_INPUT) \
		$(OBJS_PAR) $(OBJS_MATH) $(OBJS_OUTPUT) $(OBJS_FORTRAN) \
		$(OBJS_FLUID) $(OBJS_FLUID3) $(OBJS_FLUID2) $(OBJS_ALE) \
		$(OBJS_FSI) $(OBJS_F2PRO) $(OBJS_F2ML) $(OBJS_F3ML) \
		$(OBJS_BRICK1) $(OBJS_BEAM3) $(OBJS_OPT) $(OBJS_MAT) \
		$(OBJS_SHELL9) $(OBJS_SHELL8) $(OBJS_AXISHELL) \
		$(OBJS_WALL1) $(OBJS_WALLGE) $(OBJS_IF) \
		$(LIBS) $(INCLUDES) -o $(PROGRAM)
		@echo "done"


$(OBJS_MAIN):
                touch src/headers/compile_settings.h
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_GLOBAL):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_SOLVER):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_PSS):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_INPUT):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_FLUID3):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_SHELL8):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_ALE):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_PAR):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_BRICK1):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_MATH):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_OUTPUT):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_WALL1):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_FLUID2):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_FLUID):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_FSI):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_SHELL9):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_BEAM3):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_F2ML):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_F3ML):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_OPT):     
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_AXISHELL):     
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_MAT):     
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_F2PRO):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_IF):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

$(OBJS_WALLGE):
		$(CC) $(CFLAGS) $(INCLUDES) -c ${SRC}/${@D}/$(*F).c -o ${SRC}/$@

# fortran
$(OBJS_FORTRAN):     
		$(F77) $(FFLAGS)  -c ${SRC}/${@D}/$(*F).f -o ${SRC}/$@

.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

.f.o:
	$(F77) $(FFLAGS) $(INCLUDES) -c $< -o $@

clean:
	rm -rf 	$(OBJS_MAIN) $(OBJS_GLOBAL) $(OBJS_SOLVER) $(OBJS_PSS) $(OBJS_INPUT) \
		$(OBJS_PAR) $(OBJS_MATH) $(OBJS_OUTPUT) $(OBJS_FORTRAN) \
		$(OBJS_FLUID) $(OBJS_FLUID3) $(OBJS_FLUID2) $(OBJS_ALE) \
		$(OBJS_FSI) $(OBJS_F2PRO) $(OBJS_F2ML) $(OBJS_F3ML) \
		$(OBJS_BRICK1) $(OBJS_BEAM3) $(OBJS_OPT) $(OBJS_MAT) \
		$(OBJS_SHELL9) $(OBJS_SHELL8) $(OBJS_AXISHELL) \
		$(OBJS_WALL1) $(OBJS_WALLGE) $(OBJS_IF)
#
