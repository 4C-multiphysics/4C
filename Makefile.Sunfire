#
#
#--------------------------------------------------------------------
# list of possible defines:
#--------------------------------------------------------------------
#  
# -DD_BRICK1    defines element brick1
# -DD_SHELL8    defines element shell8
# -DD_FLUID2    defines element fluid2
# -DD_FLUID3    defines element fluid3
# -DD_ALE       defines element ale
# -DD_WALL1     defines element wall1
#
# -DDEBUG     defines debug mode: routine and array tracing 
# -DPARALLEL  defines parallel version of programm
# -DSIXTYFOUR defines 64bit compilation and linkage
# -DSUSE73    defines for compilation and linkage with gcc and g77 on Suselinux
# -DSUN       defines for compilation and linkage on CUSS Sunfire machine
# 
# -DMLIB_PACKAGE       defines interface to solver library MLIB (HPUX11, sequentiell)
# -DHYPRE_PACKAGE      defines interface to solver library HYPRE
# -DAZTEC_PACKAGE      defines interface to solver library AZTEC
# -DPARSUPERLU_PACKAGE defines interface to solver library ParSuperLU
# -DSUPERLU_PACKAGE    defines interface to solver library SuperLU (not impl. yet)
# -DUMFPACK            defines interface to solver library Umfpack
# -DMUMPS_PACKAGE      defines interface to solver library Mumps (only in parallel HPUX11)
# -DSPOOLES_PACKAGE    defines interface to solver library Spooles (only in parallel)
#
# 
PFL       =  -DSUN -DD_SHELL8 -DD_BRICK1 -DD_FLUID2 -DD_FLUID3 -DD_ALE -DD_WALL1  \
             -DPARALLEL -DSPOOLES_PACKAGE -DAZTEC_PACKAGE
#
# set correct paths
# the library lib_sun.tar.gz is in /bau/stat16/users/statik/lib
#                                  /bau/stat33/users/statik/lib
# put the lib_sun.tar.gz in the same directory as the ccarat, 
# for example
# /users/stgt/<name>/ccarat
# /users/stgt/<name>/lib_sun.tar.gz
# make 
# gunzip lib_sun.tar.gz
# tar -xvf lib_sun.tar
# compile on the andromeda !!!!!!!!!!!!!!!!!!!!
# set correct HOMEDIR to the directory where you placed ccarat and lib_sun
HOMEDIR      =  /users/stgt/gee
SRC          =  $(HOMEDIR)/ccarat/src
METISDIR     =  $(HOMEDIR)/lib_sun/metis-4.0/Lib
SPOOLESDIR   =  $(HOMEDIR)/lib_sun/spooles
AZTECDIR     =  $(HOMEDIR)/lib_sun/aztec21/lib
NAGCDIR32      =  /soft/local/lpp/nagc/clsol06da 
NAGCDIR64      =  /soft/local/lpp/nagc/clso606da


#
# compilers
#
CC	 = mpcc
F77      = mpf90
LD       = $(CC)
RM	 = /bin/rm -f
#---------------------------------------------------------------
#                                            this is debug 32bit
#---------------------------------------------------------------
#CFLAGS   = -g $(PFL) -xlic_lib=sunperf -DDEBUG
#FFLAGS   = -g -dalign -xlic_lib=sunperf
#LDFLAGS  = -g -xlic_lib=sunperf
#LDOPTS   = -g -xlic_lib=sunperf
#NAGCDIR  = $(NAGCDIR32)
#LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) -L$(AZTECDIR)
#LIBS	  = $(LIBPATHS) -lm -lmetis_sun32 -lspoolesMPI_sun32 -lspooles_sun32 -laztec_sun_par21_32 -lnagc -lm -mt -lmpi
#PROGRAM  = cca_sun_debg.exe
#----------------------------------------------------------------
#                                             this is fast 32 bit
#----------------------------------------------------------------
CFLAGS   = -fast -xtarget=ultra3 -xarch=v8plusb -xlic_lib=sunperf -xvector=s $(PFL)
FFLAGS   = -fast -xtarget=ultra3 -xarch=v8plusb -dalign -xlic_lib=sunperf -xvector
LDFLAGS  = -fast -xtarget=ultra3 -xarch=v8plusb -xlic_lib=sunperf -xvector=s
LDOPTS   = -fast -xtarget=ultra3 -xarch=v8plusb -dalign -xlic_lib=sunperf -xvector
NAGCDIR  = $(NAGCDIR32)
LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) -L$(AZTECDIR)
LIBS	 = $(LIBPATHS) -lm -lmetis_sun32 -lspoolesMPI_sun32 -lspooles_sun32 -laztec_sun_par21_32 -lnagc -lm -mt -lmpi
PROGRAM  = cca_sun_fast32.exe
#----------------------------------------------------------------
#                                             this is fast 64 bit
#----------------------------------------------------------------
#CFLAGS   = -fast -xtarget=ultra3 -xarch=v9b -xlic_lib=sunperf -xvector=s $(PFL)
#FFLAGS   = -fast -xtarget=ultra3 -xarch=v9b -dalign -xlic_lib=sunperf -xvector
#LDFLAGS  = -fast -xtarget=ultra3 -xarch=v9b -xlic_lib=sunperf -xvector=s
#LDOPTS   = -fast -xtarget=ultra3 -xarch=v9b -dalign -xlic_lib=sunperf -xvector=s
#NAGCDIR  = $(NAGCDIR64)
#LIBPATHS = -L/usr/lib -L$(NAGCDIR) -R$(NAGCDIR) -L$(METISDIR) -L$(SPOOLESDIR) 
#LIBS	  = $(LIBPATHS) -lm -lmetis_sun64 -lspoolesMPI_sun64 -lspooles_sun64 -lnagc -lm -mt -lmpi
#PROGRAM  = cca_sun_fast64.exe
#
#
#
INCLUDES  =  -I/usr/include/ -I$(NAGCDIR)/include
#
#
# binaries
#
OBJS1         = ${SRC}/main/main_ccarat.o 
#                global_full
OBJS2	      = ${SRC}/global_full/global_control.o \
                ${SRC}/global_full/global_inp_control.o \
                ${SRC}/global_full/global_cal_control.o \
                ${SRC}/global_full/global_init_control.o \
                ${SRC}/global_full/global_ass_dof.o \
                ${SRC}/global_full/cal_dyn_control.o \
                ${SRC}/global_full/cal_static_control.o \
                ${SRC}/global_full/cal_nlnstatic_control.o \
                ${SRC}/global_full/cal_nlndyn_struct.o \
                ${SRC}/global_full/cal_nlndyn_stru_expl.o \
                ${SRC}/global_full/cal_static_service.o \
                ${SRC}/global_full/dyn_timecurve.o \
                ${SRC}/global_full/dyn_service.o \
                ${SRC}/global_full/map_node_find.o \
                ${SRC}/global_full/global_mask_matrices.o \
                ${SRC}/global_full/global_mask_msr.o \
                ${SRC}/global_full/global_mask_vbr.o \
                ${SRC}/global_full/global_mask_mds.o \
                ${SRC}/global_full/global_dofconnect.o \
                ${SRC}/global_full/global_mask_parcsr.o \
                ${SRC}/global_full/global_mask_ucchb.o \
                ${SRC}/global_full/global_mask_dense.o \
                ${SRC}/global_full/global_mask_rcptr.o \
                ${SRC}/global_full/global_mask_ccf.o \
                ${SRC}/global_full/global_mask_skyline.o \
                ${SRC}/global_full/global_mask_spooles.o \
                ${SRC}/global_full/global_calelm.o \
                ${SRC}/global_full/global_calelm_dyn.o \
                ${SRC}/global_full/global_calelm_fluid.o \
                ${SRC}/global_full/global_calrhs.o \
                ${SRC}/global_full/solver_control.o \
                ${SRC}/global_full/solver_service.o \
                ${SRC}/global_full/solver_service2.o \
                ${SRC}/global_full/solver_add_data.o \
                ${SRC}/global_full/solver_add_msr.o \
                ${SRC}/global_full/solver_add_mlib.o \
                ${SRC}/global_full/solver_add_parcsr.o \
                ${SRC}/global_full/solver_add_ucchb.o \
                ${SRC}/global_full/solver_add_dense.o \
                ${SRC}/global_full/solver_add_rcptr.o \
                ${SRC}/global_full/solver_add_ccf.o \
                ${SRC}/global_full/solver_add_skyline.o \
                ${SRC}/global_full/solver_add_spooles.o \
                ${SRC}/global_full/solver_mlib.o \
                ${SRC}/global_full/solver_aztec.o \
                ${SRC}/global_full/solver_hypre.o \
                ${SRC}/global_full/solver_superlu.o \
                ${SRC}/global_full/solver_lapack.o \
                ${SRC}/global_full/solver_mumps.o \
                ${SRC}/global_full/solver_umfpack.o \
                ${SRC}/global_full/solver_colsol.o \
                ${SRC}/global_full/solver_spooles.o \
                ${SRC}/global_full/restart_control.o \
                ${SRC}/global_full/machine_hpux.o 
#                pss_full
OBJS3	      = ${SRC}/pss_full/pss_am.o \
                ${SRC}/pss_full/pss_ds.o \
                ${SRC}/pss_full/pss_fr.o \
                ${SRC}/pss_full/pss_pss.o 
#                input_full
OBJS4	      = ${SRC}/input_full/input_control_global.o \
                ${SRC}/input_full/input_ctr_head.o \
                ${SRC}/input_full/input_sol.o \
                ${SRC}/input_full/input_design.o \
                ${SRC}/input_full/input_design_top.o \
                ${SRC}/input_full/input_mesh.o \
                ${SRC}/input_full/input_topology.o \
                ${SRC}/input_full/input_curves.o \
                ${SRC}/input_full/input_material.o \
                ${SRC}/input_full/inherit_insidedesign.o \
                ${SRC}/input_full/inherit_design_dis.o \
                ${SRC}/input_full/input_conditions.o
#                fluid3
OBJS5	      = ${SRC}/fluid3/f3_inpele.o 
#                shell8
OBJS6	      = ${SRC}/shell8/s8_main.o \
                ${SRC}/shell8/s8_inpele.o \
                ${SRC}/shell8/s8_restart.o \
                ${SRC}/shell8/s8_intg.o \
                ${SRC}/shell8/s8_jaco.o \
                ${SRC}/shell8/s8_a3.o \
                ${SRC}/shell8/s8_loccoordnode.o \
                ${SRC}/shell8/s8_funcderiv.o \
                ${SRC}/shell8/s8_static_ke.o \
                ${SRC}/shell8/s8_static_keug.o \
                ${SRC}/shell8/s8_cal_dyn.o \
                ${SRC}/shell8/s8_stress.o \
                ${SRC}/shell8/s8_tfte.o \
                ${SRC}/shell8/s8_tforce.o \
                ${SRC}/shell8/s8_tvkg.o \
                ${SRC}/shell8/s8_load1.o \
                ${SRC}/shell8/s8_tmtr.o \
                ${SRC}/shell8/s8_mtr.o \
                ${SRC}/shell8/s8_tvmr.o \
                ${SRC}/shell8/s8_tvbo.o \
                ${SRC}/shell8/s8_tvhe_linear.o \
                ${SRC}/shell8/s8_tvhe.o \
                ${SRC}/shell8/s8_tvma.o \
                ${SRC}/shell8/s8_tmat.o \
                ${SRC}/shell8/s8_eps.o \
                ${SRC}/shell8/s8_intforce.o \
                ${SRC}/shell8/s8_mat_linel.o \
                ${SRC}/shell8/s8_btdb.o \
                ${SRC}/shell8/s8_eas.o \
                ${SRC}/shell8/s8_ans.o \
                ${SRC}/shell8/s8_vthv.o \
                ${SRC}/shell8/s8_xint.o \
                ${SRC}/shell8/s8_init.o 
#                ale
OBJS7	      = ${SRC}/ale/ale_inpele.o 
#                parallel
OBJS8	      = ${SRC}/parallel/par_initmetis.o \
                ${SRC}/parallel/par_make_comm.o \
                ${SRC}/parallel/par_assignmesh.o
#                brick1
OBJS9	      = ${SRC}/brick1/b1_inpele.o \
                ${SRC}/brick1/b1_intg.o \
                ${SRC}/brick1/b1_static_ke.o \
                ${SRC}/brick1/b1_funcderiv.o \
                ${SRC}/brick1/b1_bop.o \
                ${SRC}/brick1/b1_jaco.o \
                ${SRC}/brick1/b1_mat_linel.o \
                ${SRC}/brick1/b1_call_stiff.o \
                ${SRC}/brick1/b1_main.o
#                math
OBJS10	      = ${SRC}/math/sort_find.o \
                ${SRC}/math/math1.o
#                output
OBJS11	      = ${SRC}/output/out_global.o \
                ${SRC}/output/out_gid_msh.o \
                ${SRC}/output/out_gid_sol.o
#                wall1
OBJS12	      = ${SRC}/wall1/w1_bop.o \
                ${SRC}/wall1/w1_cal_deriv.o \
                ${SRC}/wall1/w1_cal_eps.o \
                ${SRC}/wall1/w1_cal_stress.o \
                ${SRC}/wall1/w1_call_mat.o \
                ${SRC}/wall1/w1_call_stiff.o \
                ${SRC}/wall1/w1_funcderiv.o \
                ${SRC}/wall1/w1_init.o \
                ${SRC}/wall1/w1_inpele.o \
                ${SRC}/wall1/w1_intg.o \
                ${SRC}/wall1/w1_jaco.o \
                ${SRC}/wall1/w1_main.o \
                ${SRC}/wall1/w1_mat_linel.o \
                ${SRC}/wall1/w1_mat_plast_dp.o \
                ${SRC}/wall1/w1_mat_plast_epc.o \
                ${SRC}/wall1/w1_mat_plast_epc_serv.o \
                ${SRC}/wall1/w1_mat_plast_mises.o \
                ${SRC}/wall1/w1_mat_plast_serv.o \
                ${SRC}/wall1/w1_mat_serv.o \
                ${SRC}/wall1/w1_static_ke.o \
                ${SRC}/wall1/w1_static_keug.o \
                ${SRC}/wall1/w1_boplin.o \
                ${SRC}/wall1/w1_defgrad.o \
                ${SRC}/wall1/w1_call_matgeononl.o \
                ${SRC}/wall1/w1_mat_linelgeonon.o \
                ${SRC}/wall1/w1_cal_kg.o \
                ${SRC}/wall1/w1_cal_keu.o \
                ${SRC}/wall1/w1_cal_fint.o \
                ${SRC}/wall1/w1_cal_fext.o \
                ${SRC}/wall1/w1_mat_trans.o
#                fluid2
OBJS14        = ${SRC}/fluid2/f2_caldirich.o \
                ${SRC}/fluid2/f2_calelesize.o \
                ${SRC}/fluid2/f2_calele.o \
                ${SRC}/fluid2/f2_calfuncderiv.o \
                ${SRC}/fluid2/f2_calint.o \
                ${SRC}/fluid2/f2_caliterrhs.o \
                ${SRC}/fluid2/f2_calgalmat.o \
                ${SRC}/fluid2/f2_caljaco.o \
                ${SRC}/fluid2/f2_calservice.o \
                ${SRC}/fluid2/f2_calstabpar.o \
                ${SRC}/fluid2/f2_calstabmat.o \
                ${SRC}/fluid2/f2_caltimerhs.o \
                ${SRC}/fluid2/f2_inpele.o \
                ${SRC}/fluid2/f2_intg.o \
                ${SRC}/fluid2/f2_main.o 
#                fluid_full
OBJS15        = ${SRC}/fluid_full/cal_fluid.o \
                ${SRC}/fluid_full/fluid_dirich.o \
                ${SRC}/fluid_full/fluid_imp_semimp.o \
                ${SRC}/fluid_full/fluid_pr_mcorr.o \
                ${SRC}/fluid_full/fluid_stationary.o \
                ${SRC}/fluid_full/fluid_service.o \
		${SRC}/fluid_full/inp_fluid_start_data.o
#                fortran
OBJS13	      = ${SRC}/fortran/colsol.o 
#
#
# targets
#
#
# dependencies
#
$(PROGRAM):     $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) $(OBJS7) $(OBJS8) \
                $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) $(OBJS15)
		@echo "Linking $(LD) $(LDFLAGS) $(LIBS) -o $(PROGRAM)"
		@$(LD) $(LDFLAGS) $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) \
		$(OBJS15) $(LIBS) -o $(PROGRAM)


		@echo "done"
$(OBJS1):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS2):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS3):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS4):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS5):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS6):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS7):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS8):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS9):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS10):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS11):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS12):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS14):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
#
$(OBJS15):     
		@echo "Making $@ ..."
		cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c $*.c $<
		@echo "MainMake is back."
# fortran
$(OBJS13):     
		@echo "Making $@ ..."
		cd ${@D}; $(F77) $(FFLAGS)  -c $*.f $<
		@echo "MainMake is back."

.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<
.f.o:
	$(F77) $(FFLAGS) -c $<
clean:
	rm -rf  $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) \
                $(OBJS13) $(OBJS14) $(OBJS15) 

