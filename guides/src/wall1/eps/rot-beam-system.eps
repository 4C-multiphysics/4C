%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: rot-beam-system.eps
%%BoundingBox: 148 261 593 668
%%DocumentFonts: CMMI12 CMR10 CMR17
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -E -u +psfonts.cmz
%+ /tmp/figtex2eps-6192/rot-beam-system.dvi -o
%+ /home/wiechert/Lehre/SS2008/script/current/eps6/rot-beam-system.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.05.30:0746
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B7B8EA25C51F
6E0D18A5F1D71A4C364491F28B70940A87F37311783290D21B15D803B484A7C9
E6A909F25B779F9BBFD6C336AF845AC82A3C96F26513BD77325ED305A259DD0F
914972FC97EF9636CFC91F389DD23ED3DD38EBDB124C2EC6F23A3B17DCA035C4
2D8FF7F75EFD2319A1FA6ABF5F0D29B437D7915196A4C1EE72EAE61AF69B8971
1B52884E88E20AE079971159A15BDFB1F07903E67B560CC21475015B2E35385B
70E2AF4EF8B4C2EE6C86CB27B5B79011B8039D4242C1EC102AF1D1D925F7D280
B2D85AD5392686351B5C997199C0957B55850AD22B640A1D6F966CF04526FA63
DEAE3324FB3EA5A336762481168ECA63EB560148535CD7D48F4BBDE2860FEF1A
2AC6C398D18ECB6DC7AD0F198D97029E696B62CBA7F88901370BF4A18DB02F8A
5BF402FF92D6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3C8578EF9A20A0E06E
4F7ADDAF0E7D1E182D115BF1AD931977325AD391E72E2B13CC108E3726C11099
E2000623188AAAC9F3E233EB253BDD8B0A4759A66A113E066238B0086AC1B634
5ABFF90E4B5ED3FA69C22541981B2BFC9710AEF6B50A8BB53431C7B4D380D721
639E005D6B4688EE16BFF48443E7C9E5FB5BC5883E271CB034289232A0694CCE
12A5A2637485FB47BC281A213666C9859E580CE59CFDEC9BE4B40398E2B84425
3CF8A27AF81A2FB17BB5F71213554C91FAC93265ECFE7B38A3192E902D480D53
BCADDEE6127FF16199E331CE7BE6F13812C0FA7FF243B5D0105F4F07D605D87D
A5AEAEE835C37D3E277FEF4D376966485D96FED9708999732B178AD19DDF12EC
EBDF4B6F176B85943E397161F9B5DCB8554CFBCB3E187957D49CA175A0B6244B
B5FFC53201730723DDAEBC48F55BE423B0FDE425B23B9D210D2FC630F6FA7B11
D96C138D9C418650741C1729297E7E09E8F4060310CB49400425B80C78083787
5D5CE70D69604F6575A831F2D36E3B11788857535A045905B2357597063596E1
47BA6CD16AADF911F004CDA264527B6C3EDE9EDF6697EAB1FCF6C5420256F322
25D745196E5786EEF2471C8425F7BFA9EBE568AEFEC6003CA2729657C245C5EF
03FCDD889BE356DDD6BCE8AC2E56FF6738102DEC18300604BBECF042EFC89CB2
54D6FC32BA6C9437D0847BDD76B10E14E2464C45B11F09436A6B952CFA84E9FC
75B39F4455F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /theta put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 86 /V put
dup 88 /X put
dup 104 /h put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0DA1186446DD565542BCCC7D339A1EB34C7F49246E8D72E987EB477C6DB757
99AF86CEBCD7605C487A00CD2CD093098182DC57B20D78ECE0BECF3A0BF88EBA
C866DB19F34BBBED6634AFC0F08D2AFB2A92578A6F8B4ADCD6594737FF6EED7D
5B536DA9E3E2CADB40DB7C600EA4D100D33C3B92B1CF857E012C4EB370BA8295
55B50047C6F33435B9123262C85C6E99FF855EE4DBCFCFED7E2319A27F475B72
77CA706478C5779A7F2DD1E017BA3DF7E6EF5902C9C0FBD4B7D3CA52B2EBF55E
A57D0445A8580631A15945FA5ACE68CFAA1B5815C97CAC52C794EB693447D334
409088AC7155BDD89D63AB033907EAA2DDB95337914B8AC6FD29F1558E448C8B
A5FA2DE4DECC43DCA823D6DB27E24592D74A3FCDE9D3A41A7EF349DC7E3DE194
770E59D9669F9E1CD699339861068052AE2B5647B858011F2C9990F60D26E1A1
6DF10D1DE8E8109AA7CEA5F5A076CFD1D28EB2B343B199F77768E7D2C5AC3A54
C6A0EDDE513D45A88E65194F05EC947F6A9FA9A2F3E830D2757CB8E7B15CF420
1651F273A133D388C26C9BF4CB375F2D6B4A8F451760E2DD3FAE54CF77592E95
C697827D96AE3DDD4DA29F3E1A7139219CA0AAF0C2E7823677D8D642C3623E7C
07F13C453CE42A1D0F467028D0B26579B153D20C831CED0298DB738C99E58993
8B10BDA72B28AE0849AC4A7245ABA2D092AA91CF6EB91BD702342DC406BB129A
B2324DFBBC1638B67B06C1D0F7F982282B98120CFBCD7D7BA04B2202C4B46F97
21935357CE365A097E9104449D7145CEB9C9C3A0B647C2E8A0B3BD194FDA5EDA
282BBA442A6990F6741ED2E6FAB3FF80822EBC11BC7B00398C45BB1E69F2B58A
F1328A6CD8DB4FE96B424C73EB9611043EDDC9871EE43E7460D6EAE069EF3290
C69B58C91A51684905573ADF901A4238452CCDEBAE67FD07039B44EA87219F17
A5B1FAB001A6FC24A6E9CCEE20A4F62DF2C1C50CC5BE340DA4E28247CB3C3223
A6B774B5715DA18F21698666C5E86EFB65264DBAC887FA3D7A2D21492E7112D5
ACAFFB8C133CB0D14894B54FC9642FBC9A1CEDEBAA55D6D6F65D3AA46D74BD01
7088271A42B146F02F6BFBAA7F5AB11EFFF5308BC36E1122B851D47358275A04
AAD4206D363D16685AC28F8DC8438421F7DC3551CC58213A4CB07662CCB3F2DE
9BF395143E6B5705402EF2CBC8ED185E3E9330EC0BCC6FD1769D67B3A6F46137
2AB473ECA684974D7FD54B9AC8222A362DDA3A64AD309B445D3B234C8F2BF459
61A11FFA3362ABD1F45C04C33D2B0E16DC68988E59EC8A1E3EBC6D086F81C050
E6BCF8AEADC4ED6D27FE3A591BCD8E42BA4970E37923E4057BC291F41CE4A0EE
F8BD8B51D218D2F03837E638317DD1B3C4B65580905CE103345677A1252C81CE
3B6B08611A98218223FF7CAD610A5EDE79C61F611969D81ED9D58500134A5F92
338E264B858E518CB08F9D5B410E63918E6FD9779A44B61C1FA115B317AF523C
03FBCEC25C8B1080E638D656C692653A50C4AE81359B7EF4E220E4859FFE3A71
E74F16001E385EEC73A0A1D28504AA0B99C320F600858D9F1C7D4B8E89748937
CEB519A2C68F20047B3104819EC56B17E8359DEDF750C02DC0964ACE07619743
200DC7F7F24FE3B5D3D2F099DB53058886DE0924DB9512F31469FCC6251104F1
B6A95B3DE00E9AB4C0CBFC96DA9C09AF688BA4EE04A6AF7FFD8036937C2AE559
F4D7E6BBE0E049B21E98C2F488D8DC116EE632130F54BD7FCE17A431E8336FB9
8C0137EAC55AE6B4D32DBA0E5DE35D1A3BD2293A180FBCBF95A0C8F90728D2AA
A1FF3390C1564CB2C64AC745B9A4F00672CACEEDD5B43CFECCEBC7DA8B0E810D
847123938C006803597410AC621D32A1B911F38EB02CCF9C140AFDC52C4D36B8
25A9D8958423F6CA9EFA2BB9E2CDDF4EF99A0C605EAC2D281DA82E94E77933AA
D28322CD65AAF5D7B66E75BD92C13E2B2C7DD59435DD5A4DDCEF7981BAF713DF
AA5AAC5DE986E75AFB91A1C86CF475928FDE6AEE74E6E30C47C6ED21A490C614
581C949944180B7E923D05020460FA94D649B1472BF7EB5BD0FF4DD2E0AD2E47
8509C3EE511CB3B8504590562139F4E6D67F70D63D48B25CA6D43EFFE2B1AA07
26A08DD281A83E7E7598363840E99CC45713B2D3387B19BF1D3AEF87E4A89FD8
6E73ED90DC7882482C3F7EA818E6A8ECC2FB666C18BB46456D80408F6FE27660
E22FED926B27153BFD530852848828A1ABE9CBBB7CE5D097A8E94D675B52B13F
F480E289C4CFCA15605A3DCE9F30777F29FAC46BE053E4752F8323121B447D6A
2FE50FBBEAA220831A6C013B1A15AB8886661B486699C91E1526AB53E7B452A1
6734285B786B58904C8C42F8B45A48FBCE9BFF519048BF374F26B27988BEB006
8BA2A501CD07CE406B18736000996DFD1F1C620AC4417754FF5B542823485A58
322B0A97C9E8694FF74AAD474D037212544C851D8F2FD4F6BAFB1FA22588B04E
8F52D242A63C19028AF8094A22AA3AD30CC684A93A0699FBCCAE28DBB6A39050
EBFE758E64CDAB25AE779528DBAC1D07CEFE0E58A83A7EBF57CB5D6C453C43D1
A877F7368C5D2DB5029104393ABA1E65A7CADBB0471B2B9C0FBE36A00D0D5FB0
8D37520A301F1EBB829D4AE14CB6DF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600
(/tmp/figtex2eps-6192/rot-beam-system.dvi) @start /Fa
205[65 50[{}1 141.137 /CMR17 rf /Fb 205[49 49 49[{}2
98.7958 /CMR10 rf /Fc 151[80 15[115 1[81 7[111 134 94
57[64 18[{}7 141.137 /CMMI12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 639 3815 a @beginspecial
0 @llx 0 @lly 443 @urx 405 @ury 4430 @rwi @setspecial
%%BeginDocument: /tmp/figtex2eps-6192/rot-beam-system.pstex
%!PS-Adobe-2.0 EPSF-2.0
%%Title: rot-beam-system.eps
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Fri May 30 07:46:29 2008
%%For: wiechert@reynolds.lnm.mw.tum.de (Lena Wiechert,,,)
%%BoundingBox: 0 0 443 405
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 405 moveto 0 0 lineto 443 0 lineto 443 405 lineto closepath clip newpath
59.8 242.6 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 52
% Polyline
n 4500 2475 m 4725 2475 l 4725 2925 l 4500 2925 l
 4500 2475 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 300.00 165.00] PATmp PATsp ef gr PATusp 
% Polyline
n -225 2475 m 0 2475 l 0 2925 l -225 2925 l
 -225 2475 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 -15.00 165.00] PATmp PATsp ef gr PATusp 
% Polyline
n 1081 -1647 m 1193 -1842 l 1583 -1617 l 1471 -1422 l
 1081 -1647 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 72.07 -122.80] PATmp PATsp ef gr PATusp 
% Polyline
n -502 2895 m -390 2700 l 0 2925 l -113 3120 l
 -502 2895 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 -33.47 180.00] PATmp PATsp ef gr PATusp 
% Arc
7.500 slw
gs  clippath
835 1498 m 788 1575 l 968 1687 l 839 1554 l 1015 1610 l cp
eoclip
n 158.6 2801.0 1421.8 5.0 -62.1 arcn
gs col0 s gr
 gr

% arrowhead
n 1015 1610 m 839 1554 l 968 1687 l  col0 s
% Arc
gs  clippath
1603 -2247 m 1629 -2301 l 1493 -2367 l 1588 -2287 l 1467 -2313 l cp
eoclip
n 1407.7 -2036.6 312.8 -51.4 -151.1 arcn
gs col0 s gr
 gr

% arrowhead
n 1467 -2313 m 1588 -2287 l 1493 -2367 l 1467 -2313 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5415 2970 m 5415 2880 l 5203 2880 l 5383 2925 l 5203 2970 l cp
eoclip
n 0 2925 m
 5400 2925 l gs col0 s gr gr

% arrowhead
n 5203 2970 m 5383 2925 l 5203 2880 l  col0 s
% Polyline
gs  clippath
45 -1140 m -45 -1140 l -45 -927 l 0 -1107 l 45 -927 l cp
eoclip
n 0 2925 m
 0 -1125 l gs col0 s gr gr

% arrowhead
n 45 -927 m 0 -1107 l -45 -927 l  col0 s
% Polyline
n 0 3150 m
 0 3600 l gs col0 s gr 
% Polyline
n 4500 3150 m
 4500 3600 l gs col0 s gr 
% Polyline
gs  clippath
4515 3495 m 4515 3435 l 4364 3435 l 4484 3465 l 4364 3495 l cp
-15 3435 m -15 3495 l 136 3495 l 16 3465 l 136 3435 l cp
eoclip
n 0 3465 m
 4500 3465 l gs col0 s gr gr

% arrowhead
n 136 3435 m 16 3465 l 136 3495 l 136 3435 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 4364 3495 m 4484 3465 l 4364 3435 l 4364 3495 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4860 2475 m
 5220 2475 l gs col0 s gr 
% Polyline
gs  clippath
5055 2940 m 5115 2940 l 5115 2789 l 5085 2909 l 5055 2789 l cp
5115 2460 m 5055 2460 l 5055 2611 l 5085 2491 l 5115 2611 l cp
eoclip
n 5085 2475 m
 5085 2925 l gs col0 s gr gr

% arrowhead
n 5115 2611 m 5085 2491 l 5055 2611 l 5115 2611 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 5055 2789 m 5085 2909 l 5115 2789 l 5055 2789 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1651 -1734 m
 1853 -2085 l gs col0 s gr 
% Polyline
n 2430 -1284 m
 2633 -1635 l gs col0 s gr 
% Polyline
gs  clippath
1795 -2014 m 1750 -1936 l 1933 -1829 l 1800 -1959 l 1978 -1907 l cp
eoclip
n 1786 -1968 m
 2565 -1518 l gs col0 s gr gr

% arrowhead
n 1978 -1907 m 1800 -1959 l 1933 -1829 l  col0 s
% Polyline
15.000 slw
n 1471 -1422 m
 1081 -1647 l gs col0 s gr 
% Polyline
n -390 2700 m
 0 2925 l gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
989 -2149 m 960 -2097 l 1091 -2021 l 1002 -2107 l 1120 -2073 l cp
eoclip
n 1417 -1869 m
 988 -2116 l gs col0 s gr gr

% arrowhead
n 1120 -2073 m 1002 -2107 l 1091 -2021 l 1120 -2073 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1804 -2390 m 1752 -2419 l 1677 -2288 l 1763 -2377 l 1729 -2258 l cp
eoclip
n 1456 -1846 m
 1771 -2392 l gs col0 s gr gr

% arrowhead
n 1729 -2258 m 1763 -2377 l 1677 -2288 l 1729 -2258 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 0 2475 m 4500 2475 l 4500 2925 l 0 2925 l
 0 2475 l  cp gs col0 s gr 
% Polyline
2 slj
n 0 2925 m 1 2924 l 2 2921 l 5 2915 l 10 2906 l 17 2893 l
 26 2876 l 37 2855 l 50 2830 l 65 2800 l 82 2768 l
 100 2732 l 119 2694 l 139 2654 l 159 2613 l 179 2570 l
 200 2528 l 220 2485 l 239 2443 l 258 2401 l 276 2359 l
 294 2318 l 311 2277 l 327 2237 l 343 2196 l 358 2156 l
 373 2116 l 387 2075 l 401 2034 l 415 1992 l 429 1949 l
 443 1904 l 456 1858 l 470 1811 l 480 1775 l 491 1738 l
 501 1700 l 511 1662 l 522 1622 l 533 1581 l 544 1539 l
 555 1496 l 566 1452 l 577 1407 l 589 1361 l 600 1314 l
 612 1266 l 624 1217 l 636 1168 l 648 1118 l 660 1067 l
 673 1015 l 685 963 l 698 910 l 710 858 l 723 805 l
 736 751 l 748 698 l 761 645 l 773 593 l 786 540 l
 798 488 l 811 436 l 823 385 l 835 335 l 847 286 l
 859 237 l 871 189 l 882 142 l 894 96 l 905 51 l
 916 7 l 927 -36 l 938 -78 l 949 -119 l 960 -159 l
 970 -197 l 980 -235 l 991 -272 l 1001 -308 l 1015 -355 l
 1028 -401 l 1042 -446 l 1056 -489 l 1070 -531 l 1084 -572 l
 1098 -613 l 1113 -653 l 1128 -693 l 1144 -734 l 1160 -774 l
 1177 -815 l 1195 -856 l 1213 -898 l 1232 -940 l 1251 -982 l
 1271 -1025 l 1292 -1067 l 1312 -1110 l 1332 -1151 l 1352 -1191 l
 1371 -1229 l 1389 -1265 l 1406 -1297 l 1421 -1327 l 1434 -1352 l
 1445 -1373 l 1454 -1390 l 1461 -1403 l 1466 -1412 l 1469 -1418 l
 1470 -1421 l
 1471 -1422 l gs col0 s gr 
% Polyline
n -390 2700 m -389 2699 l -388 2696 l -385 2690 l -380 2681 l -373 2668 l
 -364 2651 l -353 2630 l -340 2605 l -325 2575 l -308 2543 l
 -290 2507 l -271 2469 l -251 2429 l -231 2388 l -211 2345 l
 -190 2303 l -170 2260 l -151 2218 l -132 2176 l -114 2134 l
 -96 2093 l -79 2052 l -63 2012 l -47 1971 l -32 1931 l
 -17 1891 l -3 1850 l 11 1809 l 25 1767 l 39 1724 l
 53 1679 l 66 1633 l 80 1586 l 90 1550 l 101 1513 l
 111 1475 l 121 1437 l 132 1397 l 143 1356 l 154 1314 l
 165 1271 l 176 1227 l 187 1182 l 199 1136 l 210 1089 l
 222 1041 l 234 992 l 246 943 l 258 893 l 270 842 l
 283 790 l 295 738 l 308 685 l 320 633 l 333 580 l
 346 526 l 358 473 l 371 420 l 383 368 l 396 315 l
 408 263 l 421 211 l 433 160 l 445 110 l 457 61 l
 469 12 l 481 -36 l 492 -83 l 504 -129 l 515 -174 l
 526 -218 l 537 -261 l 548 -303 l 559 -344 l 570 -384 l
 580 -422 l 590 -460 l 601 -497 l 611 -533 l 625 -580 l
 638 -626 l 652 -671 l 666 -714 l 680 -756 l 694 -797 l
 708 -838 l 723 -878 l 738 -918 l 754 -959 l 770 -999 l
 787 -1040 l 805 -1081 l 823 -1123 l 842 -1165 l 861 -1207 l
 881 -1250 l 902 -1292 l 922 -1335 l 942 -1376 l 962 -1416 l
 981 -1454 l 999 -1490 l 1016 -1522 l 1031 -1552 l 1044 -1577 l
 1055 -1598 l 1064 -1615 l 1071 -1628 l 1076 -1637 l 1079 -1643 l
 1080 -1646 l
 1081 -1647 l gs col0 s gr 
% Polyline
0 slj
 [60] 0 sd
n -390 2700 m 1860 -1197 l 2250 -972 l 0 2925 l
 -390 2700 l  cp gs col0 s gr  [] 0 sd
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 3925 3494 a Fc(X)4040
3515 y Fb(1)p Black 0 0 0 TeXcolorrgb 875 1273 a Fc(X)990
1294 y Fb(2)p Black 0 0 0 TeXcolorrgb 2390 848 a Fa(2)p
Fc(h)p Black 0 0 0 TeXcolorrgb 2106 588 a(N)p Black 0 0 0
TeXcolorrgb 1522 777 a(V)p Black 0 0 0 TeXcolorrgb 1627
541 a(M)p Black 0 0 0 TeXcolorrgb 2154 3777 a(L)p Black
0 0 0 TeXcolorrgb 3878 3258 a(h)p Black 0 0 0 TeXcolorrgb
1823 2761 a(\022)p Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
