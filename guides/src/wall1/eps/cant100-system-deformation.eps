%!PS-Adobe-2.0 EPSF-2.0
%%Title: cant100-system-deformation.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Feb 12 15:57:12 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 201
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
1.000 UL
LTb
780 600 M
63 0 V
5670 0 R
-63 0 V
stroke
660 600 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (-3)]
] -66.7 MRshow
grestore
1.000 UL
LTb
780 1146 M
63 0 V
5670 0 R
-63 0 V
stroke
660 1146 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (-2)]
] -66.7 MRshow
grestore
1.000 UL
LTb
780 1692 M
63 0 V
5670 0 R
-63 0 V
stroke
660 1692 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
780 2238 M
63 0 V
5670 0 R
-63 0 V
stroke
660 2238 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
grestore
1.000 UL
LTb
780 2784 M
63 0 V
5670 0 R
-63 0 V
stroke
660 2784 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
780 600 M
0 63 V
0 2121 R
0 -63 V
stroke
780 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1872 600 M
0 63 V
0 2121 R
0 -63 V
stroke
1872 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
grestore
1.000 UL
LTb
2964 600 M
0 63 V
0 2121 R
0 -63 V
stroke
2964 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
grestore
1.000 UL
LTb
4056 600 M
0 63 V
0 2121 R
0 -63 V
stroke
4056 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 6)]
] -66.7 MCshow
grestore
1.000 UL
LTb
5148 600 M
0 63 V
0 2121 R
0 -63 V
stroke
5148 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 8)]
] -66.7 MCshow
grestore
1.000 UL
LTb
6240 600 M
0 63 V
0 2121 R
0 -63 V
stroke
6240 400 M
gsave 0 setgray
[ [(Times-Roman) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
780 600 M
5733 0 V
0 2184 V
-5733 0 V
780 600 L
LTb
200 1692 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Italic) 200.0 0.0 true true 0 (X)]
[(Times) 160.0 -60.0 true true 0 (2)]
[(Times-Italic) 200.0 0.0 true true 0 (,x)]
[(Times) 160.0 -60.0 true true 0 (2)]
[(Times-Italic) 200.0 0.0 true true 0 (,u)]
[(Times) 160.0 -60.0 true true 0 (2)]
] -46.7 MCshow
grestore
grestore
LTb
3646 100 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (X)]
[(Times) 160.0 -60.0 true true 0 (1)]
[(Times-Italic) 200.0 0.0 true true 0 (,x)]
[(Times) 160.0 -60.0 true true 0 (1)]
[(Times-Italic) 200.0 0.0 true true 0 (,u)]
[(Times) 160.0 -60.0 true true 0 (1)]
] -46.7 MCshow
grestore
1.000 UP
1.000 UL
LT1
LTb
4020 1163 M
gsave 0 setgray
[ [(Helvet) 200.0 0.0 true true 0 (undeformed state)]
] -66.7 MRshow
grestore
LT1
4140 1163 M
543 0 V
780 2238 M
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
273 0 R
273 0 V
0 55 V
-273 0 V
0 -55 V
0.500 UP
1.000 UL
LT0
LTb
4020 963 M
gsave 0 setgray
[ [(Helvet) 200.0 0.0 true true 0 (Q1)]
] -66.7 MRshow
grestore
LT0
4140 963 M
543 0 V
780 2238 M
273 0 V
0 54 V
-273 1 V
0 -55 V
273 0 R
273 -2 V
0 55 V
-273 1 V
0 -54 V
273 -2 R
273 -2 V
0 55 V
-273 2 V
0 -55 V
273 -2 R
273 -3 V
0 55 V
-273 3 V
0 -55 V
273 -3 R
273 -3 V
0 54 V
-273 4 V
0 -55 V
273 -3 R
272 -5 V
1 55 V
-273 4 V
0 -54 V
272 -5 R
273 -5 V
1 55 V
-273 5 V
-1 -55 V
273 -5 R
273 -5 V
1 54 V
-273 6 V
-1 -55 V
273 -5 R
273 -6 V
1 54 V
-273 6 V
-1 -54 V
273 -6 R
273 -7 V
1 55 V
-273 6 V
-1 -54 V
273 -7 R
273 -7 V
1 55 V
-273 7 V
-1 -55 V
273 -7 R
273 -7 V
1 54 V
-273 8 V
-1 -55 V
273 -7 R
273 -8 V
1 54 V
-273 8 V
-1 -54 V
273 -8 R
272 -8 V
2 54 V
-273 8 V
-1 -54 V
272 -8 R
273 -9 V
2 55 V
-273 8 V
-2 -54 V
273 -9 R
273 -8 V
2 54 V
-273 9 V
-2 -55 V
273 -8 R
273 -9 V
2 54 V
-273 9 V
-2 -54 V
273 -9 R
273 -9 V
2 54 V
-273 9 V
-2 -54 V
273 -9 R
273 -9 V
1 54 V
-272 9 V
-2 -54 V
273 -9 R
272 -9 V
2 54 V
-273 9 V
-1 -54 V
780 2238 CircleF
1053 2238 CircleF
1053 2292 CircleF
780 2293 CircleF
780 2238 CircleF
1053 2238 CircleF
1326 2236 CircleF
1326 2291 CircleF
1053 2292 CircleF
1053 2238 CircleF
1326 2236 CircleF
1599 2234 CircleF
1599 2289 CircleF
1326 2291 CircleF
1326 2236 CircleF
1599 2234 CircleF
1872 2231 CircleF
1872 2286 CircleF
1599 2289 CircleF
1599 2234 CircleF
1872 2231 CircleF
2145 2228 CircleF
2145 2282 CircleF
1872 2286 CircleF
1872 2231 CircleF
2145 2228 CircleF
2417 2223 CircleF
2418 2278 CircleF
2145 2282 CircleF
2145 2228 CircleF
2417 2223 CircleF
2690 2218 CircleF
2691 2273 CircleF
2418 2278 CircleF
2417 2223 CircleF
2690 2218 CircleF
2963 2213 CircleF
2964 2267 CircleF
2691 2273 CircleF
2690 2218 CircleF
2963 2213 CircleF
3236 2207 CircleF
3237 2261 CircleF
2964 2267 CircleF
2963 2213 CircleF
3236 2207 CircleF
3509 2200 CircleF
3510 2255 CircleF
3237 2261 CircleF
3236 2207 CircleF
3509 2200 CircleF
3782 2193 CircleF
3783 2248 CircleF
3510 2255 CircleF
3509 2200 CircleF
3782 2193 CircleF
4055 2186 CircleF
4056 2240 CircleF
3783 2248 CircleF
3782 2193 CircleF
4055 2186 CircleF
4328 2178 CircleF
4329 2232 CircleF
4056 2240 CircleF
4055 2186 CircleF
4328 2178 CircleF
4600 2170 CircleF
4602 2224 CircleF
4329 2232 CircleF
4328 2178 CircleF
4600 2170 CircleF
4873 2161 CircleF
4875 2216 CircleF
4602 2224 CircleF
4600 2170 CircleF
4873 2161 CircleF
5146 2153 CircleF
5148 2207 CircleF
4875 2216 CircleF
4873 2161 CircleF
5146 2153 CircleF
5419 2144 CircleF
5421 2198 CircleF
5148 2207 CircleF
5146 2153 CircleF
5419 2144 CircleF
5692 2135 CircleF
5694 2189 CircleF
5421 2198 CircleF
5419 2144 CircleF
5692 2135 CircleF
5965 2126 CircleF
5966 2180 CircleF
5694 2189 CircleF
5692 2135 CircleF
5965 2126 CircleF
6237 2117 CircleF
6239 2171 CircleF
5966 2180 CircleF
5965 2126 CircleF
4411 963 CircleF
0.500 UP
1.000 UL
LT0
LTb
4020 763 M
gsave 0 setgray
[ [(Helvet) 200.0 0.0 true true 0 (Q1E4)]
] -66.7 MRshow
grestore
LT0
4140 763 M
543 0 V
780 2238 M
272 -6 V
2 55 V
-274 6 V
0 -55 V
272 -6 R
271 -16 V
5 54 V
-274 17 V
-2 -55 V
271 -16 R
271 -28 V
6 55 V
-272 27 V
-5 -54 V
271 -28 R
269 -37 V
9 54 V
-272 38 V
-6 -55 V
269 -37 R
268 -46 V
11 54 V
-270 46 V
-9 -54 V
268 -46 R
267 -54 V
12 53 V
-268 55 V
-11 -54 V
267 -54 R
265 -63 V
13 53 V
-266 63 V
-12 -53 V
265 -63 R
263 -69 V
15 52 V
-265 70 V
-13 -53 V
263 -69 R
262 -77 V
16 52 V
-263 77 V
-15 -52 V
262 -77 R
259 -82 V
17 52 V
-260 82 V
-16 -52 V
259 -82 R
258 -88 V
18 51 V
-259 89 V
-17 -52 V
258 -88 R
256 -93 V
19 51 V
-257 93 V
-18 -51 V
256 -93 R
255 -97 V
20 51 V
-256 97 V
-19 -51 V
255 -97 R
253 -100 V
21 50 V
-254 101 V
-20 -51 V
253 -100 R
253 -104 V
21 50 V
-253 104 V
-21 -50 V
253 -104 R
251 -107 V
21 50 V
-251 107 V
-21 -50 V
251 -107 R
250 -108 V
22 50 V
-251 108 V
-21 -50 V
250 -108 R
5473 953 L
22 49 V
-250 111 V
-22 -50 V
5473 953 M
5722 841 L
22 50 V
-249 111 V
-22 -49 V
5722 841 M
5971 729 L
22 50 V
5744 891 L
-22 -50 V
780 2238 Crs
1052 2232 Crs
1054 2287 Crs
780 2293 Crs
780 2238 Crs
1052 2232 Crs
1323 2216 Crs
1328 2270 Crs
1054 2287 Crs
1052 2232 Crs
1323 2216 Crs
1594 2188 Crs
1600 2243 Crs
1328 2270 Crs
1323 2216 Crs
1594 2188 Crs
1863 2151 Crs
1872 2205 Crs
1600 2243 Crs
1594 2188 Crs
1863 2151 Crs
2131 2105 Crs
2142 2159 Crs
1872 2205 Crs
1863 2151 Crs
2131 2105 Crs
2398 2051 Crs
2410 2104 Crs
2142 2159 Crs
2131 2105 Crs
2398 2051 Crs
2663 1988 Crs
2676 2041 Crs
2410 2104 Crs
2398 2051 Crs
2663 1988 Crs
2926 1919 Crs
2941 1971 Crs
2676 2041 Crs
2663 1988 Crs
2926 1919 Crs
3188 1842 Crs
3204 1894 Crs
2941 1971 Crs
2926 1919 Crs
3188 1842 Crs
3447 1760 Crs
3464 1812 Crs
3204 1894 Crs
3188 1842 Crs
3447 1760 Crs
3705 1672 Crs
3723 1723 Crs
3464 1812 Crs
3447 1760 Crs
3705 1672 Crs
3961 1579 Crs
3980 1630 Crs
3723 1723 Crs
3705 1672 Crs
3961 1579 Crs
4216 1482 Crs
4236 1533 Crs
3980 1630 Crs
3961 1579 Crs
4216 1482 Crs
4469 1382 Crs
4490 1432 Crs
4236 1533 Crs
4216 1482 Crs
4469 1382 Crs
4722 1278 Crs
4743 1328 Crs
4490 1432 Crs
4469 1382 Crs
4722 1278 Crs
4973 1171 Crs
4994 1221 Crs
4743 1328 Crs
4722 1278 Crs
4973 1171 Crs
5223 1063 Crs
5245 1113 Crs
4994 1221 Crs
4973 1171 Crs
5223 1063 Crs
5473 953 Crs
5495 1002 Crs
5245 1113 Crs
5223 1063 Crs
5473 953 Crs
5722 841 Crs
5744 891 Crs
5495 1002 Crs
5473 953 Crs
5722 841 Crs
5971 729 Crs
5993 779 Crs
5744 891 Crs
5722 841 Crs
4411 763 Crs
1.000 UL
LTb
780 600 M
5733 0 V
0 2184 V
-5733 0 V
780 600 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvet Times Times-Italic Times-Roman
