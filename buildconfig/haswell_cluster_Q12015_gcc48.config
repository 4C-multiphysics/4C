CMAKE_COMMAND=cmake

# path to (Open)MPI
MPIDIR=/opt/openmpi/1.8.8/gcc
MPIRUN=$MPIDIR/bin/mpirun

# optimization flags (used for C and C++ code)
CFLAGS="-Wall -Wno-unknown-pragmas -mfpmath=sse -msse3"
CXXFLAGS="-std=c++11 -march=native -Wall -Wno-unknown-pragmas -Wno-unused-local-typedefs"
CXXFLAGSRELEASE="-O2 -funroll-loops"

# optimization flags for Fortran
FFLAGS="-Wall"
FFLAGSRELEASE="-O5 -funroll-all-loops -malign-double"

# linker flags, use gold linker because it is much faster...
LINKERFLAGS="-lhdf5_hl -lhdf5"
LINKERFLAGSRELEASE="-O2"

# library path (3d party libraries for BACI)
INCLUDE_INSTALL_DIR="/lnm/include"
LIB_INSTALL_DIR="/lnm/lib"

# path to Trilinos
Trilinos_PREFIX="/lnm/Q1_2015/trilinos"

# Trilinos package configuration
BUILD_Teko=OFF
BUILD_Stratimikos=OFF
BUILD_MueLu=ON
BUILD_MueLuExperimental=ON

if [ $USE_ACML == 1 ]; then
  echo "!!!!!!!!!!!!!!!!!!!!  WARNING  !!!!!!!!!!!!!!!!!!!!!!!!"
  echo "!! WARNING: ACML not supported on Haswell cluster    !!"
  echo "!! Switching to OpenBLAS instead.                    !!"
  echo "!!!!!!!!!!!!!!!!!!!!  WARNING  !!!!!!!!!!!!!!!!!!!!!!!!"
  echo
fi
# libM replacement
AMDLIBMDIR_PATH=""

# AMD core math library BLAS/LAPACK replacement
ACMLDIR_PATH=""
BLAS_LIBS="/lnm/lib/libopenblas.a"
LAPACK_LIBS="/lnm/lib/libopenblas.a"
BLA_VENDORSTRING="openBLAS.0.2.14"
echo "!!!!!!!!!!!!!!!!!!!!!!  INFO  !!!!!!!!!!!!!!!!!!!!!!!!!"
echo "!! Using high performance BLAS routines based on     !!"
echo "!! OpenBLAS.                                         !!"
echo "!!!!!!!!!!!!!!!!!!!!!!  INFO  !!!!!!!!!!!!!!!!!!!!!!!!!"

# deal package
if [ $USE_DEAL == 1 ]; then
  DEAL_II_DIR="/lnm/Q1_2015/deal.II/"
  BUILD_Deal=ON
fi

# boost library
BOOST_INCLUDEDIR=$INCLUDE_INSTALL_DIR
BOOST_LIBRARYDIR=$LIB_INSTALL_DIR
USE_USERSPECIFIED_BOOST=OFF # bypass cmake FindBoost script (default: OFF)
BOOST_EXCLUDE_SYSTEM_PATHS="OFF"

# SuperLu
FOUND_NO_SUPERLU=OFF
