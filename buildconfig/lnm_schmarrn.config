CMAKE_COMMAND=/lnm/cmake/3.17.0/bin/cmake

# path to (Open)MPI
MPIDIR=/lnm/mpi407_gcc930
MPIRUN=$MPIDIR/bin/mpirun

# optimization flags (used for C and C++ code)
CFLAGS="-Wall -Wno-unknown-pragmas -mfpmath=sse -msse3"
CXXFLAGS="-std=c++17 -march=native -Wall -Wno-unknown-pragmas -Wno-unused-local-typedefs"
CXXFLAGSRELEASE="-O2 -funroll-loops"

# optimization flags for Fortran
FFLAGS="-Wall"
FFLAGSRELEASE="-O5 -funroll-all-loops -malign-double"

# linker flags, use gold linker because it is much faster...
LINKERFLAGS="-lhdf5_hl -lhdf5"
LINKERFLAGSRELEASE="-O2"

# library path (3d party libraries for BACI)
INCLUDE_INSTALL_DIR="/lnm/include"
LIB_INSTALL_DIR="/lnm/lib"

# path to Trilinos
Trilinos_PREFIX="/lnm/2022_Q1/trilinos/trilinos_release"
USE_TRILINOS_2022_Q1=ON

# libM replacement
AMDLIBMDIR_PATH="/opt/acml4.4.0/gfortran64"

# AMD core math library BLAS/LAPACK replacement
ACMLDIR_PATH="/opt/acml4.4.0/gfortran64"
BLAS_LIBS="/opt/acml4.4.0/gfortran64/lib/libacml.a /opt/acml4.4.0/gfortran64/lib/libacml_mv.a"
LAPACK_LIBS="/opt/acml4.4.0/gfortran64/lib/libacml.a /opt/acml4.4.0/gfortran64/lib/libacml_mv.a"
BLA_VENDORSTRING="ACML.4.4.0"

# boost library
BOOST_INCLUDEDIR="/lnm/boost/gcc9/include"
BOOST_LIBRARYDIR="/lnm/boost/gcc9/lib"
USE_USERSPECIFIED_BOOST=ON # bypass cmake FindBoost script (default: OFF)
BOOST_EXCLUDE_SYSTEM_PATHS="OFF"

# qhull library
QHULL_LIBRARYDIR=$LIB_INSTALL_DIR
QHULL_INCLUDEDIR=$INCLUDE_INSTALL_DIR/qhull

echo "!!!!!!!!!!!!!!!!!!!!  WARNING  !!!!!!!!!!!!!!!!!!!!!!!!"
echo "!! ATTENTION for all XFEM users:                     !!"
echo "!! It seems that there's a bug in the ACML GEMM      !!"
echo "!! routine. Please use the slow standard BLAS        !!"
echo "!! implementation or try another HPC BLAS library,   !!"
echo "!! to be sure to produce valid results               !!"
echo "!!!!!!!!!!!!!!!!!!!!  WARNING  !!!!!!!!!!!!!!!!!!!!!!!!"
