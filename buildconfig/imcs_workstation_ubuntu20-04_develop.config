CMAKE_COMMAND="/imcs/public/compsim/opt/cmake-3.17.0-Linux-x86_64/bin/cmake"

# setup mpi directories
MPIDIR=/usr/lib/x86_64-linux-gnu/openmpi
MPIRUN=/usr/bin/mpirun

# compilers
CXX=mpic++
CC=mpicc
F90=mpif90

# optimization flags (used for C and C++ code)
CFLAGS="-Wall -Wno-unknown-pragmas -Wignored-qualifiers -mfpmath=sse -msse3"
CXXFLAGS="-std=c++17 -Wall -Wno-unknown-pragmas -Wignored-qualifiers -mfpmath=sse -msse3 -Wno-maybe-uninitialized -Wno-format-security"
CXXFLAGSRELEASE="-O2 -funroll-loops"

# optimization flags for Fortran
# NOTE: -lopen-pal can be removed once openmpi-4.0.7 or later is available on the workstations
FFLAGS="-Wall"
FFLAGSRELEASE="-O3 -funroll-all-loops -malign-double"

# linker flags, use gold linker because it is much faster...
LINKERFLAGS="-fuse-ld=gold -lopen-pal"
LINKERFLAGSRELEASE="-O2"

# library path (3rd party libraries for BACI)
TPL_DIR="/imcs/public/compsim/lib/TPL"
INCLUDE_INSTALL_DIR="$TPL_DIR/include"
LIB_INSTALL_DIR="$TPL_DIR/lib"

# path to Trilinos
Trilinos_PREFIX="$TRILINOS_ROOT"
TRILINOS_EXPERIMENTAL=ON

if [[ -z "${TRILINOS_ROOT}" ]]; then
  echo "!!!!!!!!!!!!!!!!!!!!!!  ERROR  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo "!!   You haven't assigned a path to Trilinos. Please       !!"
  echo "!!   assign it to the environment variable TRILINOS_ROOT.  !!"
  echo "!!!!!!!!!!!!!!!!!!!!!!  ERROR  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  exit 1
fi

# boost library
BOOST_INCLUDEDIR="/usr/include"
BOOST_LIBRARYDIR="/usr/lib/x86_64-linux-gnu"
USE_USERSPECIFIED_BOOST=OFF # bypass cmake FindBoost script (default: OFF)
BOOST_EXCLUDE_SYSTEM_PATHS="OFF"

# qhull library
QHULL_LIBRARYDIR=$LIB_INSTALL_DIR
QHULL_INCLUDEDIR=$INCLUDE_INSTALL_DIR/qhull

# Cubit PATH (only needed for framework tests)
CUBIT_PATH="/imcs/public/compsim/opt/cubit-13.2"

# ParaView-Python PATH (only needed for post_processing tests)
PARAVIEWPYTHON_PATH="/imcs/public/compsim/opt/ParaView-5.6.0-MPI-Linux-64bit/bin/pvpython"

# ignoring unstable cut test 
IGNORE_UNSTABLE_CUTTEST=ON

BACI_WITH_GOOGLETEST="OFF"
