{
  "version": 5,
  "configurePresets": [
    {
      "name": ".docker_base",
      "hidden": true,
      "generator": "Ninja",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RELEASE",
        "CMAKE_CXX_COMPILER": "/usr/bin/mpic++",
        "CMAKE_C_COMPILER": "/usr/bin/mpicc",
        "BACI_CXX_FLAGS": "-msse3 -Werror",
        "BACI_TRILINOS_ROOT": "/opt/baci-dependencies",
        "BACI_QHULL_ROOT": "/opt/baci-dependencies",
        "BACI_CLN_ROOT": "/opt/baci-dependencies",
        "BACI_PVPYTHON": "/opt/baci-dependencies-testing/ParaView-5.5.2-Qt5-MPI-Linux-64bit/bin/pvpython",
        "CMAKE_C_COMPILER_LAUNCHER": "ccache",
        "CMAKE_CXX_COMPILER_LAUNCHER": "ccache",
        "BACI_WITH_GOOGLETEST": "ON",
        "BACI_BUILD_DOXYGEN": "ON",
        "BACI_BUILD_READTHEDOCS": "ON",
        "BACI_DOXYGEN_USE_LOCAL_MATHJAX": "ON",
        "BACI_DOXYGEN_LOCAL_MATHJAX_BASEPATH": "/opt/baci-dependencies-testing/MathJax-2.7.9",
        "BACI_WITH_ARBORX": "ON",
        "BACI_WITH_BACKTRACE": "ON",
        "BACI_BACKTRACE_ROOT": "/opt/baci-dependencies",
        "BACI_WITH_MIRCO": "ON"
      }
    },
    {
      "name": "docker",
      "displayName": "Release build for Docker image",
      "description": "Build release version on a Docker image",
      "inherits": [
        ".docker_base"
      ]
    },
    {
      "name": "docker_debug",
      "displayName": "Optimized build with assertions for Docker image",
      "description": "Build release version including debug assertions on a Docker image",
      "inherits": [
        ".docker_base"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RELEASE",
        "FOUR_C_ENABLE_ASSERTIONS": "ON"
      }
    },
    {
      "name": "docker_asan",
      "displayName": "ASAN build for Docker image",
      "description": "Build release version with address sanitizer on a Docker image",
      "inherits": [
        ".docker_base"
      ],
      "cacheVariables": {
        "BACI_WITH_ADDRESS_SANITIZER": "ON"
      }
    },
    {
      "name": "docker_codeclimate",
      "displayName": "Code climate job with clang-tidy",
      "description": "Configure for code climate checks",
      "inherits": [
        ".docker_base"
      ],
      "cacheVariables": {
        "BACI_CXX_FLAGS": "-msse3"
      }
    },
    {
      "name": "docker_coverage",
      "displayName": "Coverage report for Docker image",
      "description": "Build unoptimized version with coverage instrumentation on a Docker image",
      "inherits": [
        ".docker_base"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "DEBUG",
        "BACI_ENABLE_COVERAGE": "ON"
      }
    }
  ]
}
