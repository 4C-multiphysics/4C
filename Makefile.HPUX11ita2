#--------------------------------------------------------------------
# include path to the source
#--------------------------------------------------------------------
include ./Makefile.personal_path
#
# Ausschalten der Ausgabe von Kommandos durch Make
#.SILENT:
#
#--------------------------------------------------------------------
#
# list of possible defines:
#  
# -DD_ALE        defines element ale (2D+3D)
# -DD_AXISHELL   defines axishell element
# -DD_BEAM3      defines element beam3
# -DD_BRICK1     defines element brick1
# -DD_FLUID2     defines element fluid2
# -DD_FLUID2_PRO defines element fluid2 with projection method
# -DD_FLUID3     defines element fluid3
# -DD_SHELL8     defines element shell8
# -DD_SHELL9     defines element shell9
# -DD_WALL1      defines element wall1
#
# -DGEMM         defines Generalized Energy-Momentum Int. Scheme
# -DD_FLUID      defines general fluid problem
# -DD_FSI        defines general FSI problem
# -DD_MAT        defines materials
# -DD_OPTIM      defines optimization
# -DRESULTTEST   defines defines result testing before checking in a new version
# -DS8CONTACT    defines contact algorithms for shell8 contact
# -DWALLCONTACT  defines contact algorithms for wall contact
#
# -DDEBUG        defines debug mode: routine and array tracing 
# -DPARALLEL     defines parallel version of programm
# -DSIXTYFOUR    defines 64bit compilation and linkage
# -DSUSE73       defines for compilation and linkage with gcc and g77 on Suselinux
# -DSUN          defines for compilation and linkage on CUSS Sunfire machine
# -DAZUSA        defines for compilation on azusa.hww.de
# -DHPUX10       defines for compilation on HPUX10
# -DHPUX11       defines for compilation on HPUX11
# -DHPUXITA      defines compilation for Itanium2 running HPUX11i
# 
# -DMLIB_PACKAGE       defines interface to solver library MLIB (HPUX11, sequentiell)
# -DHYPRE_PACKAGE      defines interface to solver library HYPRE (not yet impl.)
# -DAZTEC_PACKAGE      defines interface to solver library AZTEC
# -DPARSUPERLU_PACKAGE defines interface to solver library ParSuperLU
# -DSUPERLU_PACKAGE    defines interface to solver library SuperLU 
# -DMUMPS_PACKAGE      defines interface to solver library Mumps (only in parallel HPUX11)
# -DUMFPACK            defines interface to solver library Umfpack
# -DSPOOLES_PACKAGE    defines interface to solver library Spooles (only in parallel HPUX11)
#
# -DVISUAL2_PACKAGE    defines visualisation tool VISUAL2 (only in seriell)
#                      (add -lVisual2 -lX11 to INCLUDES!!!)
#--------------------------------------------------------------------
#====================================================================
# parallel part
#====================================================================
FXX	= /opt/mpi/bin/mpif90
CCX	= /opt/mpi/bin/mpicc 
LDX	= /opt/mpi/bin/mpif90 
PFL	= -DPARALLEL -DHPUXITA -DD_FLUID -DD_FSI -DD_OPTIM  \
	  -DD_FLUID2 -DD_FLUID3 -DD_WALL1 -DD_SHELL9 -DD_BRICK1 -DD_SHELL8 -DD_ALE \
	  -DD_FLUID2_PRO -DD_BEAM3  -DD_AXISHELL -DD_MAT \
	  -DSPOOLES_PACKAGE -DAZTEC_PACKAGE
NAME	= par
MPI	= -lmpi
#====================================================================
# sequentiell part
#====================================================================
#FXX	 = f90
#CCX	 = cc 
#LDX	 = f90 
#PFL	 = -DHPUXITA -DD_FLUID -DD_FSI -DD_OPTIM -DS8CONTACT -DD_CONTACT  \
#	   -DD_FLUID2 -DD_FLUID3 -DD_WALL1 -DD_SHELL9 -DD_BRICK1 -DD_SHELL8 -DD_ALE \
#	   -DD_AXISHELL -DD_MAT -DSPOOLES_PACKAGE 
#NAME	 = seq
#MPI	 = 
#--------------------------------------------------------------------     
#------------------------------------------------- this is debg-32bit
#PROGRAM_NAME  = cca_$(NAME)_32_debg.11i
#CFLAGS        = +DSitanium -Aa -Ae -g +w1 -z \
#		 ${PFL} -DDEBUG
#FFLAGS        = +DSitanium -g
#LDFLAGS       = +DSitanium -g -v +A
#AZTEC         = -laztec_ita2_32_$(NAME)
#METIS         = -lmetis_ita2_32
#UMFPACK       =
#SPOOLES       = -lspooles_ita2_32
#------------------------------------------------- this is fast-32bit
#PROGRAM_NAME  = cca_$(NAME)_32_fast.11i
#CFLAGS        = +DSitanium -Aa -Ae +O3 +Onolimit +Optrs_to_globals +Odataprefetch  \
#		 +Onoinitcheck +Oinline +Oclone +w1 -z ${PFL} 
#FFLAGS        = +DSitanium +O3 +Onolimit +Onoptrs_to_globals +Oinline
#LDFLAGS       = +DSitanium +O -v +A 
#AZTEC         = -laztec_ita2_32_$(NAME)
#METIS         = -lmetis_ita2_32
#UMFPACK       =
#SPOOLES       = -lspooles_ita2_32
#------------------------------------------------- this is debg-64bit
#PROGRAM_NAME  = cca_$(NAME)_64_debg.11i
#CFLAGS        = +DSitanium -Aa -Ae +DD64 -g +w1 -z \
#                ${PFL} -DSIXTYFOUR -DDEBUG 
#FFLAGS        = +DSitanium +DD64 -g
#LDFLAGS       = +DSitanium +DD64 -v +A
#AZTEC         = -laztec_ita2_64_$(NAME)
#METIS         = -lmetis_ita2_64
#UMFPACK       = 
#SPOOLES       = -lspooles_ita2_64
#------------------------------------------------- this is fast-64bit
PROGRAM_NAME  = cca_$(NAME)_64_fast.11i
CFLAGS        = +DSitanium -Aa -Ae +DD64 +O3 +Onolimit +Optrs_to_globals +Odataprefetch \
		+Onoinitcheck +Oinline +Oclone +w1 -z ${PFL} -DSIXTYFOUR 
FFLAGS        = +DSitanium +DD64 +O3 +Onolimit +Onoptrs_to_globals +Oinline
LDFLAGS       = +DSitanium +DD64 -O -v +A
AZTEC	      = -laztec_ita2_64_$(NAME)
METIS	      = -lmetis_ita2_64
UMFPACK       = 
SPOOLES       = -lspooles_ita2_64
#--------------------------------------------------------------------
# general part
#--------------------------------------------------------------------
CC	 = $(CCX)
F90      = $(FXX)
LD       = $(LDX)
RM	 = /bin/rm -f
#
#--------------------------------------------------------------------
# libs
#--------------------------------------------------------------------
LIBS	      =  -L/bau/stat16/users/statik/lib/lib_ita2_hpux/metis \
                 -L/bau/stat16/users/statik/lib/lib_ita2_hpux/aztec21/lib \
                 -L/bau/stat16/users/statik/lib/lib_ita2_hpux/umfpack/lib \
                 -L/bau/stat16/users/statik/lib/lib_ita2_hpux/spooles \
                 $(METIS) \
                 $(AZTEC) \
                 $(UMFPACK) \
                 $(SPOOLES) \
                 -lcl -lc -lm -lveclib -llapack $(MPI)  
#----------------------- binaries -----------------------------------
include ./Makefile.objects
#--------------------------------------------------------------------                
#
#
# targets
#
PROGRAM       = $(PROGRAM_NAME)
#
# dependencies
#
$(PROGRAM):     $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) $(OBJS7) $(OBJS8) \
                $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) $(OBJS14) $(OBJS15) \
                $(OBJS16) $(OBJS17) $(OBJS18) $(OBJS_OPT) $(OBJS_AXISHELL) $(OBJS_MAT) $(OBJS_F2PRO) 
		@echo "Linking $(PROGRAM) ..."
		@$(LD) $(LDFLAGS) $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) $(OBJS13) \
                $(OBJS14) $(OBJS15) $(OBJS16) $(OBJS17) $(OBJS18) $(OBJS_OPT) \
                $(OBJS_AXISHELL)  $(OBJS_MAT) $(OBJS_F2PRO) \
		$(LIBS) $(INCLUDES) -o $(PROGRAM)
		@echo "done"

#
$(OBJS1):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS2):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS3):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS4):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS5):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS6):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS7):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS8):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS9):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS10):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS11):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS12):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS14):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS15):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS16):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS17):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS18):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS_OPT):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS_AXISHELL):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS_MAT):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
#
$(OBJS_F2PRO):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(CC) $(CFLAGS) $(INCLUDES) -c  ${<F}
		@echo "MainMake is back."
# FORTRAN90
$(OBJS13):     
		@echo "Making $@ ..."
		cd ${SRC}; cd ${@D}; $(F90) $(FFLAGS)  -c  ${<F}
		@echo "MainMake is back."
#

.c.o:
	@ echo "$@ wird kompiliert...."
	$(CC) $(CFLAGS) $(INCLUDES) -c  $<

.f.o:
	@ echo "$@ wird kompiliert...."
	$(FXX) $(FFLAGS) $(INCLUDES) -c  $<
clean:
	rm -rf  $(OBJS1) $(OBJS2) $(OBJS3) $(OBJS4) $(OBJS5) $(OBJS6) \
                $(OBJS7) $(OBJS8) $(OBJS9) $(OBJS10) $(OBJS11) $(OBJS12) \
                $(OBJS13) $(OBJS14) $(OBJS15) $(OBJS16) $(OBJS17) $(OBJS18) \
		$(OBJS_OPT) $(OBJS_AXISHELL) $(OBJS_MAT) $(OBJS_F2PRO)
$
